schema {
  query: RootQuery
  mutation: RootMutation
}

"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """
  The variable name to export this field as.
  """
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """
  Specify the store key.
  """
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

"""
The root entry point into the Graph
"""
type RootQuery {
  """
  Entry point to get all settings for the site
  """
  allSettings: Settings @deprecated(reason: "")

  """
  The cart object
  """
  cart: Cart @deprecated(reason: "")

  """
  The cart object
  """
  cartFee(id: ID!): CartFee @deprecated(reason: "")

  """
  The cart object
  """
  cartItem(key: ID!): CartItem @deprecated(reason: "")

  """
  Connection between the RootQuery type and the category type
  """
  categories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToCategoryConnectionWhereArgs
  ): RootQueryToCategoryConnection @deprecated(reason: "")

  """
  A 0bject
  """
  category(id: ID!, idType: CategoryIdType): Category @deprecated(reason: "")

  """
  Returns a Comment
  """
  comment(id: ID!): Comment @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Comment type
  """
  comments(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToCommentConnectionWhereArgs
  ): RootQueryToCommentConnection @deprecated(reason: "")

  """
  A node used to manage content
  """
  contentNode(
    id: ID!

    """
    Type of unique identifier to fetch a content node by. Default is Global ID
    """
    idType: ContentNodeIdTypeEnum

    """
    The content type the node is used for. Required when idType is set to "name" or "slug"
    """
    contentType: ContentTypeEnum

    """
    Whether to return the node as a preview instance
    """
    asPreview: Boolean
  ): ContentNode @deprecated(reason: "")

  """
  Connection between the RootQuery type and the ContentNode type
  """
  contentNodes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToContentNodeConnectionWhereArgs
  ): RootQueryToContentNodeConnection @deprecated(reason: "")

  """
  Fetch a Content Type node by unique Identifier
  """
  contentType(
    """
    Unique Identifier for the Content Type node
    """
    id: ID!

    """
    The type of Identifier used in the ID field
    """
    idType: ContentTypeIdTypeEnum
  ): ContentType @deprecated(reason: "")

  """
  Connection between the RootQuery type and the ContentType type
  """
  contentTypes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): RootQueryToContentTypeConnection @deprecated(reason: "")

  """
  A coupon object
  """
  coupon(
    id: ID!

    """
    Type of ID being used identify coupon
    """
    idType: CouponIdTypeEnum
  ): Coupon @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Coupon type
  """
  coupons(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToCouponConnectionWhereArgs
  ): RootQueryToCouponConnection @deprecated(reason: "")

  """
  A customer object
  """
  customer(
    """
    Get the customer by their global ID
    """
    id: ID

    """
    Get the customer by their database ID
    """
    customerId: Int
  ): Customer @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Customer type
  """
  customers(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToCustomerConnectionWhereArgs
  ): RootQueryToCustomerConnection @deprecated(reason: "")

  """
  """
  discussionSettings: DiscussionSettings @deprecated(reason: "")

  """
  A simple product object
  """
  externalProduct(
    """
    The ID for identifying the external product
    """
    id: ID

    """
    Type of ID being used identify product
    """
    idType: ProductIdTypeEnum

    """
    Get the product by its database ID
    """
    productId: Int

    """
    Get the product by its slug
    """
    slug: String

    """
    Get the product by its sku
    """
    sku: String
  ): ExternalProduct @deprecated(reason: "")

  """
  """
  generalSettings: GeneralSettings @deprecated(reason: "")

  """
  A simple product object
  """
  groupProduct(
    """
    The ID for identifying the group product
    """
    id: ID

    """
    Type of ID being used identify product
    """
    idType: ProductIdTypeEnum

    """
    Get the product by its database ID
    """
    productId: Int

    """
    Get the product by its slug
    """
    slug: String

    """
    Get the product by its sku
    """
    sku: String
  ): GroupProduct @deprecated(reason: "")

  """
  An object of the mediaItem Type.
  """
  mediaItem(
    id: ID!
    idType: MediaItemIdType

    """
    Whether to return the node as a preview instance
    """
    asPreview: Boolean
  ): MediaItem @deprecated(reason: "")

  """
  A mediaItem object
  """
  mediaItemBy(
    """
    Get the object by its global ID
    """
    id: ID

    """
    Get the mediaItem by its database ID
    """
    mediaItemId: Int

    """
    Get the mediaItem by its uri
    """
    uri: String

    """
    Get the mediaItem by its slug (only available for non-hierarchical types)
    """
    slug: String
  ): MediaItem
    @deprecated(
      reason: "Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)"
    )

  """
  Connection between the RootQuery type and the mediaItem type
  """
  mediaItems(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToMediaItemConnectionWhereArgs
  ): RootQueryToMediaItemConnection @deprecated(reason: "")

  """
  A WordPress navigation menu
  """
  menu(id: ID!, idType: MenuNodeIdTypeEnum): Menu @deprecated(reason: "")

  """
  A WordPress navigation menu item
  """
  menuItem(id: ID!, idType: MenuItemNodeIdTypeEnum): MenuItem
    @deprecated(reason: "")

  """
  Connection between the RootQuery type and the MenuItem type
  """
  menuItems(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToMenuItemConnectionWhereArgs
  ): RootQueryToMenuItemConnection @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Menu type
  """
  menus(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToMenuConnectionWhereArgs
  ): RootQueryToMenuConnection @deprecated(reason: "")

  """
  Fetches an object given its ID
  """
  node(
    """
    The unique identifier of the node
    """
    id: ID
  ): Node @deprecated(reason: "")

  """
  """
  nodeByUri(
    """
    Unique Resource Identifier in the form of a path or permalink for a node. Ex: "/hello-world"
    """
    uri: String!
  ): UniformResourceIdentifiable @deprecated(reason: "")

  """
  A order object
  """
  order(
    """
    The ID for identifying the order
    """
    id: ID

    """
    Type of ID being used identify order
    """
    idType: OrderIdTypeEnum

    """
    Get the order by its database ID
    """
    orderId: Int

    """
    Get the order by its order number
    """
    orderKey: String
  ): Order @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Order type
  """
  orders(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToOrderConnectionWhereArgs
  ): RootQueryToOrderConnection @deprecated(reason: "")

  """
  An object of the page Type.
  """
  page(
    id: ID!
    idType: PageIdType

    """
    Whether to return the node as a preview instance
    """
    asPreview: Boolean
  ): Page @deprecated(reason: "")

  """
  A page object
  """
  pageBy(
    """
    Get the object by its global ID
    """
    id: ID

    """
    Get the page by its database ID
    """
    pageId: Int

    """
    Get the page by its uri
    """
    uri: String
  ): Page
    @deprecated(
      reason: "Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)"
    )

  """
  Connection between the RootQuery type and the page type
  """
  pages(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToPageConnectionWhereArgs
  ): RootQueryToPageConnection @deprecated(reason: "")

  """
  Connection between the RootQuery type and the PaymentGateway type
  """
  paymentGateways(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToPaymentGatewayConnectionWhereArgs
  ): RootQueryToPaymentGatewayConnection @deprecated(reason: "")

  """
  A WordPress plugin
  """
  plugin(id: ID!): Plugin @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Plugin type
  """
  plugins(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): RootQueryToPluginConnection @deprecated(reason: "")

  """
  An object of the post Type.
  """
  post(
    id: ID!
    idType: PostIdType

    """
    Whether to return the node as a preview instance
    """
    asPreview: Boolean
  ): Post @deprecated(reason: "")

  """
  A post object
  """
  postBy(
    """
    Get the object by its global ID
    """
    id: ID

    """
    Get the post by its database ID
    """
    postId: Int

    """
    Get the post by its uri
    """
    uri: String

    """
    Get the post by its slug (only available for non-hierarchical types)
    """
    slug: String
  ): Post
    @deprecated(
      reason: "Deprecated in favor of using the single entry point for this type with ID and IDType fields. For example, instead of postBy( id: &quot;&quot; ), use post(id: &quot;&quot; idType: &quot;&quot;)"
    )

  """
  A 0bject
  """
  postFormat(id: ID!, idType: PostFormatIdType): PostFormat
    @deprecated(reason: "")

  """
  Connection between the RootQuery type and the postFormat type
  """
  postFormats(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToPostFormatConnectionWhereArgs
  ): RootQueryToPostFormatConnection @deprecated(reason: "")

  """
  Connection between the RootQuery type and the post type
  """
  posts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToPostConnectionWhereArgs
  ): RootQueryToPostConnection @deprecated(reason: "")

  """
  A product object
  """
  product(
    """
    The ID for identifying the product
    """
    id: ID!

    """
    Type of ID being used identify product
    """
    idType: ProductIdTypeEnum
  ): Product @deprecated(reason: "")

  """
  Connection between the RootQuery type and the productCategory type
  """
  productCategories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToProductCategoryConnectionWhereArgs
  ): RootQueryToProductCategoryConnection @deprecated(reason: "")

  """
  A 0bject
  """
  productCategory(id: ID!, idType: ProductCategoryIdType): ProductCategory
    @deprecated(reason: "")

  """
  A 0bject
  """
  productTag(id: ID!, idType: ProductTagIdType): ProductTag
    @deprecated(reason: "")

  """
  Connection between the RootQuery type and the productTag type
  """
  productTags(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToProductTagConnectionWhereArgs
  ): RootQueryToProductTagConnection @deprecated(reason: "")

  """
  A 0bject
  """
  productType(id: ID!, idType: ProductTypeIdType): ProductType
    @deprecated(reason: "")

  """
  Connection between the RootQuery type and the productType type
  """
  productTypes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToProductTypeConnectionWhereArgs
  ): RootQueryToProductTypeConnection @deprecated(reason: "")

  """
  A product variation object
  """
  productVariation(
    """
    The ID for identifying the product variation
    """
    id: ID

    """
    Type of ID being used identify product variation
    """
    idType: ProductVariationIdTypeEnum

    """
    Get the product variation by its database ID
    """
    variationId: Int
  ): ProductVariation @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Product type
  """
  products(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToProductConnectionWhereArgs
  ): RootQueryToProductConnection @deprecated(reason: "")

  """
  """
  readingSettings: ReadingSettings @deprecated(reason: "")

  """
  A refund object
  """
  refund(
    """
    The ID for identifying the refund
    """
    id: ID!

    """
    Type of ID being used identify refund
    """
    idType: RefundIdTypeEnum
  ): Refund @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Refund type
  """
  refunds(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToRefundConnectionWhereArgs
  ): RootQueryToRefundConnection @deprecated(reason: "")

  """
  Connection between the RootQuery type and the EnqueuedScript type
  """
  registeredScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): RootQueryToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the RootQuery type and the EnqueuedStylesheet type
  """
  registeredStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): RootQueryToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  Connection between the RootQuery type and the ContentRevisionUnion type
  """
  revisions(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToContentRevisionUnionConnectionWhereArgs
  ): RootQueryToContentRevisionUnionConnection @deprecated(reason: "")

  """
  A 0bject
  """
  shippingClass(id: ID!, idType: ShippingClassIdType): ShippingClass
    @deprecated(reason: "")

  """
  Connection between the RootQuery type and the shippingClass type
  """
  shippingClasses(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToShippingClassConnectionWhereArgs
  ): RootQueryToShippingClassConnection @deprecated(reason: "")

  """
  A shipping method object
  """
  shippingMethod(
    """
    The ID for identifying the shipping method
    """
    id: ID

    """
    Type of ID being used identify product variation
    """
    idType: ShippingMethodIdTypeEnum

    """
    Get the shipping method by its database ID
    """
    methodId: ID
  ): ShippingMethod @deprecated(reason: "")

  """
  Connection between the RootQuery type and the ShippingMethod type
  """
  shippingMethods(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): RootQueryToShippingMethodConnection @deprecated(reason: "")

  """
  A simple product object
  """
  simpleProduct(
    """
    The ID for identifying the simple product
    """
    id: ID

    """
    Type of ID being used identify product
    """
    idType: ProductIdTypeEnum

    """
    Get the product by its database ID
    """
    productId: Int

    """
    Get the product by its slug
    """
    slug: String

    """
    Get the product by its sku
    """
    sku: String
  ): SimpleProduct @deprecated(reason: "")

  """
  A 0bject
  """
  tag(id: ID!, idType: TagIdType): Tag @deprecated(reason: "")

  """
  Connection between the RootQuery type and the tag type
  """
  tags(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToTagConnectionWhereArgs
  ): RootQueryToTagConnection @deprecated(reason: "")

  """
  A tax rate object
  """
  taxRate(
    """
    The ID for identifying the tax rate
    """
    id: ID

    """
    Type of ID being used identify tax rate
    """
    idType: TaxRateIdTypeEnum

    """
    Get the tax rate by its database ID
    """
    rateId: Int
  ): TaxRate @deprecated(reason: "")

  """
  Connection between the RootQuery type and the TaxRate type
  """
  taxRates(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToTaxRateConnectionWhereArgs
  ): RootQueryToTaxRateConnection @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Taxonomy type
  """
  taxonomies(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): RootQueryToTaxonomyConnection @deprecated(reason: "")

  """
  Fetch a Taxonomy node by unique Identifier
  """
  taxonomy(
    """
    Unique Identifier for the Taxonomy node
    """
    id: ID!

    """
    The type of Identifier used in the ID field
    """
    idType: TaxonomyIdTypeEnum
  ): Taxonomy @deprecated(reason: "")

  """
  A node in a taxonomy used to group and relate content nodes
  """
  termNode(
    id: ID!

    """
    Type of unique identifier to fetch a term node by. Default is Global ID
    """
    idType: TermNodeIdTypeEnum

    """
    The taxonomy of the tern node. Required when idType is set to "name" or "slug"
    """
    taxonomy: TaxonomyEnum
  ): TermNode @deprecated(reason: "")

  """
  Connection between the RootQuery type and the TermNode type
  """
  terms(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToTermNodeConnectionWhereArgs
  ): RootQueryToTermNodeConnection @deprecated(reason: "")

  """
  A Theme object
  """
  theme(id: ID!): Theme @deprecated(reason: "")

  """
  Connection between the RootQuery type and the Theme type
  """
  themes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): RootQueryToThemeConnection @deprecated(reason: "")

  """
  Returns a user
  """
  user(id: ID!, idType: UserNodeIdTypeEnum): User @deprecated(reason: "")

  """
  Returns a user role
  """
  userRole(id: ID!): UserRole @deprecated(reason: "")

  """
  Connection between the RootQuery type and the UserRole type
  """
  userRoles(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): RootQueryToUserRoleConnection @deprecated(reason: "")

  """
  Connection between the RootQuery type and the User type
  """
  users(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToUserConnectionWhereArgs
  ): RootQueryToUserConnection @deprecated(reason: "")

  """
  A simple product object
  """
  variableProduct(
    """
    The ID for identifying the variable product
    """
    id: ID

    """
    Type of ID being used identify product
    """
    idType: ProductIdTypeEnum

    """
    Get the product by its database ID
    """
    productId: Int

    """
    Get the product by its slug
    """
    slug: String

    """
    Get the product by its sku
    """
    sku: String
  ): VariableProduct @deprecated(reason: "")

  """
  Returns the current user
  """
  viewer: User @deprecated(reason: "")

  """
  A 0bject
  """
  visibleProduct(id: ID!, idType: VisibleProductIdType): VisibleProduct
    @deprecated(reason: "")

  """
  Connection between the RootQuery type and the visibleProduct type
  """
  visibleProducts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: RootQueryToVisibleProductConnectionWhereArgs
  ): RootQueryToVisibleProductConnection @deprecated(reason: "")

  """
  """
  writingSettings: WritingSettings @deprecated(reason: "")
}

"""
All of the registered settings
"""
type Settings {
  """
  Allow people to submit comments on new posts.
  """
  discussionSettingsDefaultCommentStatus: String @deprecated(reason: "")

  """
  Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.
  """
  discussionSettingsDefaultPingStatus: String @deprecated(reason: "")

  """
  A date format for all date strings.
  """
  generalSettingsDateFormat: String @deprecated(reason: "")

  """
  Site tagline.
  """
  generalSettingsDescription: String @deprecated(reason: "")

  """
  This address is used for admin purposes, like new user notification.
  """
  generalSettingsEmail: String @deprecated(reason: "")

  """
  WordPress locale code.
  """
  generalSettingsLanguage: String @deprecated(reason: "")

  """
  A day number of the week that the week should start on.
  """
  generalSettingsStartOfWeek: Int @deprecated(reason: "")

  """
  A time format for all time strings.
  """
  generalSettingsTimeFormat: String @deprecated(reason: "")

  """
  A city in the same timezone as you.
  """
  generalSettingsTimezone: String @deprecated(reason: "")

  """
  Site title.
  """
  generalSettingsTitle: String @deprecated(reason: "")

  """
  Site URL.
  """
  generalSettingsUrl: String @deprecated(reason: "")

  """
  Blog pages show at most.
  """
  readingSettingsPostsPerPage: Int @deprecated(reason: "")

  """
  Default post category.
  """
  writingSettingsDefaultCategory: Int @deprecated(reason: "")

  """
  Default post format.
  """
  writingSettingsDefaultPostFormat: String @deprecated(reason: "")

  """
  Convert emoticons like :-) and :-P to graphics on display.
  """
  writingSettingsUseSmilies: Boolean @deprecated(reason: "")
}

"""
The cart object
"""
type Cart {
  """
  Connection between the Cart type and the Coupon type
  """
  appliedCoupons(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CartToCouponConnectionWhereArgs
  ): CartToCouponConnection @deprecated(reason: "")

  """
  Available shipping methods for this order.
  """
  availableShippingMethods: [ShippingPackage] @deprecated(reason: "")

  """
  Shipping method chosen for this order.
  """
  chosenShippingMethod: String @deprecated(reason: "")

  """
  Connection between the Cart type and the CartItem type
  """
  contents(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CartToCartItemConnectionWhereArgs
  ): CartToCartItemConnection @deprecated(reason: "")

  """
  Cart contents tax
  """
  contentsTax: String @deprecated(reason: "")

  """
  Cart contents total
  """
  contentsTotal: String @deprecated(reason: "")

  """
  Cart discount tax
  """
  discountTax: String @deprecated(reason: "")

  """
  Cart discount total
  """
  discountTotal: String @deprecated(reason: "")

  """
  Do display prices include taxes
  """
  displayPricesIncludeTax: Boolean @deprecated(reason: "")

  """
  Cart fee tax
  """
  feeTax: String @deprecated(reason: "")

  """
  Cart fee total
  """
  feeTotal: String @deprecated(reason: "")

  """
  Additional fees on the cart.
  """
  fees: [CartFee] @deprecated(reason: "")

  """
  Is cart empty
  """
  isEmpty: Boolean @deprecated(reason: "")

  """
  Is customer shipping address needed
  """
  needsShippingAddress: Boolean @deprecated(reason: "")

  """
  Cart shipping tax
  """
  shippingTax: String @deprecated(reason: "")

  """
  Cart shipping total
  """
  shippingTotal: String @deprecated(reason: "")

  """
  Cart subtotal
  """
  subtotal: String @deprecated(reason: "")

  """
  Cart subtotal tax
  """
  subtotalTax: String @deprecated(reason: "")

  """
  Cart total after calculation
  """
  total: String @deprecated(reason: "")

  """
  Cart total tax amount
  """
  totalTax: String @deprecated(reason: "")
}

"""
Arguments for filtering the CartToCouponConnection connection
"""
input CartToCouponConnectionWhereArgs {
  """
  Limit result set to resources with a specific code.
  """
  code: String

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostTypeOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit results to those matching a string.
  """
  search: String
}

"""
Filter the connection based on input
"""
input DateQueryInput {
  """
  Nodes should be returned after this date
  """
  after: DateInput

  """
  Nodes should be returned before this date
  """
  before: DateInput

  """
  Column to query against
  """
  column: PostObjectsConnectionDateColumnEnum

  """
  For after/before, whether exact value should be matched or not
  """
  compare: String

  """
  Day of the month (from 1 to 31)
  """
  day: Int

  """
  Hour (from 0 to 23)
  """
  hour: Int

  """
  For after/before, whether exact value should be matched or not
  """
  inclusive: Boolean

  """
  Minute (from 0 to 59)
  """
  minute: Int

  """
  Month number (from 1 to 12)
  """
  month: Int

  """
  OR or AND, how the sub-arrays should be compared
  """
  relation: RelationEnum

  """
  Second (0 to 59)
  """
  second: Int

  """
  Week of the year (from 0 to 53)
  """
  week: Int

  """
  4 digit year (e.g. 2017)
  """
  year: Int
}

"""
Date values
"""
input DateInput {
  """
  Day of the month (from 1 to 31)
  """
  day: Int

  """
  Month number (from 1 to 12)
  """
  month: Int

  """
  4 digit year (e.g. 2017)
  """
  year: Int
}

"""
The column to use when filtering by date
"""
enum PostObjectsConnectionDateColumnEnum {
  DATE
  MODIFIED
}

"""
The logical relation between each item in the array when there are more than one.
"""
enum RelationEnum {
  AND
  OR
}

"""
Options for ordering the connection
"""
input PostTypeOrderbyInput {
  field: PostTypeOrderByEnum!
  order: OrderEnum
}

"""
Fields to order the PostType connection by
"""
enum PostTypeOrderByEnum {
  """
  Order by publish date
  """
  DATE

  """
  Preserve the ID order given in the IN array
  """
  IN

  """
  Order by the menu order value
  """
  MENU_ORDER

  """
  Order by last modified date
  """
  MODIFIED

  """
  Preserve slug order given in the NAME_IN array
  """
  NAME_IN

  """
  Order by parent ID
  """
  PARENT

  """
  Order by slug
  """
  SLUG
}

"""
The cardinality of the connection order
"""
enum OrderEnum {
  ASC
  DESC
}

"""
Connection between the Cart type and the Coupon type
"""
type CartToCouponConnection {
  """
  Edges for the CartToCouponConnection connection
  """
  edges: [CartToCouponConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Coupon] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CartToCouponConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Coupon @deprecated(reason: "")
}

"""
A coupon object
"""
type Coupon implements Node {
  """
  Amount off provided by the coupon
  """
  amount: Float @deprecated(reason: "")

  """
  Coupon code
  """
  code: String @deprecated(reason: "")

  """
  Connection between the Coupon type and the ContentType type
  """
  contentType: CouponToContentTypeConnectionEdge @deprecated(reason: "")

  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  couponId: Int @deprecated(reason: "")

  """
  Date coupon created
  """
  date: String @deprecated(reason: "")

  """
  Date coupon expires
  """
  dateExpiry: String @deprecated(reason: "")

  """
  Explanation of what the coupon does
  """
  description: String @deprecated(reason: "")

  """
  Type of discount
  """
  discountType: DiscountTypeEnum @deprecated(reason: "")

  """
  Only customers with a matching email address can use the coupon
  """
  emailRestrictions: [String] @deprecated(reason: "")

  """
  Excluding sale items mean this coupon cannot be used on items that are on sale (or carts that contain on sale items)
  """
  excludeSaleItems: Boolean @deprecated(reason: "")

  """
  Connection between the Coupon type and the ProductCategory type
  """
  excludedProductCategories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CouponToProductCategoryConnectionWhereArgs
  ): CouponToProductCategoryConnection @deprecated(reason: "")

  """
  Connection between the Coupon type and the Product type
  """
  excludedProducts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CouponToProductConnectionWhereArgs
  ): CouponToProductConnection @deprecated(reason: "")

  """
  Does this coupon grant free shipping?
  """
  freeShipping: Boolean @deprecated(reason: "")

  """
  The globally unique identifier for the coupon
  """
  id: ID! @deprecated(reason: "")

  """
  Individual use means this coupon cannot be used in conjunction with other coupons
  """
  individualUse: Boolean @deprecated(reason: "")

  """
  The number of products in your cart this coupon can apply to (for product discounts)
  """
  limitUsageToXItems: Int @deprecated(reason: "")

  """
  Maximum spend amount that must be met before this coupon can be used
  """
  maximumAmount: Float @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Minimum spend amount that must be met before this coupon can be used
  """
  minimumAmount: Float @deprecated(reason: "")

  """
  Date coupon modified
  """
  modified: String @deprecated(reason: "")

  """
  Connection between the Coupon type and the ProductCategory type
  """
  productCategories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CouponToProductCategoryConnectionWhereArgs
  ): CouponToProductCategoryConnection @deprecated(reason: "")

  """
  Connection between the Coupon type and the Product type
  """
  products(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CouponToProductConnectionWhereArgs
  ): CouponToProductConnection @deprecated(reason: "")

  """
  How many times the coupon has been used
  """
  usageCount: Int @deprecated(reason: "")

  """
  Amount of times this coupon can be used globally
  """
  usageLimit: Int @deprecated(reason: "")

  """
  Amount of times this coupon can be used by a customer
  """
  usageLimitPerUser: Int @deprecated(reason: "")

  """
  Connection between the Coupon type and the Customer type
  """
  usedBy(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CouponToCustomerConnectionWhereArgs
  ): CouponToCustomerConnection @deprecated(reason: "")
}

"""
An object with an ID
"""
interface Node {
  """
  The globally unique ID for the object
  """
  id: ID!
}

"""
Connection between the Coupon type and the ContentType type
"""
type CouponToContentTypeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentType @deprecated(reason: "")
}

"""
An Post Type object
"""
type ContentType implements Node & UniformResourceIdentifiable {
  """
  Whether this content type should can be exported.
  """
  canExport: Boolean @deprecated(reason: "")

  """
  Connection between the ContentType type and the Taxonomy type
  """
  connectedTaxonomies(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ContentTypeToTaxonomyConnection @deprecated(reason: "")

  """
  Connection between the ContentType type and the ContentNode type
  """
  contentNodes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ContentTypeToContentNodeConnectionWhereArgs
  ): ContentTypeToContentNodeConnection @deprecated(reason: "")

  """
  Whether content of this type should be deleted when the author of it is deleted from the system.
  """
  deleteWithUser: Boolean @deprecated(reason: "")

  """
  Description of the content type.
  """
  description: String @deprecated(reason: "")

  """
  Whether to exclude nodes of this content type from front end search results.
  """
  excludeFromSearch: Boolean @deprecated(reason: "")

  """
  The plural name of the content type within the GraphQL Schema.
  """
  graphqlPluralName: String @deprecated(reason: "")

  """
  The singular name of the content type within the GraphQL Schema.
  """
  graphqlSingleName: String @deprecated(reason: "")

  """
  Whether this content type should have archives. Content archives are generated by type and by date.
  """
  hasArchive: Boolean @deprecated(reason: "")

  """
  Whether the content type is hierarchical, for example pages.
  """
  hierarchical: Boolean @deprecated(reason: "")

  """
  The globally unique identifier of the post-type object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether this page is set to the static front page.
  """
  isFrontPage: Boolean! @deprecated(reason: "")

  """
  Whether this page is set to the blog posts page.
  """
  isPostsPage: Boolean! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  Display name of the content type.
  """
  label: String @deprecated(reason: "")

  """
  Details about the content type labels.
  """
  labels: PostTypeLabelDetails @deprecated(reason: "")

  """
  The name of the icon file to display as a menu icon.
  """
  menuIcon: String @deprecated(reason: "")

  """
  The position of this post type in the menu. Only applies if show_in_menu is true.
  """
  menuPosition: Int @deprecated(reason: "")

  """
  The internal name of the post type. This should not be used for display purposes.
  """
  name: String @deprecated(reason: "")

  """
  Whether a content type is intended for use publicly either via the admin interface or by front-end users. While the default settings of exclude_from_search, publicly_queryable, show_ui, and show_in_nav_menus are inherited from public, each does not rely on this relationship and controls a very specific intention.
  """
  public: Boolean @deprecated(reason: "")

  """
  Whether queries can be performed on the front end for the content type as part of parse_request().
  """
  publiclyQueryable: Boolean @deprecated(reason: "")

  """
  Name of content type to display in REST API &quot;wp/v2&quot; namespace.
  """
  restBase: String @deprecated(reason: "")

  """
  The REST Controller class assigned to handling this content type.
  """
  restControllerClass: String @deprecated(reason: "")

  """
  Makes this content type available via the admin bar.
  """
  showInAdminBar: Boolean @deprecated(reason: "")

  """
  Whether to add the content type to the GraphQL Schema.
  """
  showInGraphql: Boolean @deprecated(reason: "")

  """
  Where to show the content type in the admin menu. To work, $show_ui must be true. If true, the post type is shown in its own top level menu. If false, no menu is shown. If a string of an existing top level menu (eg. &quot;tools.php&quot; or &quot;edit.php?post_type=page&quot;), the post type will be placed as a sub-menu of that.
  """
  showInMenu: Boolean @deprecated(reason: "")

  """
  Makes this content type available for selection in navigation menus.
  """
  showInNavMenus: Boolean @deprecated(reason: "")

  """
  Whether the content type is associated with a route under the the REST API &quot;wp/v2&quot; namespace.
  """
  showInRest: Boolean @deprecated(reason: "")

  """
  Whether to generate and allow a UI for managing this content type in the admin.
  """
  showUi: Boolean @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String @deprecated(reason: "")
}

"""
Any node that has a URI
"""
interface UniformResourceIdentifiable {
  """
  The unique resource identifier path
  """
  id: ID!

  """
  The unique resource identifier path
  """
  uri: String
}

"""
Connection between the ContentType type and the Taxonomy type
"""
type ContentTypeToTaxonomyConnection {
  """
  Edges for the ContentTypeToTaxonomyConnection connection
  """
  edges: [ContentTypeToTaxonomyConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Taxonomy] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ContentTypeToTaxonomyConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
A taxonomy object
"""
type Taxonomy implements Node {
  """
  List of Content Types associated with the Taxonomy
  """
  connectedContentTypes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TaxonomyToContentTypeConnection @deprecated(reason: "")

  """
  Description of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;description
  """
  description: String @deprecated(reason: "")

  """
  The plural name of the post type within the GraphQL Schema.
  """
  graphqlPluralName: String @deprecated(reason: "")

  """
  The singular name of the post type within the GraphQL Schema.
  """
  graphqlSingleName: String @deprecated(reason: "")

  """
  Whether the taxonomy is hierarchical
  """
  hierarchical: Boolean @deprecated(reason: "")

  """
  The globally unique identifier of the taxonomy object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  Name of the taxonomy shown in the menu. Usually plural.
  """
  label: String @deprecated(reason: "")

  """
  The display name of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;label
  """
  name: String @deprecated(reason: "")

  """
  Whether the taxonomy is publicly queryable
  """
  public: Boolean @deprecated(reason: "")

  """
  Name of content type to diplay in REST API &quot;wp/v2&quot; namespace.
  """
  restBase: String @deprecated(reason: "")

  """
  The REST Controller class assigned to handling this content type.
  """
  restControllerClass: String @deprecated(reason: "")

  """
  Whether to show the taxonomy as part of a tag cloud widget. This field is equivalent to WP_Taxonomy-&gt;show_tagcloud
  """
  showCloud: Boolean @deprecated(reason: "")

  """
  Whether to display a column for the taxonomy on its post type listing screens.
  """
  showInAdminColumn: Boolean @deprecated(reason: "")

  """
  Whether to add the post type to the GraphQL Schema.
  """
  showInGraphql: Boolean @deprecated(reason: "")

  """
  Whether to show the taxonomy in the admin menu
  """
  showInMenu: Boolean @deprecated(reason: "")

  """
  Whether the taxonomy is available for selection in navigation menus.
  """
  showInNavMenus: Boolean @deprecated(reason: "")

  """
  Whether to show the taxonomy in the quick/bulk edit panel.
  """
  showInQuickEdit: Boolean @deprecated(reason: "")

  """
  Whether to add the post type route in the REST API &quot;wp/v2&quot; namespace.
  """
  showInRest: Boolean @deprecated(reason: "")

  """
  Whether to generate and allow a UI for managing terms in this taxonomy in the admin
  """
  showUi: Boolean @deprecated(reason: "")
}

"""
Connection between the Taxonomy type and the ContentType type
"""
type TaxonomyToContentTypeConnection {
  """
  Edges for the TaxonomyToContentTypeConnection connection
  """
  edges: [TaxonomyToContentTypeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ContentType] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type TaxonomyToContentTypeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ContentType @deprecated(reason: "")
}

"""
Information about pagination in a connection.
"""
type WPPageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String @deprecated(reason: "")

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean! @deprecated(reason: "")

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean! @deprecated(reason: "")

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String @deprecated(reason: "")
}

"""
Arguments for filtering the ContentTypeToContentNodeConnection connection
"""
input ContentTypeToContentNodeConnectionWhereArgs {
  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: ContentTypeToContentNodeConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
The MimeType of the object
"""
enum MimeTypeEnum {
  APPLICATION_JAVA
  APPLICATION_MSWORD
  APPLICATION_OCTET_STREAM
  APPLICATION_ONENOTE
  APPLICATION_OXPS
  APPLICATION_PDF
  APPLICATION_RAR
  APPLICATION_RTF
  APPLICATION_TTAF_XML
  APPLICATION_VND_APPLE_KEYNOTE
  APPLICATION_VND_APPLE_NUMBERS
  APPLICATION_VND_APPLE_PAGES
  APPLICATION_VND_MS_ACCESS
  APPLICATION_VND_MS_EXCEL
  APPLICATION_VND_MS_EXCEL_ADDIN_MACROENABLED_12
  APPLICATION_VND_MS_EXCEL_SHEET_BINARY_MACROENABLED_12
  APPLICATION_VND_MS_EXCEL_SHEET_MACROENABLED_12
  APPLICATION_VND_MS_EXCEL_TEMPLATE_MACROENABLED_12
  APPLICATION_VND_MS_POWERPOINT
  APPLICATION_VND_MS_POWERPOINT_ADDIN_MACROENABLED_12
  APPLICATION_VND_MS_POWERPOINT_PRESENTATION_MACROENABLED_12
  APPLICATION_VND_MS_POWERPOINT_SLIDESHOW_MACROENABLED_12
  APPLICATION_VND_MS_POWERPOINT_SLIDE_MACROENABLED_12
  APPLICATION_VND_MS_POWERPOINT_TEMPLATE_MACROENABLED_12
  APPLICATION_VND_MS_PROJECT
  APPLICATION_VND_MS_WORD_DOCUMENT_MACROENABLED_12
  APPLICATION_VND_MS_WORD_TEMPLATE_MACROENABLED_12
  APPLICATION_VND_MS_WRITE
  APPLICATION_VND_MS_XPSDOCUMENT
  APPLICATION_VND_OASIS_OPENDOCUMENT_CHART
  APPLICATION_VND_OASIS_OPENDOCUMENT_DATABASE
  APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA
  APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS
  APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION
  APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET
  APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDE
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_TEMPLATE
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT
  APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE
  APPLICATION_WORDPERFECT
  APPLICATION_X_7Z_COMPRESSED
  APPLICATION_X_GZIP
  APPLICATION_X_TAR
  APPLICATION_ZIP
  AUDIO_AAC
  AUDIO_FLAC
  AUDIO_MIDI
  AUDIO_MPEG
  AUDIO_OGG
  AUDIO_WAV
  AUDIO_X_MATROSKA
  AUDIO_X_MS_WAX
  AUDIO_X_MS_WMA
  AUDIO_X_REALAUDIO
  IMAGE_BMP
  IMAGE_GIF
  IMAGE_HEIC
  IMAGE_JPEG
  IMAGE_PNG
  IMAGE_TIFF
  IMAGE_WEBP
  IMAGE_X_ICON
  TEXT_CALENDAR
  TEXT_CSS
  TEXT_CSV
  TEXT_PLAIN
  TEXT_RICHTEXT
  TEXT_TAB_SEPARATED_VALUES
  TEXT_VTT
  VIDEO_3GPP
  VIDEO_3GPP2
  VIDEO_AVI
  VIDEO_DIVX
  VIDEO_MP4
  VIDEO_MPEG
  VIDEO_OGG
  VIDEO_QUICKTIME
  VIDEO_WEBM
  VIDEO_X_FLV
  VIDEO_X_MATROSKA
  VIDEO_X_MS_ASF
  VIDEO_X_MS_WM
  VIDEO_X_MS_WMV
  VIDEO_X_MS_WMX
}

"""
Options for ordering the connection
"""
input PostObjectsConnectionOrderbyInput {
  """
  The field to order the connection by
  """
  field: PostObjectsConnectionOrderbyEnum!

  """
  Possible directions in which to order a list of items
  """
  order: OrderEnum!
}

"""
Field to order the connection by
"""
enum PostObjectsConnectionOrderbyEnum {
  """
  Order by author
  """
  AUTHOR

  """
  Order by the number of comments it has acquired
  """
  COMMENT_COUNT

  """
  Order by publish date
  """
  DATE

  """
  Preserve the ID order given in the IN array
  """
  IN

  """
  Order by the menu order value
  """
  MENU_ORDER

  """
  Order by last modified date
  """
  MODIFIED

  """
  Preserve slug order given in the NAME_IN array
  """
  NAME_IN

  """
  Order by parent ID
  """
  PARENT

  """
  Order by slug
  """
  SLUG

  """
  Order by title
  """
  TITLE
}

"""
The status of the object.
"""
enum PostStatusEnum {
  """
  Objects with the auto-draft status
  """
  AUTO_DRAFT

  """
  Objects with the draft status
  """
  DRAFT

  """
  Objects with the future status
  """
  FUTURE

  """
  Objects with the inherit status
  """
  INHERIT

  """
  Objects with the pending status
  """
  PENDING

  """
  Objects with the private status
  """
  PRIVATE

  """
  Objects with the publish status
  """
  PUBLISH

  """
  Objects with the request-completed status
  """
  REQUEST_COMPLETED

  """
  Objects with the request-confirmed status
  """
  REQUEST_CONFIRMED

  """
  Objects with the request-failed status
  """
  REQUEST_FAILED

  """
  Objects with the request-pending status
  """
  REQUEST_PENDING

  """
  Objects with the trash status
  """
  TRASH

  """
  Objects with the wc-cancelled status
  """
  WC_CANCELLED

  """
  Objects with the wc-completed status
  """
  WC_COMPLETED

  """
  Objects with the wc-failed status
  """
  WC_FAILED

  """
  Objects with the wc-on-hold status
  """
  WC_ON_HOLD

  """
  Objects with the wc-pending status
  """
  WC_PENDING

  """
  Objects with the wc-processing status
  """
  WC_PROCESSING

  """
  Objects with the wc-refunded status
  """
  WC_REFUNDED
}

"""
Query objects based on taxonomy parameters
"""
input ContentTypeToContentNodeConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [ContentTypeToContentNodeConnectionWhereArgsTaxArray]
}

input ContentTypeToContentNodeConnectionWhereArgsTaxArray {
  field: ContentTypeToContentNodeConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: ContentTypeToContentNodeConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum ContentTypeToContentNodeConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum ContentTypeToContentNodeConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Allowed taxonomies
"""
enum TaxonomyEnum {
  CATEGORY
  POSTFORMAT
  PRODUCTCATEGORY
  PRODUCTTAG
  PRODUCTTYPE
  SHIPPINGCLASS
  TAG
  VISIBLEPRODUCT
}

"""
Connection between the ContentType type and the ContentNode type
"""
type ContentTypeToContentNodeConnection {
  """
  Edges for the ContentTypeToContentNodeConnection connection
  """
  edges: [ContentTypeToContentNodeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ContentNode] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ContentTypeToContentNodeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ContentNode @deprecated(reason: "")
}

"""
Nodes used to manage content
"""
interface ContentNode {
  """
  The ID of the node in the database.
  """
  databaseId: Int!

  """
  Post publishing date.
  """
  date: String

  """
  The publishing date set in GMT.
  """
  dateGmt: String

  """
  The desired slug of the post
  """
  desiredSlug: String

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn't exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge

  """
  The RSS enclosure for the object
  """
  enclosure: String

  """
  Connection between the ContentNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ContentNodeToEnqueuedScriptConnection

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ContentNodeToEnqueuedStylesheetConnection

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post->guid and the guid column in the "post_objects" database table.
  """
  guid: String

  """
  The globally unique identifier of the node.
  """
  id: ID!

  """
  Whether the object is a node in the preview state
  """
  isPreview: Boolean

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean

  """
  The user that most recently edited the node
  """
  lastEditedBy: ContentNodeToEditLastConnectionEdge

  """
  The permalink of the post
  """
  link: String

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String

  """
  The database id of the preview node
  """
  previewRevisionDatabaseId: Int

  """
  Whether the object is a node in the preview state
  """
  previewRevisionId: ID

  """
  The uri slug for the post. This is equivalent to the WP_Post->post_name field and the post_name column in the database for the "post_objects" table.
  """
  slug: String

  """
  The current status of the object
  """
  status: String

  """
  Connection between the ContentNode type and the TermNode type
  """
  terms(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ContentNodeToTermNodeConnectionWhereArgs
  ): ContentNodeToTermNodeConnection

  """
  URI path for the resource
  """
  uri: String!
}

"""
Connection between the ContentNode type and the User type
"""
type ContentNodeToEditLockConnectionEdge {
  """
  The timestamp for when the node was last edited
  """
  lockTimestamp: String @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  node: User @deprecated(reason: "")
}

"""
A User object
"""
type User implements Node & UniformResourceIdentifiable & Commenter & DatabaseIdentifier {
  """
  Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.
  """
  avatar(
    """
    The size attribute of the avatar field can be used to fetch avatars of different sizes. The value corresponds to the dimension in pixels to fetch. The default is 96 pixels.
    """
    size: Int = 96

    """
    Whether to always show the default image, never the Gravatar. Default false
    """
    forceDefault: Boolean
    rating: AvatarRatingEnum
  ): Avatar @deprecated(reason: "")

  """
  User metadata option name. Usually it will be &quot;wp_capabilities&quot;.
  """
  capKey: String @deprecated(reason: "")

  """
  A list of capabilities (permissions) granted to the user
  """
  capabilities: [String] @deprecated(reason: "")

  """
  Connection between the User type and the Comment type
  """
  comments(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: UserToCommentConnectionWhereArgs
  ): UserToCommentConnection @deprecated(reason: "")

  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  Description of the user.
  """
  description: String @deprecated(reason: "")

  """
  Email address of the user. This is equivalent to the WP_User-&gt;user_email property.
  """
  email: String @deprecated(reason: "")

  """
  Connection between the User type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): UserToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the User type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): UserToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  A complete list of capabilities including capabilities inherited from a role. This is equivalent to the array keys of WP_User-&gt;allcaps.
  """
  extraCapabilities: [String] @deprecated(reason: "")

  """
  First name of the user. This is equivalent to the WP_User-&gt;user_first_name property.
  """
  firstName: String @deprecated(reason: "")

  """
  The globally unique identifier for the user object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  Last name of the user. This is equivalent to the WP_User-&gt;user_last_name property.
  """
  lastName: String @deprecated(reason: "")

  """
  The preferred language locale set for the user. Value derived from get_user_locale().
  """
  locale: String @deprecated(reason: "")

  """
  Connection between the User type and the mediaItem type
  """
  mediaItems(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: UserToMediaItemConnectionWhereArgs
  ): UserToMediaItemConnection @deprecated(reason: "")

  """
  Display name of the user. This is equivalent to the WP_User-&gt;dispaly_name property.
  """
  name: String @deprecated(reason: "")

  """
  The nicename for the user. This field is equivalent to WP_User-&gt;user_nicename
  """
  nicename: String @deprecated(reason: "")

  """
  Nickname of the user.
  """
  nickname: String @deprecated(reason: "")

  """
  Connection between the User type and the page type
  """
  pages(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: UserToPageConnectionWhereArgs
  ): UserToPageConnection @deprecated(reason: "")

  """
  Connection between the User type and the post type
  """
  posts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: UserToPostConnectionWhereArgs
  ): UserToPostConnection @deprecated(reason: "")

  """
  The date the user registered or was created. The field follows a full ISO8601 date string format.
  """
  registeredDate: String @deprecated(reason: "")

  """
  Connection between the User and Revisions authored by the user
  """
  revisions(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: UserToContentRevisionUnionConnectionWhereArgs
  ): UserToContentRevisionUnionConnection @deprecated(reason: "")

  """
  Connection between the User type and the UserRole type
  """
  roles(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): UserToUserRoleConnection @deprecated(reason: "")

  """
  The slug for the user. This field is equivalent to WP_User-&gt;user_nicename
  """
  slug: String @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String @deprecated(reason: "")

  """
  A website url that is associated with the user.
  """
  url: String @deprecated(reason: "")

  """
  The Id of the user. Equivalent to WP_User-&gt;ID
  """
  userId: Int @deprecated(reason: "Deprecated in favor of the databaseId field")

  """
  Username for the user. This field is equivalent to WP_User-&gt;user_login.
  """
  username: String @deprecated(reason: "")
}

"""
The author of a comment
"""
interface Commenter {
  """
  Identifies the primary key from the database.
  """
  databaseId: Int!

  """
  The email address of the author of a comment.
  """
  email: String

  """
  The globally unique identifier for the comment author.
  """
  id: ID!

  """
  Whether the author information is considered restricted. (not fully public)
  """
  isRestricted: Boolean

  """
  The name of the author of a comment.
  """
  name: String

  """
  The url of the author of a comment.
  """
  url: String
}

"""
Object that can be identified with a Database ID
"""
interface DatabaseIdentifier {
  """
  The unique identifier stored in the database
  """
  databaseId: Int!
}

"""
What rating to display avatars up to. Accepts 'G', 'PG', 'R', 'X', and are judged in that order. Default is the value of the 'avatar_rating' option
"""
enum AvatarRatingEnum {
  G
  PG
  R
  X
}

"""
Avatars are profile images for users. WordPress by default uses the Gravatar service to host and fetch avatars from.
"""
type Avatar {
  """
  URL for the default image or a default type. Accepts &#039;404&#039; (return a 404 instead of a default image), &#039;retro&#039; (8bit), &#039;monsterid&#039; (monster), &#039;wavatar&#039; (cartoon face), &#039;indenticon&#039; (the &#039;quilt&#039;), &#039;mystery&#039;, &#039;mm&#039;, or &#039;mysteryman&#039; (The Oyster Man), &#039;blank&#039; (transparent GIF), or &#039;gravatar_default&#039; (the Gravatar logo).
  """
  default: String @deprecated(reason: "")

  """
  HTML attributes to insert in the IMG element. Is not sanitized.
  """
  extraAttr: String @deprecated(reason: "")

  """
  Whether to always show the default image, never the Gravatar.
  """
  forceDefault: Boolean @deprecated(reason: "")

  """
  Whether the avatar was successfully found.
  """
  foundAvatar: Boolean @deprecated(reason: "")

  """
  Height of the avatar image.
  """
  height: Int @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  What rating to display avatars up to. Accepts &#039;G&#039;, &#039;PG&#039;, &#039;R&#039;, &#039;X&#039;, and are judged in that order.
  """
  rating: String @deprecated(reason: "")

  """
  Type of url scheme to use. Typically HTTP vs. HTTPS.
  """
  scheme: String @deprecated(reason: "")

  """
  The size of the avatar in pixels. A value of 96 will match a 96px x 96px gravatar image.
  """
  size: Int @deprecated(reason: "")

  """
  URL for the gravatar image source.
  """
  url: String @deprecated(reason: "")

  """
  Width of the avatar image.
  """
  width: Int @deprecated(reason: "")
}

"""
Arguments for filtering the UserToCommentConnection connection
"""
input UserToCommentConnectionWhereArgs {
  """
  Comment author email address.
  """
  authorEmail: String

  """
  Array of author IDs to include comments for.
  """
  authorIn: [ID]

  """
  Array of author IDs to exclude comments for.
  """
  authorNotIn: [ID]

  """
  Comment author URL.
  """
  authorUrl: String

  """
  Array of comment IDs to include.
  """
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """
  Include comments of a given type.
  """
  commentType: String

  """
  Include comments from a given array of comment types.
  """
  commentTypeIn: [String]

  """
  Exclude comments from a given array of comment types.
  """
  commentTypeNotIn: String

  """
  Content object author ID to limit results by.
  """
  contentAuthor: [ID]

  """
  Array of author IDs to retrieve comments for.
  """
  contentAuthorIn: [ID]

  """
  Array of author IDs *not* to retrieve comments for.
  """
  contentAuthorNotIn: [ID]

  """
  Limit results to those affiliated with a given content object ID.
  """
  contentId: ID

  """
  Array of content object IDs to include affiliated comments for.
  """
  contentIdIn: [ID]

  """
  Array of content object IDs to exclude affiliated comments for.
  """
  contentIdNotIn: [ID]

  """
  Content object name to retrieve affiliated comments for.
  """
  contentName: String

  """
  Content Object parent ID to retrieve affiliated comments for.
  """
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """
  Karma score to retrieve matching comments for.
  """
  karma: Int

  """
  The cardinality of the order of the connection
  """
  order: OrderEnum

  """
  Field to order the comments by.
  """
  orderby: CommentsConnectionOrderbyEnum

  """
  Parent ID of comment to retrieve children of.
  """
  parent: Int

  """
  Array of parent IDs of comments to retrieve children for.
  """
  parentIn: [ID]

  """
  Array of parent IDs of comments *not* to retrieve children for.
  """
  parentNotIn: [ID]

  """
  Search term(s) to retrieve matching comments for.
  """
  search: String

  """
  Comment status to limit results by.
  """
  status: String

  """
  Include comments for a specific user ID.
  """
  userId: ID
}

"""
Allowed Content Types
"""
enum ContentTypeEnum {
  """
  The Type of Content object
  """
  ATTACHMENT

  """
  The Type of Content object
  """
  PAGE

  """
  The Type of Content object
  """
  POST
}

"""
Options for ordering the connection
"""
enum CommentsConnectionOrderbyEnum {
  COMMENT_AGENT
  COMMENT_APPROVED
  COMMENT_AUTHOR
  COMMENT_AUTHOR_EMAIL
  COMMENT_AUTHOR_IP
  COMMENT_AUTHOR_URL
  COMMENT_CONTENT
  COMMENT_DATE
  COMMENT_DATE_GMT
  COMMENT_ID
  COMMENT_IN
  COMMENT_KARMA
  COMMENT_PARENT
  COMMENT_POST_ID
  COMMENT_TYPE
  USER_ID
}

"""
Connection between the User type and the Comment type
"""
type UserToCommentConnection {
  """
  Edges for the UserToCommentConnection connection
  """
  edges: [UserToCommentConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Comment] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type UserToCommentConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Comment @deprecated(reason: "")
}

"""
A Comment object
"""
type Comment implements Node & DatabaseIdentifier {
  """
  User agent used to post the comment. This field is equivalent to WP_Comment-&gt;comment_agent and the value matching the &quot;comment_agent&quot; column in SQL.
  """
  agent: String @deprecated(reason: "")

  """
  The approval status of the comment. This field is equivalent to WP_Comment-&gt;comment_approved and the value matching the &quot;comment_approved&quot; column in SQL.
  """
  approved: Boolean @deprecated(reason: "")

  """
  The author of the comment
  """
  author: CommentToCommenterConnectionEdge @deprecated(reason: "")

  """
  IP address for the author. This field is equivalent to WP_Comment-&gt;comment_author_IP and the value matching the &quot;comment_author_IP&quot; column in SQL.
  """
  authorIp: String @deprecated(reason: "")

  """
  ID for the comment, unique among comments.
  """
  commentId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """
  Connection between the Comment type and the ContentNode type
  """
  commentedOn: CommentToContentNodeConnectionEdge @deprecated(reason: "")

  """
  Content of the comment. This field is equivalent to WP_Comment-&gt;comment_content and the value matching the &quot;comment_content&quot; column in SQL.
  """
  content(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  The unique identifier stored in the database
  """
  databaseId: Int! @deprecated(reason: "")

  """
  Date the comment was posted in local time. This field is equivalent to WP_Comment-&gt;date and the value matching the &quot;date&quot; column in SQL.
  """
  date: String @deprecated(reason: "")

  """
  Date the comment was posted in GMT. This field is equivalent to WP_Comment-&gt;date_gmt and the value matching the &quot;date_gmt&quot; column in SQL.
  """
  dateGmt: String @deprecated(reason: "")

  """
  The globally unique identifier for the comment object
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  Karma value for the comment. This field is equivalent to WP_Comment-&gt;comment_karma and the value matching the &quot;comment_karma&quot; column in SQL.
  """
  karma: Int @deprecated(reason: "")

  """
  Connection between the Comment type and the Comment type
  """
  parent(
    """
    Arguments for filtering the connection
    """
    where: CommentToParentCommentConnectionWhereArgs
  ): CommentToParentCommentConnectionEdge @deprecated(reason: "")

  """
  Connection between the Comment type and the Comment type
  """
  replies(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CommentToCommentConnectionWhereArgs
  ): CommentToCommentConnection @deprecated(reason: "")

  """
  Type of comment. This field is equivalent to WP_Comment-&gt;comment_type and the value matching the &quot;comment_type&quot; column in SQL.
  """
  type: String @deprecated(reason: "")
}

"""
Connection between the Comment type and the Commenter type
"""
type CommentToCommenterConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Commenter @deprecated(reason: "")
}

"""
Connection between the Comment type and the ContentNode type
"""
type CommentToContentNodeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentNode @deprecated(reason: "")
}

"""
The format of post field data.
"""
enum PostObjectFieldFormatEnum {
  """
  Provide the field value directly from database
  """
  RAW

  """
  Apply the default WordPress rendering
  """
  RENDERED
}

"""
Arguments for filtering the CommentToParentCommentConnection connection
"""
input CommentToParentCommentConnectionWhereArgs {
  """
  Comment author email address.
  """
  authorEmail: String

  """
  Array of author IDs to include comments for.
  """
  authorIn: [ID]

  """
  Array of author IDs to exclude comments for.
  """
  authorNotIn: [ID]

  """
  Comment author URL.
  """
  authorUrl: String

  """
  Array of comment IDs to include.
  """
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """
  Include comments of a given type.
  """
  commentType: String

  """
  Include comments from a given array of comment types.
  """
  commentTypeIn: [String]

  """
  Exclude comments from a given array of comment types.
  """
  commentTypeNotIn: String

  """
  Content object author ID to limit results by.
  """
  contentAuthor: [ID]

  """
  Array of author IDs to retrieve comments for.
  """
  contentAuthorIn: [ID]

  """
  Array of author IDs *not* to retrieve comments for.
  """
  contentAuthorNotIn: [ID]

  """
  Limit results to those affiliated with a given content object ID.
  """
  contentId: ID

  """
  Array of content object IDs to include affiliated comments for.
  """
  contentIdIn: [ID]

  """
  Array of content object IDs to exclude affiliated comments for.
  """
  contentIdNotIn: [ID]

  """
  Content object name to retrieve affiliated comments for.
  """
  contentName: String

  """
  Content Object parent ID to retrieve affiliated comments for.
  """
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """
  Karma score to retrieve matching comments for.
  """
  karma: Int

  """
  The cardinality of the order of the connection
  """
  order: OrderEnum

  """
  Field to order the comments by.
  """
  orderby: CommentsConnectionOrderbyEnum

  """
  Parent ID of comment to retrieve children of.
  """
  parent: Int

  """
  Array of parent IDs of comments to retrieve children for.
  """
  parentIn: [ID]

  """
  Array of parent IDs of comments *not* to retrieve children for.
  """
  parentNotIn: [ID]

  """
  Search term(s) to retrieve matching comments for.
  """
  search: String

  """
  Comment status to limit results by.
  """
  status: String

  """
  Include comments for a specific user ID.
  """
  userId: ID
}

"""
Connection between the Comment type and the Comment type
"""
type CommentToParentCommentConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Comment @deprecated(reason: "")
}

"""
Arguments for filtering the CommentToCommentConnection connection
"""
input CommentToCommentConnectionWhereArgs {
  """
  Comment author email address.
  """
  authorEmail: String

  """
  Array of author IDs to include comments for.
  """
  authorIn: [ID]

  """
  Array of author IDs to exclude comments for.
  """
  authorNotIn: [ID]

  """
  Comment author URL.
  """
  authorUrl: String

  """
  Array of comment IDs to include.
  """
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """
  Include comments of a given type.
  """
  commentType: String

  """
  Include comments from a given array of comment types.
  """
  commentTypeIn: [String]

  """
  Exclude comments from a given array of comment types.
  """
  commentTypeNotIn: String

  """
  Content object author ID to limit results by.
  """
  contentAuthor: [ID]

  """
  Array of author IDs to retrieve comments for.
  """
  contentAuthorIn: [ID]

  """
  Array of author IDs *not* to retrieve comments for.
  """
  contentAuthorNotIn: [ID]

  """
  Limit results to those affiliated with a given content object ID.
  """
  contentId: ID

  """
  Array of content object IDs to include affiliated comments for.
  """
  contentIdIn: [ID]

  """
  Array of content object IDs to exclude affiliated comments for.
  """
  contentIdNotIn: [ID]

  """
  Content object name to retrieve affiliated comments for.
  """
  contentName: String

  """
  Content Object parent ID to retrieve affiliated comments for.
  """
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """
  Karma score to retrieve matching comments for.
  """
  karma: Int

  """
  The cardinality of the order of the connection
  """
  order: OrderEnum

  """
  Field to order the comments by.
  """
  orderby: CommentsConnectionOrderbyEnum

  """
  Parent ID of comment to retrieve children of.
  """
  parent: Int

  """
  Array of parent IDs of comments to retrieve children for.
  """
  parentIn: [ID]

  """
  Array of parent IDs of comments *not* to retrieve children for.
  """
  parentNotIn: [ID]

  """
  Search term(s) to retrieve matching comments for.
  """
  search: String

  """
  Comment status to limit results by.
  """
  status: String

  """
  Include comments for a specific user ID.
  """
  userId: ID
}

"""
Connection between the Comment type and the Comment type
"""
type CommentToCommentConnection {
  """
  Edges for the CommentToCommentConnection connection
  """
  edges: [CommentToCommentConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Comment] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CommentToCommentConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Comment @deprecated(reason: "")
}

"""
Connection between the User type and the EnqueuedScript type
"""
type UserToEnqueuedScriptConnection {
  """
  Edges for the UserToEnqueuedScriptConnection connection
  """
  edges: [UserToEnqueuedScriptConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [EnqueuedScript] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type UserToEnqueuedScriptConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: EnqueuedScript @deprecated(reason: "")
}

"""
Script enqueued by the CMS
"""
type EnqueuedScript implements Node & EnqueuedAsset {
  """
  @todo
  """
  args: Boolean @deprecated(reason: "")

  """
  Dependencies needed to use this asset
  """
  dependencies: [EnqueuedScript] @deprecated(reason: "")

  """
  Extra information needed for the script
  """
  extra: String @deprecated(reason: "")

  """
  The handle of the enqueued asset
  """
  handle: String @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  The source of the asset
  """
  src: String @deprecated(reason: "")

  """
  The version of the enqueued asset
  """
  version: String @deprecated(reason: "")
}

"""
Asset enqueued by the CMS
"""
interface EnqueuedAsset {
  """
  @todo
  """
  args: Boolean

  """
  Dependencies needed to use this asset
  """
  dependencies: [EnqueuedScript]

  """
  Extra information needed for the script
  """
  extra: String

  """
  The handle of the enqueued asset
  """
  handle: String

  """
  The ID of the enqueued asset
  """
  id: ID!

  """
  The source of the asset
  """
  src: String

  """
  The version of the enqueued asset
  """
  version: String
}

"""
Connection between the User type and the EnqueuedStylesheet type
"""
type UserToEnqueuedStylesheetConnection {
  """
  Edges for the UserToEnqueuedStylesheetConnection connection
  """
  edges: [UserToEnqueuedStylesheetConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [EnqueuedStylesheet] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type UserToEnqueuedStylesheetConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: EnqueuedStylesheet @deprecated(reason: "")
}

"""
Stylesheet enqueued by the CMS
"""
type EnqueuedStylesheet implements Node & EnqueuedAsset {
  """
  @todo
  """
  args: Boolean @deprecated(reason: "")

  """
  Dependencies needed to use this asset
  """
  dependencies: [EnqueuedScript] @deprecated(reason: "")

  """
  Extra information needed for the script
  """
  extra: String @deprecated(reason: "")

  """
  The handle of the enqueued asset
  """
  handle: String @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  The source of the asset
  """
  src: String @deprecated(reason: "")

  """
  The version of the enqueued asset
  """
  version: String @deprecated(reason: "")
}

"""
Arguments for filtering the UserToMediaItemConnection connection
"""
input UserToMediaItemConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: UserToMediaItemConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input UserToMediaItemConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [UserToMediaItemConnectionWhereArgsTaxArray]
}

input UserToMediaItemConnectionWhereArgsTaxArray {
  field: UserToMediaItemConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: UserToMediaItemConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum UserToMediaItemConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum UserToMediaItemConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the User type and the mediaItem type
"""
type UserToMediaItemConnection {
  """
  Edges for the UserToMediaItemConnection connection
  """
  edges: [UserToMediaItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [MediaItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type UserToMediaItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: MediaItem @deprecated(reason: "")
}

"""
The mediaItem type
"""
type MediaItem implements Node & ContentNode & UniformResourceIdentifiable & DatabaseIdentifier & NodeWithTitle & NodeWithAuthor & NodeWithComments & HierarchicalContentNode {
  """
  Alternative text to display when resource is not displayed
  """
  altText: String @deprecated(reason: "")

  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: HierarchicalContentNodeToContentNodeConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeConnection @deprecated(reason: "")

  """
  Connection between the NodeWithAuthor type and the User type
  """
  author: NodeWithAuthorToUserConnectionEdge @deprecated(reason: "")

  """
  The database identifier of the author of the node
  """
  authorDatabaseId: Int @deprecated(reason: "")

  """
  The globally unique identifier of the author of the node
  """
  authorId: ID @deprecated(reason: "")

  """
  The caption for the resource
  """
  caption(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  children(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: HierarchicalContentNodeToContentNodeConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeConnection @deprecated(reason: "")

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int @deprecated(reason: "")

  """
  Whether the comments are open or closed for this particular post.
  """
  commentStatus: String @deprecated(reason: "")

  """
  Connection between the mediaItem type and the Comment type
  """
  comments(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: MediaItemToCommentConnectionWhereArgs
  ): MediaItemToCommentConnection @deprecated(reason: "")

  """
  Connection between the mediaItem type and the ContentType type
  """
  contentType: MediaItemToContentTypeConnectionEdge @deprecated(reason: "")

  """
  The ID of the node in the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  Post publishing date.
  """
  date: String @deprecated(reason: "")

  """
  The publishing date set in GMT.
  """
  dateGmt: String @deprecated(reason: "")

  """
  Description of the image (stored as post_content)
  """
  description(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  The desired slug of the post
  """
  desiredSlug: String @deprecated(reason: "")

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge @deprecated(reason: "")

  """
  The RSS enclosure for the object
  """
  enclosure: String @deprecated(reason: "")

  """
  Connection between the ContentNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ContentNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ContentNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The filesize in bytes of the resource
  """
  fileSize(
    """
    Size of the MediaItem to return
    """
    size: MediaItemSizeEnum
  ): Int @deprecated(reason: "")

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String @deprecated(reason: "")

  """
  The globally unique identifier of the attachment object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is a node in the preview state
  """
  isPreview: Boolean @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The user that most recently edited the node
  """
  lastEditedBy: ContentNodeToEditLastConnectionEdge @deprecated(reason: "")

  """
  The permalink of the post
  """
  link: String @deprecated(reason: "")

  """
  Details about the mediaItem
  """
  mediaDetails: MediaDetails @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  mediaItemId: Int!
    @deprecated(reason: "Deprecated in favor of the databaseId field")

  """
  Url of the mediaItem
  """
  mediaItemUrl: String @deprecated(reason: "")

  """
  Type of resource
  """
  mediaType: String @deprecated(reason: "")

  """
  The mime type of the mediaItem
  """
  mimeType: String @deprecated(reason: "")

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String @deprecated(reason: "")

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String @deprecated(reason: "")

  """
  The parent of the node. The parent object can be of various types
  """
  parent: HierarchicalContentNodeToContentNodeConnectionEdge
    @deprecated(reason: "")

  """
  Database id of the parent node
  """
  parentDatabaseId: Int @deprecated(reason: "")

  """
  The globally unique identifier of the parent node.
  """
  parentId: ID @deprecated(reason: "")

  """
  The database id of the preview node
  """
  previewRevisionDatabaseId: Int @deprecated(reason: "")

  """
  Whether the object is a node in the preview state
  """
  previewRevisionId: ID @deprecated(reason: "")

  """
  The sizes attribute value for an image.
  """
  sizes(
    """
    Size of the MediaItem to calculate sizes with
    """
    size: MediaItemSizeEnum
  ): String @deprecated(reason: "")

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String @deprecated(reason: "")

  """
  Url of the mediaItem
  """
  sourceUrl(
    """
    Size of the MediaItem to return
    """
    size: MediaItemSizeEnum
  ): String @deprecated(reason: "")

  """
  The srcset attribute specifies the URL of the image to use in different situations. It is a comma separated string of urls and their widths.
  """
  srcSet(
    """
    Size of the MediaItem to calculate srcSet with
    """
    size: MediaItemSizeEnum
  ): String @deprecated(reason: "")

  """
  The current status of the object
  """
  status: String @deprecated(reason: "")

  """
  The template assigned to the node
  """
  template: ContentTemplate @deprecated(reason: "")

  """
  Connection between the ContentNode type and the TermNode type
  """
  terms(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ContentNodeToTermNodeConnectionWhereArgs
  ): ContentNodeToTermNodeConnection @deprecated(reason: "")

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  URI path for the resource
  """
  uri: String! @deprecated(reason: "")
}

"""
A node that NodeWith a title
"""
interface NodeWithTitle {
  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String
}

"""
A node that can have an author assigned to it
"""
interface NodeWithAuthor {
  """
  Connection between the NodeWithAuthor type and the User type
  """
  author: NodeWithAuthorToUserConnectionEdge

  """
  The database identifier of the author of the node
  """
  authorDatabaseId: Int

  """
  The globally unique identifier of the author of the node
  """
  authorId: ID
}

"""
Connection between the NodeWithAuthor type and the User type
"""
type NodeWithAuthorToUserConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: User @deprecated(reason: "")
}

"""
A node that can have comments associated with it
"""
interface NodeWithComments {
  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """
  Whether the comments are open or closed for this particular post.
  """
  commentStatus: String
}

"""
Content node with hierarchical (parent/child) relationships
"""
interface HierarchicalContentNode {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: HierarchicalContentNodeToContentNodeConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  children(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: HierarchicalContentNodeToContentNodeConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeConnection

  """
  The parent of the node. The parent object can be of various types
  """
  parent: HierarchicalContentNodeToContentNodeConnectionEdge

  """
  Database id of the parent node
  """
  parentDatabaseId: Int

  """
  The globally unique identifier of the parent node.
  """
  parentId: ID
}

"""
Arguments for filtering the HierarchicalContentNodeToContentNodeConnection connection
"""
input HierarchicalContentNodeToContentNodeConnectionWhereArgs {
  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: HierarchicalContentNodeToContentNodeConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input HierarchicalContentNodeToContentNodeConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [HierarchicalContentNodeToContentNodeConnectionWhereArgsTaxArray]
}

input HierarchicalContentNodeToContentNodeConnectionWhereArgsTaxArray {
  field: HierarchicalContentNodeToContentNodeConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: HierarchicalContentNodeToContentNodeConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum HierarchicalContentNodeToContentNodeConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum HierarchicalContentNodeToContentNodeConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the HierarchicalContentNode type and the ContentNode type
"""
type HierarchicalContentNodeToContentNodeConnection {
  """
  Edges for the HierarchicalContentNodeToContentNodeConnection connection
  """
  edges: [HierarchicalContentNodeToContentNodeConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ContentNode] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
Connection between the HierarchicalContentNode type and the ContentNode type
"""
type HierarchicalContentNodeToContentNodeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentNode @deprecated(reason: "")
}

"""
Arguments for filtering the MediaItemToCommentConnection connection
"""
input MediaItemToCommentConnectionWhereArgs {
  """
  Comment author email address.
  """
  authorEmail: String

  """
  Array of author IDs to include comments for.
  """
  authorIn: [ID]

  """
  Array of author IDs to exclude comments for.
  """
  authorNotIn: [ID]

  """
  Comment author URL.
  """
  authorUrl: String

  """
  Array of comment IDs to include.
  """
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """
  Include comments of a given type.
  """
  commentType: String

  """
  Include comments from a given array of comment types.
  """
  commentTypeIn: [String]

  """
  Exclude comments from a given array of comment types.
  """
  commentTypeNotIn: String

  """
  Content object author ID to limit results by.
  """
  contentAuthor: [ID]

  """
  Array of author IDs to retrieve comments for.
  """
  contentAuthorIn: [ID]

  """
  Array of author IDs *not* to retrieve comments for.
  """
  contentAuthorNotIn: [ID]

  """
  Limit results to those affiliated with a given content object ID.
  """
  contentId: ID

  """
  Array of content object IDs to include affiliated comments for.
  """
  contentIdIn: [ID]

  """
  Array of content object IDs to exclude affiliated comments for.
  """
  contentIdNotIn: [ID]

  """
  Content object name to retrieve affiliated comments for.
  """
  contentName: String

  """
  Content Object parent ID to retrieve affiliated comments for.
  """
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """
  Karma score to retrieve matching comments for.
  """
  karma: Int

  """
  The cardinality of the order of the connection
  """
  order: OrderEnum

  """
  Field to order the comments by.
  """
  orderby: CommentsConnectionOrderbyEnum

  """
  Parent ID of comment to retrieve children of.
  """
  parent: Int

  """
  Array of parent IDs of comments to retrieve children for.
  """
  parentIn: [ID]

  """
  Array of parent IDs of comments *not* to retrieve children for.
  """
  parentNotIn: [ID]

  """
  Search term(s) to retrieve matching comments for.
  """
  search: String

  """
  Comment status to limit results by.
  """
  status: String

  """
  Include comments for a specific user ID.
  """
  userId: ID
}

"""
Connection between the mediaItem type and the Comment type
"""
type MediaItemToCommentConnection {
  """
  Edges for the MediaItemToCommentConnection connection
  """
  edges: [MediaItemToCommentConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Comment] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type MediaItemToCommentConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Comment @deprecated(reason: "")
}

"""
Connection between the mediaItem type and the ContentType type
"""
type MediaItemToContentTypeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentType @deprecated(reason: "")
}

"""
Connection between the ContentNode type and the EnqueuedScript type
"""
type ContentNodeToEnqueuedScriptConnection {
  """
  Edges for the ContentNodeToEnqueuedScriptConnection connection
  """
  edges: [ContentNodeToEnqueuedScriptConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [EnqueuedScript] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ContentNodeToEnqueuedScriptConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: EnqueuedScript @deprecated(reason: "")
}

"""
Connection between the ContentNode type and the EnqueuedStylesheet type
"""
type ContentNodeToEnqueuedStylesheetConnection {
  """
  Edges for the ContentNodeToEnqueuedStylesheetConnection connection
  """
  edges: [ContentNodeToEnqueuedStylesheetConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [EnqueuedStylesheet] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ContentNodeToEnqueuedStylesheetConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: EnqueuedStylesheet @deprecated(reason: "")
}

"""
The size of the media item object.
"""
enum MediaItemSizeEnum {
  """
  MediaItem with the large size
  """
  LARGE

  """
  MediaItem with the medium size
  """
  MEDIUM

  """
  MediaItem with the medium_large size
  """
  MEDIUM_LARGE

  """
  MediaItem with the shop_catalog size
  """
  SHOP_CATALOG

  """
  MediaItem with the shop_single size
  """
  SHOP_SINGLE

  """
  MediaItem with the shop_thumbnail size
  """
  SHOP_THUMBNAIL

  """
  MediaItem with the thumbnail size
  """
  THUMBNAIL

  """
  MediaItem with the woocommerce_gallery_thumbnail size
  """
  WOOCOMMERCE_GALLERY_THUMBNAIL

  """
  MediaItem with the woocommerce_single size
  """
  WOOCOMMERCE_SINGLE

  """
  MediaItem with the woocommerce_thumbnail size
  """
  WOOCOMMERCE_THUMBNAIL

  """
  MediaItem with the 1536x1536 size
  """
  _1536X1536

  """
  MediaItem with the 2048x2048 size
  """
  _2048X2048
}

"""
Connection between the ContentNode type and the User type
"""
type ContentNodeToEditLastConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: User @deprecated(reason: "")
}

"""
File details for a Media Item
"""
type MediaDetails {
  """
  The height of the mediaItem
  """
  file: String @deprecated(reason: "")

  """
  The height of the mediaItem
  """
  height: Int @deprecated(reason: "")

  """
  """
  meta: MediaItemMeta @deprecated(reason: "")

  """
  The available sizes of the mediaItem
  """
  sizes: [MediaSize] @deprecated(reason: "")

  """
  The width of the mediaItem
  """
  width: Int @deprecated(reason: "")
}

"""
Meta connected to a MediaItem
"""
type MediaItemMeta {
  """
  """
  aperture: Float @deprecated(reason: "")

  """
  """
  camera: String @deprecated(reason: "")

  """
  """
  caption: String @deprecated(reason: "")

  """
  """
  copyright: String @deprecated(reason: "")

  """
  """
  createdTimestamp: Int @deprecated(reason: "")

  """
  """
  credit: String @deprecated(reason: "")

  """
  """
  focalLength: Float @deprecated(reason: "")

  """
  """
  iso: Int @deprecated(reason: "")

  """
  """
  keywords: [String] @deprecated(reason: "")

  """
  """
  orientation: String @deprecated(reason: "")

  """
  """
  shutterSpeed: Float @deprecated(reason: "")

  """
  """
  title: String @deprecated(reason: "")
}

"""
Details of an available size for a media item
"""
type MediaSize {
  """
  The file of the for the referenced size
  """
  file: String @deprecated(reason: "")

  """
  The filesize of the resource
  """
  fileSize: Int @deprecated(reason: "")

  """
  The height of the for the referenced size
  """
  height: String @deprecated(reason: "")

  """
  The mime type of the resource
  """
  mimeType: String @deprecated(reason: "")

  """
  The referenced size name
  """
  name: String @deprecated(reason: "")

  """
  The url of the for the referenced size
  """
  sourceUrl: String @deprecated(reason: "")

  """
  The width of the for the referenced size
  """
  width: String @deprecated(reason: "")
}

"""
The template assigned to a node of content
"""
interface ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String

  """
  The name of the template
  """
  templateName: String
}

"""
Arguments for filtering the ContentNodeToTermNodeConnection connection
"""
input ContentNodeToTermNodeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  The Taxonomy to filter terms by
  """
  taxonomies: [TaxonomyEnum]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Options for ordering the connection by
"""
enum TermObjectsConnectionOrderbyEnum {
  COUNT
  DESCRIPTION
  NAME
  SLUG
  TERM_GROUP
  TERM_ID
  TERM_ORDER
}

"""
Connection between the ContentNode type and the TermNode type
"""
type ContentNodeToTermNodeConnection {
  """
  Edges for the ContentNodeToTermNodeConnection connection
  """
  edges: [ContentNodeToTermNodeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [TermNode] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ContentNodeToTermNodeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: TermNode @deprecated(reason: "")
}

"""
Terms are nodes within a Taxonomy, used to group and relate other nodes.
"""
interface TermNode {
  """
  The number of objects connected to the object
  """
  count: Int

  """
  Identifies the primary key from the database.
  """
  databaseId: Int!

  """
  The description of the object
  """
  description: String

  """
  Connection between the TermNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedScriptConnection

  """
  Connection between the TermNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedStylesheetConnection

  """
  Unique identifier for the term
  """
  id: ID!

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean

  """
  The link to the term
  """
  link: String

  """
  The human friendly name of the object.
  """
  name: String

  """
  An alphanumeric identifier for the object unique to its type.
  """
  slug: String

  """
  The ID of the term group that this term object belongs to
  """
  termGroupId: Int

  """
  The taxonomy ID that the object is associated with
  """
  termTaxonomyId: Int

  """
  The unique resource identifier path
  """
  uri: String!
}

"""
Connection between the TermNode type and the EnqueuedScript type
"""
type TermNodeToEnqueuedScriptConnection {
  """
  Edges for the TermNodeToEnqueuedScriptConnection connection
  """
  edges: [TermNodeToEnqueuedScriptConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [EnqueuedScript] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type TermNodeToEnqueuedScriptConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: EnqueuedScript @deprecated(reason: "")
}

"""
Connection between the TermNode type and the EnqueuedStylesheet type
"""
type TermNodeToEnqueuedStylesheetConnection {
  """
  Edges for the TermNodeToEnqueuedStylesheetConnection connection
  """
  edges: [TermNodeToEnqueuedStylesheetConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [EnqueuedStylesheet] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type TermNodeToEnqueuedStylesheetConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: EnqueuedStylesheet @deprecated(reason: "")
}

"""
Arguments for filtering the UserToPageConnection connection
"""
input UserToPageConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: UserToPageConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input UserToPageConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [UserToPageConnectionWhereArgsTaxArray]
}

input UserToPageConnectionWhereArgsTaxArray {
  field: UserToPageConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: UserToPageConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum UserToPageConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum UserToPageConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the User type and the page type
"""
type UserToPageConnection {
  """
  Edges for the UserToPageConnection connection
  """
  edges: [UserToPageConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Page] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type UserToPageConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Page @deprecated(reason: "")
}

"""
The page type
"""
type Page implements Node & ContentNode & UniformResourceIdentifiable & DatabaseIdentifier & NodeWithTitle & NodeWithContentEditor & NodeWithAuthor & NodeWithFeaturedImage & NodeWithComments & NodeWithRevisions & NodeWithPageAttributes & HierarchicalContentNode & MenuItemLinkable {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: HierarchicalContentNodeToContentNodeConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeConnection @deprecated(reason: "")

  """
  Connection between the NodeWithAuthor type and the User type
  """
  author: NodeWithAuthorToUserConnectionEdge @deprecated(reason: "")

  """
  The database identifier of the author of the node
  """
  authorDatabaseId: Int @deprecated(reason: "")

  """
  The globally unique identifier of the author of the node
  """
  authorId: ID @deprecated(reason: "")

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  children(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: HierarchicalContentNodeToContentNodeConnectionWhereArgs
  ): HierarchicalContentNodeToContentNodeConnection @deprecated(reason: "")

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int @deprecated(reason: "")

  """
  Whether the comments are open or closed for this particular post.
  """
  commentStatus: String @deprecated(reason: "")

  """
  Connection between the page type and the Comment type
  """
  comments(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: PageToCommentConnectionWhereArgs
  ): PageToCommentConnection @deprecated(reason: "")

  """
  The content of the post.
  """
  content(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the page type and the ContentType type
  """
  contentType: PageToContentTypeConnectionEdge @deprecated(reason: "")

  """
  The ID of the node in the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  Post publishing date.
  """
  date: String @deprecated(reason: "")

  """
  The publishing date set in GMT.
  """
  dateGmt: String @deprecated(reason: "")

  """
  The desired slug of the post
  """
  desiredSlug: String @deprecated(reason: "")

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge @deprecated(reason: "")

  """
  The RSS enclosure for the object
  """
  enclosure: String @deprecated(reason: "")

  """
  Connection between the ContentNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ContentNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ContentNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge
    @deprecated(reason: "")

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int @deprecated(reason: "")

  """
  Globally unique ID of the featured image assigned to the node
  """
  featuredImageId: ID @deprecated(reason: "")

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String @deprecated(reason: "")

  """
  The globally unique identifier of the page object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether this page is set to the static front page.
  """
  isFrontPage: Boolean! @deprecated(reason: "")

  """
  Whether this page is set to the blog posts page.
  """
  isPostsPage: Boolean! @deprecated(reason: "")

  """
  Whether the object is a node in the preview state
  """
  isPreview: Boolean @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  True if the node is a revision of another node
  """
  isRevision: Boolean @deprecated(reason: "")

  """
  The user that most recently edited the node
  """
  lastEditedBy: ContentNodeToEditLastConnectionEdge @deprecated(reason: "")

  """
  The permalink of the post
  """
  link: String @deprecated(reason: "")

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int @deprecated(reason: "")

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String @deprecated(reason: "")

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  pageId: Int!
    @deprecated(reason: "Deprecated in favor of the databaseId field")

  """
  The parent of the node. The parent object can be of various types
  """
  parent: HierarchicalContentNodeToContentNodeConnectionEdge
    @deprecated(reason: "")

  """
  Database id of the parent node
  """
  parentDatabaseId: Int @deprecated(reason: "")

  """
  The globally unique identifier of the parent node.
  """
  parentId: ID @deprecated(reason: "")

  """
  Connection between the page type and the page type
  """
  preview: PageToPreviewConnectionEdge @deprecated(reason: "")

  """
  The database id of the preview node
  """
  previewRevisionDatabaseId: Int @deprecated(reason: "")

  """
  Whether the object is a node in the preview state
  """
  previewRevisionId: ID @deprecated(reason: "")

  """
  If the current node is a revision, this field exposes the node this is a revision of. Returns null if the node is not a revision of another node.
  """
  revisionOf: NodeWithRevisionsToContentNodeConnectionEdge
    @deprecated(reason: "")

  """
  Connection between the page type and the page type
  """
  revisions(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: PageToRevisionConnectionWhereArgs
  ): PageToRevisionConnection @deprecated(reason: "")

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String @deprecated(reason: "")

  """
  The current status of the object
  """
  status: String @deprecated(reason: "")

  """
  The template assigned to the node
  """
  template: ContentTemplate @deprecated(reason: "")

  """
  Connection between the ContentNode type and the TermNode type
  """
  terms(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ContentNodeToTermNodeConnectionWhereArgs
  ): ContentNodeToTermNodeConnection @deprecated(reason: "")

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  URI path for the resource
  """
  uri: String! @deprecated(reason: "")
}

"""
A node that supports the content editor
"""
interface NodeWithContentEditor {
  """
  The content of the post.
  """
  content(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String
}

"""
A node that can have a featured image set
"""
interface NodeWithFeaturedImage {
  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """
  Globally unique ID of the featured image assigned to the node
  """
  featuredImageId: ID
}

"""
Connection between the NodeWithFeaturedImage type and the MediaItem type
"""
type NodeWithFeaturedImageToMediaItemConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: MediaItem @deprecated(reason: "")
}

"""
A node that can have revisions
"""
interface NodeWithRevisions {
  """
  True if the node is a revision of another node
  """
  isRevision: Boolean

  """
  If the current node is a revision, this field exposes the node this is a revision of. Returns null if the node is not a revision of another node.
  """
  revisionOf: NodeWithRevisionsToContentNodeConnectionEdge
}

"""
Connection between the NodeWithRevisions type and the ContentNode type
"""
type NodeWithRevisionsToContentNodeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentNode @deprecated(reason: "")
}

"""
A node that can have page attributes
"""
interface NodeWithPageAttributes {
  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int
}

"""
Nodes that can be linked to as Menu Items
"""
interface MenuItemLinkable {
  """
  The unique resource identifier path
  """
  databaseId: Int!

  """
  The unique resource identifier path
  """
  id: ID!

  """
  The unique resource identifier path
  """
  uri: String!
}

"""
Arguments for filtering the PageToCommentConnection connection
"""
input PageToCommentConnectionWhereArgs {
  """
  Comment author email address.
  """
  authorEmail: String

  """
  Array of author IDs to include comments for.
  """
  authorIn: [ID]

  """
  Array of author IDs to exclude comments for.
  """
  authorNotIn: [ID]

  """
  Comment author URL.
  """
  authorUrl: String

  """
  Array of comment IDs to include.
  """
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """
  Include comments of a given type.
  """
  commentType: String

  """
  Include comments from a given array of comment types.
  """
  commentTypeIn: [String]

  """
  Exclude comments from a given array of comment types.
  """
  commentTypeNotIn: String

  """
  Content object author ID to limit results by.
  """
  contentAuthor: [ID]

  """
  Array of author IDs to retrieve comments for.
  """
  contentAuthorIn: [ID]

  """
  Array of author IDs *not* to retrieve comments for.
  """
  contentAuthorNotIn: [ID]

  """
  Limit results to those affiliated with a given content object ID.
  """
  contentId: ID

  """
  Array of content object IDs to include affiliated comments for.
  """
  contentIdIn: [ID]

  """
  Array of content object IDs to exclude affiliated comments for.
  """
  contentIdNotIn: [ID]

  """
  Content object name to retrieve affiliated comments for.
  """
  contentName: String

  """
  Content Object parent ID to retrieve affiliated comments for.
  """
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """
  Karma score to retrieve matching comments for.
  """
  karma: Int

  """
  The cardinality of the order of the connection
  """
  order: OrderEnum

  """
  Field to order the comments by.
  """
  orderby: CommentsConnectionOrderbyEnum

  """
  Parent ID of comment to retrieve children of.
  """
  parent: Int

  """
  Array of parent IDs of comments to retrieve children for.
  """
  parentIn: [ID]

  """
  Array of parent IDs of comments *not* to retrieve children for.
  """
  parentNotIn: [ID]

  """
  Search term(s) to retrieve matching comments for.
  """
  search: String

  """
  Comment status to limit results by.
  """
  status: String

  """
  Include comments for a specific user ID.
  """
  userId: ID
}

"""
Connection between the page type and the Comment type
"""
type PageToCommentConnection {
  """
  Edges for the PageToCommentConnection connection
  """
  edges: [PageToCommentConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Comment] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type PageToCommentConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Comment @deprecated(reason: "")
}

"""
Connection between the page type and the ContentType type
"""
type PageToContentTypeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentType @deprecated(reason: "")
}

"""
Connection between the page type and the page type
"""
type PageToPreviewConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Page @deprecated(reason: "")
}

"""
Arguments for filtering the pageToRevisionConnection connection
"""
input PageToRevisionConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: PageToRevisionConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input PageToRevisionConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [PageToRevisionConnectionWhereArgsTaxArray]
}

input PageToRevisionConnectionWhereArgsTaxArray {
  field: PageToRevisionConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: PageToRevisionConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum PageToRevisionConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum PageToRevisionConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the page type and the page type
"""
type PageToRevisionConnection {
  """
  Edges for the pageToRevisionConnection connection
  """
  edges: [PageToRevisionConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Page] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type PageToRevisionConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Page @deprecated(reason: "")
}

"""
Arguments for filtering the UserToPostConnection connection
"""
input UserToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Category ID
  """
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """
  Use Category Slug
  """
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum

  """
  Tag Slug
  """
  tag: String

  """
  Use Tag ID
  """
  tagId: String

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagIn: [ID]

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagNotIn: [ID]

  """
  Array of tag slugs, used to display objects from one tag OR another
  """
  tagSlugAnd: [String]

  """
  Array of tag slugs, used to exclude objects in specified tags
  """
  tagSlugIn: [String]
  taxQuery: UserToPostConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input UserToPostConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [UserToPostConnectionWhereArgsTaxArray]
}

input UserToPostConnectionWhereArgsTaxArray {
  field: UserToPostConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: UserToPostConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum UserToPostConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum UserToPostConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the User type and the post type
"""
type UserToPostConnection {
  """
  Edges for the UserToPostConnection connection
  """
  edges: [UserToPostConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Post] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type UserToPostConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Post @deprecated(reason: "")
}

"""
The post type
"""
type Post implements Node & ContentNode & UniformResourceIdentifiable & DatabaseIdentifier & NodeWithTitle & NodeWithContentEditor & NodeWithAuthor & NodeWithFeaturedImage & NodeWithExcerpt & NodeWithComments & NodeWithTrackbacks & NodeWithRevisions & MenuItemLinkable {
  """
  Connection between the NodeWithAuthor type and the User type
  """
  author: NodeWithAuthorToUserConnectionEdge @deprecated(reason: "")

  """
  The database identifier of the author of the node
  """
  authorDatabaseId: Int @deprecated(reason: "")

  """
  The globally unique identifier of the author of the node
  """
  authorId: ID @deprecated(reason: "")

  """
  Connection between the post type and the category type
  """
  categories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: PostToCategoryConnectionWhereArgs
  ): PostToCategoryConnection @deprecated(reason: "")

  """
  The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int @deprecated(reason: "")

  """
  Whether the comments are open or closed for this particular post.
  """
  commentStatus: String @deprecated(reason: "")

  """
  Connection between the post type and the Comment type
  """
  comments(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: PostToCommentConnectionWhereArgs
  ): PostToCommentConnection @deprecated(reason: "")

  """
  The content of the post.
  """
  content(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the post type and the ContentType type
  """
  contentType: PostToContentTypeConnectionEdge @deprecated(reason: "")

  """
  The ID of the node in the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  Post publishing date.
  """
  date: String @deprecated(reason: "")

  """
  The publishing date set in GMT.
  """
  dateGmt: String @deprecated(reason: "")

  """
  The desired slug of the post
  """
  desiredSlug: String @deprecated(reason: "")

  """
  If a user has edited the node within the past 15 seconds, this will return the user that last edited. Null if the edit lock doesn&#039;t exist or is greater than 15 seconds
  """
  editingLockedBy: ContentNodeToEditLockConnectionEdge @deprecated(reason: "")

  """
  The RSS enclosure for the object
  """
  enclosure: String @deprecated(reason: "")

  """
  Connection between the ContentNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ContentNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the ContentNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ContentNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The excerpt of the post.
  """
  excerpt(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: NodeWithFeaturedImageToMediaItemConnectionEdge
    @deprecated(reason: "")

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int @deprecated(reason: "")

  """
  Globally unique ID of the featured image assigned to the node
  """
  featuredImageId: ID @deprecated(reason: "")

  """
  The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  """
  guid: String @deprecated(reason: "")

  """
  The globally unique identifier of the post object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is a node in the preview state
  """
  isPreview: Boolean @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  True if the node is a revision of another node
  """
  isRevision: Boolean @deprecated(reason: "")

  """
  The user that most recently edited the node
  """
  lastEditedBy: ContentNodeToEditLastConnectionEdge @deprecated(reason: "")

  """
  The permalink of the post
  """
  link: String @deprecated(reason: "")

  """
  The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  """
  modified: String @deprecated(reason: "")

  """
  The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  """
  modifiedGmt: String @deprecated(reason: "")

  """
  Whether the pings are open or closed for this particular post.
  """
  pingStatus: String @deprecated(reason: "")

  """
  URLs that have been pinged.
  """
  pinged: [String] @deprecated(reason: "")

  """
  Connection between the post type and the postFormat type
  """
  postFormats(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: PostToPostFormatConnectionWhereArgs
  ): PostToPostFormatConnection @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  postId: Int!
    @deprecated(reason: "Deprecated in favor of the databaseId field")

  """
  Connection between the post type and the post type
  """
  preview: PostToPreviewConnectionEdge @deprecated(reason: "")

  """
  The database id of the preview node
  """
  previewRevisionDatabaseId: Int @deprecated(reason: "")

  """
  Whether the object is a node in the preview state
  """
  previewRevisionId: ID @deprecated(reason: "")

  """
  If the current node is a revision, this field exposes the node this is a revision of. Returns null if the node is not a revision of another node.
  """
  revisionOf: NodeWithRevisionsToContentNodeConnectionEdge
    @deprecated(reason: "")

  """
  Connection between the post type and the post type
  """
  revisions(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: PostToRevisionConnectionWhereArgs
  ): PostToRevisionConnection @deprecated(reason: "")

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  """
  slug: String @deprecated(reason: "")

  """
  The current status of the object
  """
  status: String @deprecated(reason: "")

  """
  Connection between the post type and the tag type
  """
  tags(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: PostToTagConnectionWhereArgs
  ): PostToTagConnection @deprecated(reason: "")

  """
  The template assigned to the node
  """
  template: ContentTemplate @deprecated(reason: "")

  """
  Connection between the ContentNode type and the TermNode type
  """
  terms(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ContentNodeToTermNodeConnectionWhereArgs
  ): ContentNodeToTermNodeConnection @deprecated(reason: "")

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  URLs queued to be pinged.
  """
  toPing: [String] @deprecated(reason: "")

  """
  URI path for the resource
  """
  uri: String! @deprecated(reason: "")
}

"""
A node that can have an excerpt
"""
interface NodeWithExcerpt {
  """
  The excerpt of the post.
  """
  excerpt(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String
}

"""
A node that can have trackbacks and pingbacks
"""
interface NodeWithTrackbacks {
  """
  Whether the pings are open or closed for this particular post.
  """
  pingStatus: String

  """
  URLs that have been pinged.
  """
  pinged: [String]

  """
  URLs queued to be pinged.
  """
  toPing: [String]
}

"""
Arguments for filtering the PostToCategoryConnection connection
"""
input PostToCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the post type and the category type
"""
type PostToCategoryConnection {
  """
  Edges for the PostToCategoryConnection connection
  """
  edges: [PostToCategoryConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Category] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type PostToCategoryConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Category @deprecated(reason: "")
}

"""
The category type
"""
type Category implements Node & TermNode & UniformResourceIdentifiable & DatabaseIdentifier & HierarchicalTermNode & MenuItemLinkable {
  """
  The ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): CategoryToAncestorsCategoryConnection @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  categoryId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """
  Connection between the category type and the category type
  """
  children(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CategoryToCategoryConnectionWhereArgs
  ): CategoryToCategoryConnection @deprecated(reason: "")

  """
  The number of objects connected to the object
  """
  count: Int @deprecated(reason: "")

  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The description of the object
  """
  description: String @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The link to the term
  """
  link: String @deprecated(reason: "")

  """
  The human friendly name of the object.
  """
  name: String @deprecated(reason: "")

  """
  Connection between the category type and the category type
  """
  parent: CategoryToParentCategoryConnectionEdge @deprecated(reason: "")

  """
  Database id of the parent node
  """
  parentDatabaseId: Int @deprecated(reason: "")

  """
  The globally unique identifier of the parent node.
  """
  parentId: ID @deprecated(reason: "")

  """
  Connection between the category type and the post type
  """
  posts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CategoryToPostConnectionWhereArgs
  ): CategoryToPostConnection @deprecated(reason: "")

  """
  An alphanumeric identifier for the object unique to its type.
  """
  slug: String @deprecated(reason: "")

  """
  Connection between the category type and the Taxonomy type
  """
  taxonomy: CategoryToTaxonomyConnectionEdge @deprecated(reason: "")

  """
  The ID of the term group that this term object belongs to
  """
  termGroupId: Int @deprecated(reason: "")

  """
  The taxonomy ID that the object is associated with
  """
  termTaxonomyId: Int @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String! @deprecated(reason: "")
}

"""
Term node with hierarchical (parent/child) relationships
"""
interface HierarchicalTermNode {
  """
  Database id of the parent node
  """
  parentDatabaseId: Int

  """
  The globally unique identifier of the parent node.
  """
  parentId: ID
}

"""
Connection between the category type and the category type
"""
type CategoryToAncestorsCategoryConnection {
  """
  Edges for the CategoryToAncestorsCategoryConnection connection
  """
  edges: [CategoryToAncestorsCategoryConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Category] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CategoryToAncestorsCategoryConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Category @deprecated(reason: "")
}

"""
Arguments for filtering the CategoryToCategoryConnection connection
"""
input CategoryToCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the category type and the category type
"""
type CategoryToCategoryConnection {
  """
  Edges for the CategoryToCategoryConnection connection
  """
  edges: [CategoryToCategoryConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Category] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CategoryToCategoryConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Category @deprecated(reason: "")
}

"""
Connection between the category type and the category type
"""
type CategoryToParentCategoryConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Category @deprecated(reason: "")
}

"""
Arguments for filtering the CategoryToPostConnection connection
"""
input CategoryToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Category ID
  """
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """
  Use Category Slug
  """
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum

  """
  Tag Slug
  """
  tag: String

  """
  Use Tag ID
  """
  tagId: String

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagIn: [ID]

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagNotIn: [ID]

  """
  Array of tag slugs, used to display objects from one tag OR another
  """
  tagSlugAnd: [String]

  """
  Array of tag slugs, used to exclude objects in specified tags
  """
  tagSlugIn: [String]
  taxQuery: CategoryToPostConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input CategoryToPostConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [CategoryToPostConnectionWhereArgsTaxArray]
}

input CategoryToPostConnectionWhereArgsTaxArray {
  field: CategoryToPostConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: CategoryToPostConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum CategoryToPostConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum CategoryToPostConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the category type and the post type
"""
type CategoryToPostConnection {
  """
  Edges for the CategoryToPostConnection connection
  """
  edges: [CategoryToPostConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Post] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CategoryToPostConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Post @deprecated(reason: "")
}

"""
Connection between the category type and the Taxonomy type
"""
type CategoryToTaxonomyConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
Arguments for filtering the PostToCommentConnection connection
"""
input PostToCommentConnectionWhereArgs {
  """
  Comment author email address.
  """
  authorEmail: String

  """
  Array of author IDs to include comments for.
  """
  authorIn: [ID]

  """
  Array of author IDs to exclude comments for.
  """
  authorNotIn: [ID]

  """
  Comment author URL.
  """
  authorUrl: String

  """
  Array of comment IDs to include.
  """
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """
  Include comments of a given type.
  """
  commentType: String

  """
  Include comments from a given array of comment types.
  """
  commentTypeIn: [String]

  """
  Exclude comments from a given array of comment types.
  """
  commentTypeNotIn: String

  """
  Content object author ID to limit results by.
  """
  contentAuthor: [ID]

  """
  Array of author IDs to retrieve comments for.
  """
  contentAuthorIn: [ID]

  """
  Array of author IDs *not* to retrieve comments for.
  """
  contentAuthorNotIn: [ID]

  """
  Limit results to those affiliated with a given content object ID.
  """
  contentId: ID

  """
  Array of content object IDs to include affiliated comments for.
  """
  contentIdIn: [ID]

  """
  Array of content object IDs to exclude affiliated comments for.
  """
  contentIdNotIn: [ID]

  """
  Content object name to retrieve affiliated comments for.
  """
  contentName: String

  """
  Content Object parent ID to retrieve affiliated comments for.
  """
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """
  Karma score to retrieve matching comments for.
  """
  karma: Int

  """
  The cardinality of the order of the connection
  """
  order: OrderEnum

  """
  Field to order the comments by.
  """
  orderby: CommentsConnectionOrderbyEnum

  """
  Parent ID of comment to retrieve children of.
  """
  parent: Int

  """
  Array of parent IDs of comments to retrieve children for.
  """
  parentIn: [ID]

  """
  Array of parent IDs of comments *not* to retrieve children for.
  """
  parentNotIn: [ID]

  """
  Search term(s) to retrieve matching comments for.
  """
  search: String

  """
  Comment status to limit results by.
  """
  status: String

  """
  Include comments for a specific user ID.
  """
  userId: ID
}

"""
Connection between the post type and the Comment type
"""
type PostToCommentConnection {
  """
  Edges for the PostToCommentConnection connection
  """
  edges: [PostToCommentConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Comment] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type PostToCommentConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Comment @deprecated(reason: "")
}

"""
Connection between the post type and the ContentType type
"""
type PostToContentTypeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentType @deprecated(reason: "")
}

"""
Arguments for filtering the PostToPostFormatConnection connection
"""
input PostToPostFormatConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the post type and the postFormat type
"""
type PostToPostFormatConnection {
  """
  Edges for the PostToPostFormatConnection connection
  """
  edges: [PostToPostFormatConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [PostFormat] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type PostToPostFormatConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: PostFormat @deprecated(reason: "")
}

"""
The postFormat type
"""
type PostFormat implements Node & TermNode & UniformResourceIdentifiable & DatabaseIdentifier {
  """
  The number of objects connected to the object
  """
  count: Int @deprecated(reason: "")

  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The description of the object
  """
  description: String @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The link to the term
  """
  link: String @deprecated(reason: "")

  """
  The human friendly name of the object.
  """
  name: String @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  postFormatId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """
  Connection between the postFormat type and the post type
  """
  posts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: PostFormatToPostConnectionWhereArgs
  ): PostFormatToPostConnection @deprecated(reason: "")

  """
  An alphanumeric identifier for the object unique to its type.
  """
  slug: String @deprecated(reason: "")

  """
  Connection between the postFormat type and the Taxonomy type
  """
  taxonomy: PostFormatToTaxonomyConnectionEdge @deprecated(reason: "")

  """
  The ID of the term group that this term object belongs to
  """
  termGroupId: Int @deprecated(reason: "")

  """
  The taxonomy ID that the object is associated with
  """
  termTaxonomyId: Int @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String! @deprecated(reason: "")
}

"""
Arguments for filtering the PostFormatToPostConnection connection
"""
input PostFormatToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Category ID
  """
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """
  Use Category Slug
  """
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum

  """
  Tag Slug
  """
  tag: String

  """
  Use Tag ID
  """
  tagId: String

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagIn: [ID]

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagNotIn: [ID]

  """
  Array of tag slugs, used to display objects from one tag OR another
  """
  tagSlugAnd: [String]

  """
  Array of tag slugs, used to exclude objects in specified tags
  """
  tagSlugIn: [String]
  taxQuery: PostFormatToPostConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input PostFormatToPostConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [PostFormatToPostConnectionWhereArgsTaxArray]
}

input PostFormatToPostConnectionWhereArgsTaxArray {
  field: PostFormatToPostConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: PostFormatToPostConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum PostFormatToPostConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum PostFormatToPostConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the postFormat type and the post type
"""
type PostFormatToPostConnection {
  """
  Edges for the PostFormatToPostConnection connection
  """
  edges: [PostFormatToPostConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Post] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type PostFormatToPostConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Post @deprecated(reason: "")
}

"""
Connection between the postFormat type and the Taxonomy type
"""
type PostFormatToTaxonomyConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
Connection between the post type and the post type
"""
type PostToPreviewConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Post @deprecated(reason: "")
}

"""
Arguments for filtering the postToRevisionConnection connection
"""
input PostToRevisionConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Category ID
  """
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """
  Use Category Slug
  """
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum

  """
  Tag Slug
  """
  tag: String

  """
  Use Tag ID
  """
  tagId: String

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagIn: [ID]

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagNotIn: [ID]

  """
  Array of tag slugs, used to display objects from one tag OR another
  """
  tagSlugAnd: [String]

  """
  Array of tag slugs, used to exclude objects in specified tags
  """
  tagSlugIn: [String]
  taxQuery: PostToRevisionConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input PostToRevisionConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [PostToRevisionConnectionWhereArgsTaxArray]
}

input PostToRevisionConnectionWhereArgsTaxArray {
  field: PostToRevisionConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: PostToRevisionConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum PostToRevisionConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum PostToRevisionConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the post type and the post type
"""
type PostToRevisionConnection {
  """
  Edges for the postToRevisionConnection connection
  """
  edges: [PostToRevisionConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Post] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type PostToRevisionConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Post @deprecated(reason: "")
}

"""
Arguments for filtering the PostToTagConnection connection
"""
input PostToTagConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the post type and the tag type
"""
type PostToTagConnection {
  """
  Edges for the PostToTagConnection connection
  """
  edges: [PostToTagConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Tag] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type PostToTagConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Tag @deprecated(reason: "")
}

"""
The tag type
"""
type Tag implements Node & TermNode & UniformResourceIdentifiable & DatabaseIdentifier & MenuItemLinkable {
  """
  The number of objects connected to the object
  """
  count: Int @deprecated(reason: "")

  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The description of the object
  """
  description: String @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The link to the term
  """
  link: String @deprecated(reason: "")

  """
  The human friendly name of the object.
  """
  name: String @deprecated(reason: "")

  """
  Connection between the tag type and the post type
  """
  posts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: TagToPostConnectionWhereArgs
  ): TagToPostConnection @deprecated(reason: "")

  """
  An alphanumeric identifier for the object unique to its type.
  """
  slug: String @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  tagId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """
  Connection between the tag type and the Taxonomy type
  """
  taxonomy: TagToTaxonomyConnectionEdge @deprecated(reason: "")

  """
  The ID of the term group that this term object belongs to
  """
  termGroupId: Int @deprecated(reason: "")

  """
  The taxonomy ID that the object is associated with
  """
  termTaxonomyId: Int @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String! @deprecated(reason: "")
}

"""
Arguments for filtering the TagToPostConnection connection
"""
input TagToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Category ID
  """
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """
  Use Category Slug
  """
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum

  """
  Tag Slug
  """
  tag: String

  """
  Use Tag ID
  """
  tagId: String

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagIn: [ID]

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagNotIn: [ID]

  """
  Array of tag slugs, used to display objects from one tag OR another
  """
  tagSlugAnd: [String]

  """
  Array of tag slugs, used to exclude objects in specified tags
  """
  tagSlugIn: [String]
  taxQuery: TagToPostConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input TagToPostConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [TagToPostConnectionWhereArgsTaxArray]
}

input TagToPostConnectionWhereArgsTaxArray {
  field: TagToPostConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: TagToPostConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum TagToPostConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum TagToPostConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the tag type and the post type
"""
type TagToPostConnection {
  """
  Edges for the TagToPostConnection connection
  """
  edges: [TagToPostConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Post] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type TagToPostConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Post @deprecated(reason: "")
}

"""
Connection between the tag type and the Taxonomy type
"""
type TagToTaxonomyConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
Arguments for filtering the UserToContentRevisionUnionConnection connection
"""
input UserToContentRevisionUnionConnectionWhereArgs {
  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: UserToContentRevisionUnionConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input UserToContentRevisionUnionConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [UserToContentRevisionUnionConnectionWhereArgsTaxArray]
}

input UserToContentRevisionUnionConnectionWhereArgsTaxArray {
  field: UserToContentRevisionUnionConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: UserToContentRevisionUnionConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum UserToContentRevisionUnionConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum UserToContentRevisionUnionConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the User type and the ContentRevisionUnion type
"""
type UserToContentRevisionUnionConnection {
  """
  Edges for the UserToContentRevisionUnionConnection connection
  """
  edges: [UserToContentRevisionUnionConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ContentRevisionUnion] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type UserToContentRevisionUnionConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ContentRevisionUnion @deprecated(reason: "")
}

union ContentRevisionUnion = Post | Page

"""
Connection between the User type and the UserRole type
"""
type UserToUserRoleConnection {
  """
  Edges for the UserToUserRoleConnection connection
  """
  edges: [UserToUserRoleConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [UserRole] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type UserToUserRoleConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: UserRole @deprecated(reason: "")
}

"""
A user role object
"""
type UserRole implements Node {
  """
  The capabilities that belong to this role
  """
  capabilities: [String] @deprecated(reason: "")

  """
  The display name of the role
  """
  displayName: String @deprecated(reason: "")

  """
  The globally unique identifier for the user role object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The registered name of the role
  """
  name: String @deprecated(reason: "")
}

"""
Details for labels of the PostType
"""
type PostTypeLabelDetails {
  """
  Default is ‘Add New’ for both hierarchical and non-hierarchical types.
  """
  addNew: String @deprecated(reason: "")

  """
  Label for adding a new singular item.
  """
  addNewItem: String @deprecated(reason: "")

  """
  Label to signify all items in a submenu link.
  """
  allItems: String @deprecated(reason: "")

  """
  Label for archives in nav menus
  """
  archives: String @deprecated(reason: "")

  """
  Label for the attributes meta box.
  """
  attributes: String @deprecated(reason: "")

  """
  Label for editing a singular item.
  """
  editItem: String @deprecated(reason: "")

  """
  Label for the Featured Image meta box title.
  """
  featuredImage: String @deprecated(reason: "")

  """
  Label for the table views hidden heading.
  """
  filterItemsList: String @deprecated(reason: "")

  """
  Label for the media frame button.
  """
  insertIntoItem: String @deprecated(reason: "")

  """
  Label for the table hidden heading.
  """
  itemsList: String @deprecated(reason: "")

  """
  Label for the table pagination hidden heading.
  """
  itemsListNavigation: String @deprecated(reason: "")

  """
  Label for the menu name.
  """
  menuName: String @deprecated(reason: "")

  """
  General name for the post type, usually plural.
  """
  name: String @deprecated(reason: "")

  """
  Label for the new item page title.
  """
  newItem: String @deprecated(reason: "")

  """
  Label used when no items are found.
  """
  notFound: String @deprecated(reason: "")

  """
  Label used when no items are in the trash.
  """
  notFoundInTrash: String @deprecated(reason: "")

  """
  Label used to prefix parents of hierarchical items.
  """
  parentItemColon: String @deprecated(reason: "")

  """
  Label for removing the featured image.
  """
  removeFeaturedImage: String @deprecated(reason: "")

  """
  Label for searching plural items.
  """
  searchItems: String @deprecated(reason: "")

  """
  Label for setting the featured image.
  """
  setFeaturedImage: String @deprecated(reason: "")

  """
  Name for one object of this post type.
  """
  singularName: String @deprecated(reason: "")

  """
  Label for the media frame filter.
  """
  uploadedToThisItem: String @deprecated(reason: "")

  """
  Label in the media frame for using a featured image.
  """
  useFeaturedImage: String @deprecated(reason: "")

  """
  Label for viewing a singular item.
  """
  viewItem: String @deprecated(reason: "")

  """
  Label for viewing post type archives.
  """
  viewItems: String @deprecated(reason: "")
}

"""
Coupon discount type enumeration
"""
enum DiscountTypeEnum {
  FIXED_CART
  FIXED_PRODUCT
  PERCENT
}

"""
Arguments for filtering the CouponToProductCategoryConnection connection
"""
input CouponToProductCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the Coupon type and the ProductCategory type
"""
type CouponToProductCategoryConnection {
  """
  Edges for the CouponToProductCategoryConnection connection
  """
  edges: [CouponToProductCategoryConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductCategory] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CouponToProductCategoryConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductCategory @deprecated(reason: "")
}

"""
The productCategory type
"""
type ProductCategory implements Node & TermNode & UniformResourceIdentifiable & DatabaseIdentifier & HierarchicalTermNode & MenuItemLinkable {
  """
  The ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ProductCategoryToAncestorsProductCategoryConnection @deprecated(reason: "")

  """
  Connection between the productCategory type and the productCategory type
  """
  children(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductCategoryToProductCategoryConnectionWhereArgs
  ): ProductCategoryToProductCategoryConnection @deprecated(reason: "")

  """
  The number of objects connected to the object
  """
  count: Int @deprecated(reason: "")

  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The description of the object
  """
  description: String @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  Product category image
  """
  image: MediaItem @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The link to the term
  """
  link: String @deprecated(reason: "")

  """
  The human friendly name of the object.
  """
  name: String @deprecated(reason: "")

  """
  Connection between the productCategory type and the productCategory type
  """
  parent: ProductCategoryToParentProductCategoryConnectionEdge
    @deprecated(reason: "")

  """
  Database id of the parent node
  """
  parentDatabaseId: Int @deprecated(reason: "")

  """
  The globally unique identifier of the parent node.
  """
  parentId: ID @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  productCategoryId: Int
    @deprecated(reason: "Deprecated in favor of databaseId")

  """
  Connection between the ProductCategory type and the Product type
  """
  products(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductCategoryToProductConnectionWhereArgs
  ): ProductCategoryToProductConnection @deprecated(reason: "")

  """
  An alphanumeric identifier for the object unique to its type.
  """
  slug: String @deprecated(reason: "")

  """
  Connection between the productCategory type and the Taxonomy type
  """
  taxonomy: ProductCategoryToTaxonomyConnectionEdge @deprecated(reason: "")

  """
  The ID of the term group that this term object belongs to
  """
  termGroupId: Int @deprecated(reason: "")

  """
  The taxonomy ID that the object is associated with
  """
  termTaxonomyId: Int @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String! @deprecated(reason: "")
}

"""
Connection between the productCategory type and the productCategory type
"""
type ProductCategoryToAncestorsProductCategoryConnection {
  """
  Edges for the ProductCategoryToAncestorsProductCategoryConnection connection
  """
  edges: [ProductCategoryToAncestorsProductCategoryConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductCategory] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductCategoryToAncestorsProductCategoryConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductCategory @deprecated(reason: "")
}

"""
Arguments for filtering the ProductCategoryToProductCategoryConnection connection
"""
input ProductCategoryToProductCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the productCategory type and the productCategory type
"""
type ProductCategoryToProductCategoryConnection {
  """
  Edges for the ProductCategoryToProductCategoryConnection connection
  """
  edges: [ProductCategoryToProductCategoryConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductCategory] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductCategoryToProductCategoryConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductCategory @deprecated(reason: "")
}

"""
Connection between the productCategory type and the productCategory type
"""
type ProductCategoryToParentProductCategoryConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ProductCategory @deprecated(reason: "")
}

"""
Arguments for filtering the ProductCategoryToProductConnection connection
"""
input ProductCategoryToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """
  Limit result set to products assigned a specific category name.
  """
  category: String

  """
  Limit result set to products assigned a specific category name.
  """
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to featured products.
  """
  featured: Boolean

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to products based on a maximum price.
  """
  maxPrice: Float

  """
  Limit result set to products based on a minimum price.
  """
  minPrice: Float

  """
  Limit result set to products on sale.
  """
  onSale: Boolean

  """
  What paramater to use to order the objects by.
  """
  orderby: [ProductsOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to products based on a keyword search.
  """
  search: String

  """
  Limit result set to products assigned a specific shipping class ID.
  """
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """
  Limit result set to products with a specific slug.
  """
  slug: String

  """
  Limit result set to products assigned a specific status.
  """
  status: String

  """
  Limit result set to products in stock or out of stock.
  """
  stockStatus: [StockStatusEnum]

  """
  Limit result types to types supported by WooGraphQL.
  """
  supportedTypesOnly: Boolean

  """
  Limit result set to products assigned a specific tag name.
  """
  tag: String

  """
  Limit result set to products assigned a specific tag ID.
  """
  tagId: Int

  """
  Limit result set to products assigned to a specific group of tag IDs.
  """
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """
  Limit result set with complex set of taxonomy filters.
  """
  taxonomyFilter: [ProductTaxonomyFilterRelationInput]

  """
  Limit result set to products assigned a specific type.
  """
  type: ProductTypesEnum

  """
  Limit result set to products assigned to a group of specific types.
  """
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """
  Limit result set to products with a specific visibility level.
  """
  visibility: CatalogVisibilityEnum
}

"""
Options for ordering the connection
"""
input ProductsOrderbyInput {
  field: ProductsOrderByEnum!
  order: OrderEnum
}

"""
Fields to order the Products connection by
"""
enum ProductsOrderByEnum {
  """
  Order by publish date
  """
  DATE

  """
  Preserve the ID order given in the IN array
  """
  IN

  """
  Order by the menu order value
  """
  MENU_ORDER

  """
  Order by last modified date
  """
  MODIFIED

  """
  Preserve slug order given in the NAME_IN array
  """
  NAME_IN

  """
  Order by date product sale starts
  """
  ON_SALE_FROM

  """
  Order by date product sale ends
  """
  ON_SALE_TO

  """
  Order by parent ID
  """
  PARENT

  """
  Order by product's current price
  """
  PRICE

  """
  Order by product average rating
  """
  RATING

  """
  Order by product's regular price
  """
  REGULAR_PRICE

  """
  Order by number of reviews on product
  """
  REVIEW_COUNT

  """
  Order by product's sale price
  """
  SALE_PRICE

  """
  Order by slug
  """
  SLUG

  """
  Order by total sales of products sold
  """
  TOTAL_SALES
}

"""
Product stock status enumeration
"""
enum StockStatusEnum {
  IN_STOCK
  ON_BACKORDER
  OUT_OF_STOCK
}

"""
Product taxonomy filter type
"""
input ProductTaxonomyFilterRelationInput {
  and: [ProductTaxonomyFilterInput]
  or: [ProductTaxonomyFilterInput]
}

"""
Product filter
"""
input ProductTaxonomyFilterInput {
  """
  A list of term ids
  """
  ids: [Int]

  """
  Filter operation type
  """
  operator: TaxonomyOperatorEnum

  """
  Which field to select taxonomy term by.
  """
  taxonomy: ProductTaxonomyEnum!

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Taxonomy query operators
"""
enum TaxonomyOperatorEnum {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Product taxonomies
"""
enum ProductTaxonomyEnum {
  PRODUCTCATEGORY
  PRODUCTTAG
  PRODUCTTYPE
  SHIPPINGCLASS
  VISIBLEPRODUCT
}

"""
Product type enumeration
"""
enum ProductTypesEnum {
  """
  An external product
  """
  EXTERNAL

  """
  A product group
  """
  GROUPED

  """
  A simple product
  """
  SIMPLE

  """
  A variable product
  """
  VARIABLE

  """
  A product variation
  """
  VARIATION
}

"""
Product catalog visibility enumeration
"""
enum CatalogVisibilityEnum {
  CATALOG
  HIDDEN
  SEARCH
  VISIBLE
}

"""
Connection between the ProductCategory type and the Product type
"""
type ProductCategoryToProductConnection {
  """
  Edges for the ProductCategoryToProductConnection connection
  """
  edges: [ProductCategoryToProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Product] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductCategoryToProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Product @deprecated(reason: "")
}

"""
Product object
"""
interface Product {
  """
  Connection between the Product type and the ProductAttribute type
  """
  attributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection

  """
  Product average count
  """
  averageRating: Float

  """
  Catalog visibility
  """
  catalogVisibility: CatalogVisibilityEnum

  """
  Connection between the Product type and the ContentType type
  """
  contentType: ProductToContentTypeConnectionEdge

  """
  Date product created
  """
  date: String

  """
  Date on sale from
  """
  dateOnSaleFrom: String

  """
  Date on sale to
  """
  dateOnSaleTo: String

  """
  Product description
  """
  description(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String

  """
  If the product is featured
  """
  featured: Boolean

  """
  Connection between the Product type and the MediaItem type
  """
  galleryImages(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection

  """
  The globally unique identifier for the product
  """
  id: ID!

  """
  Main image
  """
  image: MediaItem

  """
  The permalink of the post
  """
  link: String

  """
  Connection between the Product type and the LocalProductAttribute type
  """
  localAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection

  """
  Menu order
  """
  menuOrder: Int

  """
  Date product last updated
  """
  modified: String

  """
  Product name
  """
  name: String

  """
  Is product on sale?
  """
  onSale: Boolean

  """
  Parent product
  """
  parent: Product

  """
  Connection between the Product type and the productCategory type
  """
  productCategories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection

  """
  The Id of the order. Equivalent to WP_Post->ID
  """
  productId: Int

  """
  Connection between the Product type and the productTag type
  """
  productTags(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection

  """
  Connection between the Product type and the productType type
  """
  productTypes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection

  """
  Can product be purchased?
  """
  purchasable: Boolean

  """
  Purchase note
  """
  purchaseNote: String

  """
  Connection between the Product type and the Product type
  """
  related(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection

  """
  Product review count
  """
  reviewCount: Int

  """
  Connection between the Product type and the Comment type
  """
  reviews(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection

  """
  If reviews are allowed
  """
  reviewsAllowed: Boolean

  """
  Connection between the Product type and the shippingClass type
  """
  shippingClasses(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection

  """
  Product short description
  """
  shortDescription(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String

  """
  Product SKU
  """
  sku: String

  """
  Product slug
  """
  slug: String

  """
  Product status
  """
  status: String

  """
  Number total of sales
  """
  totalSales: Int

  """
  Product type
  """
  type: ProductTypesEnum

  """
  Connection between the Product type and the Product type
  """
  upsell(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection

  """
  Connection between the Product type and the visibleProduct type
  """
  visibleProducts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection
}

"""
Arguments for filtering the ProductToProductAttributeConnection connection
"""
input ProductToProductAttributeConnectionWhereArgs {
  """
  Filter results by attribute scope.
  """
  type: ProductAttributeTypesEnum
}

"""
Product attribute type enumeration
"""
enum ProductAttributeTypesEnum {
  """
  A global product attribute
  """
  GLOBAL

  """
  A local product attribute
  """
  LOCAL
}

"""
Connection between the Product type and the ProductAttribute type
"""
type ProductToProductAttributeConnection {
  """
  Edges for the ProductToProductAttributeConnection connection
  """
  edges: [ProductToProductAttributeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductAttribute] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToProductAttributeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductAttribute @deprecated(reason: "")
}

"""
Product attribute object
"""
interface ProductAttribute {
  """
  Attribute ID
  """
  attributeId: Int!

  """
  Attribute Global ID
  """
  id: ID!

  """
  Attribute name
  """
  name: String!

  """
  Attribute options
  """
  options: [String]

  """
  Attribute position
  """
  position: Int!

  """
  Product attribute scope.
  """
  scope: ProductAttributeTypesEnum!

  """
  Is attribute on product variation
  """
  variation: Boolean!

  """
  Is attribute visible
  """
  visible: Boolean!
}

"""
Connection between the Product type and the ContentType type
"""
type ProductToContentTypeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentType @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToMediaItemConnection connection
"""
input ProductToMediaItemConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: ProductToMediaItemConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input ProductToMediaItemConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [ProductToMediaItemConnectionWhereArgsTaxArray]
}

input ProductToMediaItemConnectionWhereArgsTaxArray {
  field: ProductToMediaItemConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: ProductToMediaItemConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum ProductToMediaItemConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum ProductToMediaItemConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the Product type and the MediaItem type
"""
type ProductToMediaItemConnection {
  """
  Edges for the ProductToMediaItemConnection connection
  """
  edges: [ProductToMediaItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [MediaItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToMediaItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: MediaItem @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToGlobalProductAttributeConnection connection
"""
input ProductToGlobalProductAttributeConnectionWhereArgs {
  """
  Filter results by attribute scope.
  """
  type: ProductAttributeTypesEnum
}

"""
Connection between the Product type and the GlobalProductAttribute type
"""
type ProductToGlobalProductAttributeConnection {
  """
  Edges for the ProductToGlobalProductAttributeConnection connection
  """
  edges: [ProductToGlobalProductAttributeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [GlobalProductAttribute] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToGlobalProductAttributeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: GlobalProductAttribute @deprecated(reason: "")
}

"""
A product attribute object
"""
type GlobalProductAttribute implements ProductAttribute {
  """
  Attribute ID
  """
  attributeId: Int! @deprecated(reason: "")

  """
  Attribute Global ID
  """
  id: ID! @deprecated(reason: "")

  """
  Attribute name
  """
  name: String! @deprecated(reason: "")

  """
  Attribute options
  """
  options: [String] @deprecated(reason: "")

  """
  Attribute position
  """
  position: Int! @deprecated(reason: "")

  """
  Product attribute scope.
  """
  scope: ProductAttributeTypesEnum! @deprecated(reason: "")

  """
  Connection between the GlobalProductAttribute type and the TermNode type
  """
  terms(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: GlobalProductAttributeToTermNodeConnectionWhereArgs
  ): GlobalProductAttributeToTermNodeConnection @deprecated(reason: "")

  """
  Is attribute on product variation
  """
  variation: Boolean! @deprecated(reason: "")

  """
  Is attribute visible
  """
  visible: Boolean! @deprecated(reason: "")
}

"""
Arguments for filtering the GlobalProductAttributeToTermNodeConnection connection
"""
input GlobalProductAttributeToTermNodeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the GlobalProductAttribute type and the TermNode type
"""
type GlobalProductAttributeToTermNodeConnection {
  """
  Edges for the GlobalProductAttributeToTermNodeConnection connection
  """
  edges: [GlobalProductAttributeToTermNodeConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [TermNode] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type GlobalProductAttributeToTermNodeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: TermNode @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToLocalProductAttributeConnection connection
"""
input ProductToLocalProductAttributeConnectionWhereArgs {
  """
  Filter results by attribute scope.
  """
  type: ProductAttributeTypesEnum
}

"""
Connection between the Product type and the LocalProductAttribute type
"""
type ProductToLocalProductAttributeConnection {
  """
  Edges for the ProductToLocalProductAttributeConnection connection
  """
  edges: [ProductToLocalProductAttributeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [LocalProductAttribute] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToLocalProductAttributeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: LocalProductAttribute @deprecated(reason: "")
}

"""
A product attribute object
"""
type LocalProductAttribute implements ProductAttribute {
  """
  Attribute ID
  """
  attributeId: Int! @deprecated(reason: "")

  """
  Attribute Global ID
  """
  id: ID! @deprecated(reason: "")

  """
  Attribute name
  """
  name: String! @deprecated(reason: "")

  """
  Attribute options
  """
  options: [String] @deprecated(reason: "")

  """
  Attribute position
  """
  position: Int! @deprecated(reason: "")

  """
  Product attribute scope.
  """
  scope: ProductAttributeTypesEnum! @deprecated(reason: "")

  """
  Is attribute on product variation
  """
  variation: Boolean! @deprecated(reason: "")

  """
  Is attribute visible
  """
  visible: Boolean! @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToProductCategoryConnection connection
"""
input ProductToProductCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the Product type and the productCategory type
"""
type ProductToProductCategoryConnection {
  """
  Edges for the ProductToProductCategoryConnection connection
  """
  edges: [ProductToProductCategoryConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductCategory] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToProductCategoryConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductCategory @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToProductTagConnection connection
"""
input ProductToProductTagConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the Product type and the productTag type
"""
type ProductToProductTagConnection {
  """
  Edges for the ProductToProductTagConnection connection
  """
  edges: [ProductToProductTagConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductTag] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToProductTagConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductTag @deprecated(reason: "")
}

"""
The productTag type
"""
type ProductTag implements Node & TermNode & UniformResourceIdentifiable & DatabaseIdentifier & MenuItemLinkable {
  """
  The number of objects connected to the object
  """
  count: Int @deprecated(reason: "")

  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The description of the object
  """
  description: String @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The link to the term
  """
  link: String @deprecated(reason: "")

  """
  The human friendly name of the object.
  """
  name: String @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  productTagId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """
  Connection between the ProductTag type and the Product type
  """
  products(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductTagToProductConnectionWhereArgs
  ): ProductTagToProductConnection @deprecated(reason: "")

  """
  An alphanumeric identifier for the object unique to its type.
  """
  slug: String @deprecated(reason: "")

  """
  Connection between the productTag type and the Taxonomy type
  """
  taxonomy: ProductTagToTaxonomyConnectionEdge @deprecated(reason: "")

  """
  The ID of the term group that this term object belongs to
  """
  termGroupId: Int @deprecated(reason: "")

  """
  The taxonomy ID that the object is associated with
  """
  termTaxonomyId: Int @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String! @deprecated(reason: "")
}

"""
Arguments for filtering the ProductTagToProductConnection connection
"""
input ProductTagToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """
  Limit result set to products assigned a specific category name.
  """
  category: String

  """
  Limit result set to products assigned a specific category name.
  """
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to featured products.
  """
  featured: Boolean

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to products based on a maximum price.
  """
  maxPrice: Float

  """
  Limit result set to products based on a minimum price.
  """
  minPrice: Float

  """
  Limit result set to products on sale.
  """
  onSale: Boolean

  """
  What paramater to use to order the objects by.
  """
  orderby: [ProductsOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to products based on a keyword search.
  """
  search: String

  """
  Limit result set to products assigned a specific shipping class ID.
  """
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """
  Limit result set to products with a specific slug.
  """
  slug: String

  """
  Limit result set to products assigned a specific status.
  """
  status: String

  """
  Limit result set to products in stock or out of stock.
  """
  stockStatus: [StockStatusEnum]

  """
  Limit result types to types supported by WooGraphQL.
  """
  supportedTypesOnly: Boolean

  """
  Limit result set to products assigned a specific tag name.
  """
  tag: String

  """
  Limit result set to products assigned a specific tag ID.
  """
  tagId: Int

  """
  Limit result set to products assigned to a specific group of tag IDs.
  """
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """
  Limit result set with complex set of taxonomy filters.
  """
  taxonomyFilter: [ProductTaxonomyFilterRelationInput]

  """
  Limit result set to products assigned a specific type.
  """
  type: ProductTypesEnum

  """
  Limit result set to products assigned to a group of specific types.
  """
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """
  Limit result set to products with a specific visibility level.
  """
  visibility: CatalogVisibilityEnum
}

"""
Connection between the ProductTag type and the Product type
"""
type ProductTagToProductConnection {
  """
  Edges for the ProductTagToProductConnection connection
  """
  edges: [ProductTagToProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Product] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductTagToProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Product @deprecated(reason: "")
}

"""
Connection between the productTag type and the Taxonomy type
"""
type ProductTagToTaxonomyConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToProductTypeConnection connection
"""
input ProductToProductTypeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the Product type and the productType type
"""
type ProductToProductTypeConnection {
  """
  Edges for the ProductToProductTypeConnection connection
  """
  edges: [ProductToProductTypeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductType] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToProductTypeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductType @deprecated(reason: "")
}

"""
The productType type
"""
type ProductType implements Node & TermNode & UniformResourceIdentifiable & DatabaseIdentifier {
  """
  The number of objects connected to the object
  """
  count: Int @deprecated(reason: "")

  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The description of the object
  """
  description: String @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The link to the term
  """
  link: String @deprecated(reason: "")

  """
  The human friendly name of the object.
  """
  name: String @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  productTypeId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """
  An alphanumeric identifier for the object unique to its type.
  """
  slug: String @deprecated(reason: "")

  """
  Connection between the productType type and the Taxonomy type
  """
  taxonomy: ProductTypeToTaxonomyConnectionEdge @deprecated(reason: "")

  """
  The ID of the term group that this term object belongs to
  """
  termGroupId: Int @deprecated(reason: "")

  """
  The taxonomy ID that the object is associated with
  """
  termTaxonomyId: Int @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String! @deprecated(reason: "")
}

"""
Connection between the productType type and the Taxonomy type
"""
type ProductTypeToTaxonomyConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToProductConnection connection
"""
input ProductToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """
  Limit result set to products assigned a specific category name.
  """
  category: String

  """
  Limit result set to products assigned a specific category name.
  """
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to featured products.
  """
  featured: Boolean

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to products based on a maximum price.
  """
  maxPrice: Float

  """
  Limit result set to products based on a minimum price.
  """
  minPrice: Float

  """
  Limit result set to products on sale.
  """
  onSale: Boolean

  """
  What paramater to use to order the objects by.
  """
  orderby: [ProductsOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to products based on a keyword search.
  """
  search: String

  """
  Limit result set to products assigned a specific shipping class ID.
  """
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """
  Limit result set to products with a specific slug.
  """
  slug: String

  """
  Limit result set to products assigned a specific status.
  """
  status: String

  """
  Limit result set to products in stock or out of stock.
  """
  stockStatus: [StockStatusEnum]

  """
  Limit result types to types supported by WooGraphQL.
  """
  supportedTypesOnly: Boolean

  """
  Limit result set to products assigned a specific tag name.
  """
  tag: String

  """
  Limit result set to products assigned a specific tag ID.
  """
  tagId: Int

  """
  Limit result set to products assigned to a specific group of tag IDs.
  """
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """
  Limit result set with complex set of taxonomy filters.
  """
  taxonomyFilter: [ProductTaxonomyFilterRelationInput]

  """
  Limit result set to products assigned a specific type.
  """
  type: ProductTypesEnum

  """
  Limit result set to products assigned to a group of specific types.
  """
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """
  Limit result set to products with a specific visibility level.
  """
  visibility: CatalogVisibilityEnum
}

"""
Connection between the Product type and the Product type
"""
type ProductToProductConnection {
  """
  Edges for the ProductToProductConnection connection
  """
  edges: [ProductToProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Product] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Product @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToCommentConnection connection
"""
input ProductToCommentConnectionWhereArgs {
  """
  Comment author email address.
  """
  authorEmail: String

  """
  Array of author IDs to include comments for.
  """
  authorIn: [ID]

  """
  Array of author IDs to exclude comments for.
  """
  authorNotIn: [ID]

  """
  Comment author URL.
  """
  authorUrl: String

  """
  Array of comment IDs to include.
  """
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """
  Include comments of a given type.
  """
  commentType: String

  """
  Include comments from a given array of comment types.
  """
  commentTypeIn: [String]

  """
  Exclude comments from a given array of comment types.
  """
  commentTypeNotIn: String

  """
  Content object author ID to limit results by.
  """
  contentAuthor: [ID]

  """
  Array of author IDs to retrieve comments for.
  """
  contentAuthorIn: [ID]

  """
  Array of author IDs *not* to retrieve comments for.
  """
  contentAuthorNotIn: [ID]

  """
  Limit results to those affiliated with a given content object ID.
  """
  contentId: ID

  """
  Array of content object IDs to include affiliated comments for.
  """
  contentIdIn: [ID]

  """
  Array of content object IDs to exclude affiliated comments for.
  """
  contentIdNotIn: [ID]

  """
  Content object name to retrieve affiliated comments for.
  """
  contentName: String

  """
  Content Object parent ID to retrieve affiliated comments for.
  """
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """
  Karma score to retrieve matching comments for.
  """
  karma: Int

  """
  The cardinality of the order of the connection
  """
  order: OrderEnum

  """
  Field to order the comments by.
  """
  orderby: CommentsConnectionOrderbyEnum

  """
  Parent ID of comment to retrieve children of.
  """
  parent: Int

  """
  Array of parent IDs of comments to retrieve children for.
  """
  parentIn: [ID]

  """
  Array of parent IDs of comments *not* to retrieve children for.
  """
  parentNotIn: [ID]

  """
  Search term(s) to retrieve matching comments for.
  """
  search: String

  """
  Comment status to limit results by.
  """
  status: String

  """
  Include comments for a specific user ID.
  """
  userId: ID
}

"""
Connection between the Product type and the Comment type
"""
type ProductToCommentConnection {
  """
  Average review rating for this product.
  """
  averageRating: Float @deprecated(reason: "")

  """
  Edges for the ProductToCommentConnection connection
  """
  edges: [ProductToCommentConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Comment] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToCommentConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Comment @deprecated(reason: "")

  """
  Review rating
  """
  rating: Float @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToShippingClassConnection connection
"""
input ProductToShippingClassConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the Product type and the shippingClass type
"""
type ProductToShippingClassConnection {
  """
  Edges for the ProductToShippingClassConnection connection
  """
  edges: [ProductToShippingClassConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ShippingClass] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToShippingClassConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ShippingClass @deprecated(reason: "")
}

"""
The shippingClass type
"""
type ShippingClass implements Node & TermNode & UniformResourceIdentifiable & DatabaseIdentifier {
  """
  The number of objects connected to the object
  """
  count: Int @deprecated(reason: "")

  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The description of the object
  """
  description: String @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The link to the term
  """
  link: String @deprecated(reason: "")

  """
  The human friendly name of the object.
  """
  name: String @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  shippingClassId: Int @deprecated(reason: "Deprecated in favor of databaseId")

  """
  An alphanumeric identifier for the object unique to its type.
  """
  slug: String @deprecated(reason: "")

  """
  Connection between the shippingClass type and the Taxonomy type
  """
  taxonomy: ShippingClassToTaxonomyConnectionEdge @deprecated(reason: "")

  """
  The ID of the term group that this term object belongs to
  """
  termGroupId: Int @deprecated(reason: "")

  """
  The taxonomy ID that the object is associated with
  """
  termTaxonomyId: Int @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String! @deprecated(reason: "")
}

"""
Connection between the shippingClass type and the Taxonomy type
"""
type ShippingClassToTaxonomyConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
Arguments for filtering the ProductToVisibleProductConnection connection
"""
input ProductToVisibleProductConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the Product type and the visibleProduct type
"""
type ProductToVisibleProductConnection {
  """
  Edges for the ProductToVisibleProductConnection connection
  """
  edges: [ProductToVisibleProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [VisibleProduct] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductToVisibleProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: VisibleProduct @deprecated(reason: "")
}

"""
The visibleProduct type
"""
type VisibleProduct implements Node & TermNode & UniformResourceIdentifiable & DatabaseIdentifier {
  """
  The number of objects connected to the object
  """
  count: Int @deprecated(reason: "")

  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The description of the object
  """
  description: String @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedScript type
  """
  enqueuedScripts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedScriptConnection @deprecated(reason: "")

  """
  Connection between the TermNode type and the EnqueuedStylesheet type
  """
  enqueuedStylesheets(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): TermNodeToEnqueuedStylesheetConnection @deprecated(reason: "")

  """
  The globally unique ID for the object
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The link to the term
  """
  link: String @deprecated(reason: "")

  """
  The human friendly name of the object.
  """
  name: String @deprecated(reason: "")

  """
  An alphanumeric identifier for the object unique to its type.
  """
  slug: String @deprecated(reason: "")

  """
  Connection between the visibleProduct type and the Taxonomy type
  """
  taxonomy: VisibleProductToTaxonomyConnectionEdge @deprecated(reason: "")

  """
  The ID of the term group that this term object belongs to
  """
  termGroupId: Int @deprecated(reason: "")

  """
  The taxonomy ID that the object is associated with
  """
  termTaxonomyId: Int @deprecated(reason: "")

  """
  The unique resource identifier path
  """
  uri: String! @deprecated(reason: "")

  """
  The id field matches the WP_Post-&gt;ID field.
  """
  visibleProductId: Int @deprecated(reason: "Deprecated in favor of databaseId")
}

"""
Connection between the visibleProduct type and the Taxonomy type
"""
type VisibleProductToTaxonomyConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
Connection between the productCategory type and the Taxonomy type
"""
type ProductCategoryToTaxonomyConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
Arguments for filtering the CouponToProductConnection connection
"""
input CouponToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """
  Limit result set to products assigned a specific category name.
  """
  category: String

  """
  Limit result set to products assigned a specific category name.
  """
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to featured products.
  """
  featured: Boolean

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to products based on a maximum price.
  """
  maxPrice: Float

  """
  Limit result set to products based on a minimum price.
  """
  minPrice: Float

  """
  Limit result set to products on sale.
  """
  onSale: Boolean

  """
  What paramater to use to order the objects by.
  """
  orderby: [ProductsOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to products based on a keyword search.
  """
  search: String

  """
  Limit result set to products assigned a specific shipping class ID.
  """
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """
  Limit result set to products with a specific slug.
  """
  slug: String

  """
  Limit result set to products assigned a specific status.
  """
  status: String

  """
  Limit result set to products in stock or out of stock.
  """
  stockStatus: [StockStatusEnum]

  """
  Limit result types to types supported by WooGraphQL.
  """
  supportedTypesOnly: Boolean

  """
  Limit result set to products assigned a specific tag name.
  """
  tag: String

  """
  Limit result set to products assigned a specific tag ID.
  """
  tagId: Int

  """
  Limit result set to products assigned to a specific group of tag IDs.
  """
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """
  Limit result set with complex set of taxonomy filters.
  """
  taxonomyFilter: [ProductTaxonomyFilterRelationInput]

  """
  Limit result set to products assigned a specific type.
  """
  type: ProductTypesEnum

  """
  Limit result set to products assigned to a group of specific types.
  """
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """
  Limit result set to products with a specific visibility level.
  """
  visibility: CatalogVisibilityEnum
}

"""
Connection between the Coupon type and the Product type
"""
type CouponToProductConnection {
  """
  Edges for the CouponToProductConnection connection
  """
  edges: [CouponToProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Product] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CouponToProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Product @deprecated(reason: "")
}

"""
Extra data defined on the WC object
"""
type MetaData {
  """
  Meta ID.
  """
  id: String! @deprecated(reason: "")

  """
  Meta key.
  """
  key: String! @deprecated(reason: "")

  """
  Meta value.
  """
  value: String @deprecated(reason: "")
}

"""
Arguments for filtering the CouponToCustomerConnection connection
"""
input CouponToCustomerConnectionWhereArgs {
  """
  Limit result set to resources with a specific email.
  """
  email: String

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Order of results.
  """
  order: OrderEnum

  """
  Order results by a specific field.
  """
  orderby: CustomerConnectionOrderbyEnum

  """
  Limit result set to resources with a specific role.
  """
  role: UserRoleEnum

  """
  Limit result set to resources with a specific group of roles.
  """
  roleIn: [UserRoleEnum]

  """
  Limit result set to resources not within a specific group of roles.
  """
  roleNotIn: [UserRoleEnum]

  """
  Limit results to those matching a string.
  """
  search: String
}

"""
Field to order the connection by
"""
enum CustomerConnectionOrderbyEnum {
  """
  Order by customer email
  """
  EMAIL

  """
  Order by customer ID
  """
  ID

  """
  Order by include field
  """
  INCLUDE

  """
  Order by customer display name
  """
  NAME

  """
  Order by customer registration date
  """
  REGISTERED_DATE

  """
  Order by customer username
  """
  USERNAME
}

"""
Names of available user roles
"""
enum UserRoleEnum {
  AUTHOR
  BLOCKED
  CONTRIBUTOR
  CUSTOMER
  EDITOR
  KEYMASTER
  MODERATOR
  PARTICIPANT
  SEO_EDITOR
  SEO_MANAGER
  SHOP_MANAGER
  SPECTATOR
  SUBSCRIBER
}

"""
Connection between the Coupon type and the Customer type
"""
type CouponToCustomerConnection {
  """
  Edges for the CouponToCustomerConnection connection
  """
  edges: [CouponToCustomerConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Customer] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CouponToCustomerConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Customer @deprecated(reason: "")
}

"""
A customer object
"""
type Customer implements Node {
  """
  Return the date customer billing address properties
  """
  billing: CustomerAddress @deprecated(reason: "")

  """
  Has customer calculated shipping?
  """
  calculatedShipping: Boolean @deprecated(reason: "")

  """
  The Id of the user. Equivalent to WP_User-&gt;ID
  """
  customerId: Int @deprecated(reason: "")

  """
  Return the date customer was created
  """
  date: String @deprecated(reason: "")

  """
  Return the customer&#039;s display name.
  """
  displayName: String @deprecated(reason: "")

  """
  Connection between the Customer type and the DownloadableItem type
  """
  downloadableItems(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CustomerToDownloadableItemConnectionWhereArgs
  ): CustomerToDownloadableItemConnection @deprecated(reason: "")

  """
  Return the customer&#039;s email.
  """
  email: String @deprecated(reason: "")

  """
  Return the customer&#039;s first name.
  """
  firstName: String @deprecated(reason: "")

  """
  Has calculated shipping?
  """
  hasCalculatedShipping: Boolean @deprecated(reason: "")

  """
  The globally unique identifier for the customer
  """
  id: ID! @deprecated(reason: "")

  """
  Return the date customer was last updated
  """
  isPayingCustomer: Boolean @deprecated(reason: "")

  """
  Is customer VAT exempt?
  """
  isVatExempt: Boolean @deprecated(reason: "")

  """
  Return the customer&#039;s last name.
  """
  lastName: String @deprecated(reason: "")

  """
  Gets the customers last order.
  """
  lastOrder: Order @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Return the date customer was last updated
  """
  modified: String @deprecated(reason: "")

  """
  Return the number of orders this customer has.
  """
  orderCount: Int @deprecated(reason: "")

  """
  Connection between the Customer type and the Order type
  """
  orders(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CustomerToOrderConnectionWhereArgs
  ): CustomerToOrderConnection @deprecated(reason: "")

  """
  Connection between the Customer type and the Refund type
  """
  refunds(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: CustomerToRefundConnectionWhereArgs
  ): CustomerToRefundConnection @deprecated(reason: "")

  """
  Return the customer&#039;s user role.
  """
  role: String @deprecated(reason: "")

  """
  Return the date customer shipping address properties
  """
  shipping: CustomerAddress @deprecated(reason: "")

  """
  Return how much money this customer has spent.
  """
  totalSpent: Float @deprecated(reason: "")

  """
  Return the customer&#039;s username.
  """
  username: String @deprecated(reason: "")
}

"""
A customer address object
"""
type CustomerAddress {
  """
  Address 1
  """
  address1: String @deprecated(reason: "")

  """
  Address 2
  """
  address2: String @deprecated(reason: "")

  """
  City
  """
  city: String @deprecated(reason: "")

  """
  Company
  """
  company: String @deprecated(reason: "")

  """
  Country
  """
  country: CountriesEnum @deprecated(reason: "")

  """
  E-mail
  """
  email: String @deprecated(reason: "")

  """
  First name
  """
  firstName: String @deprecated(reason: "")

  """
  Last name
  """
  lastName: String @deprecated(reason: "")

  """
  Phone
  """
  phone: String @deprecated(reason: "")

  """
  Zip Postal Code
  """
  postcode: String @deprecated(reason: "")

  """
  State
  """
  state: String @deprecated(reason: "")
}

"""
Countries enumeration
"""
enum CountriesEnum {
  AD
  AE
  AF
  AG
  AI
  AL
  AM
  AO
  AQ
  AR
  AS
  AT
  AU
  AW
  AX
  AZ
  BA
  BB
  BD
  BE
  BF
  BG
  BH
  BI
  BJ
  BL
  BM
  BN
  BO
  BQ
  BR
  BS
  BT
  BV
  BW
  BY
  BZ
  CA
  CC
  CD
  CF
  CG
  CH
  CI
  CK
  CL
  CM
  CN
  CO
  CR
  CU
  CV
  CW
  CX
  CY
  CZ
  DE
  DJ
  DK
  DM
  DO
  DZ
  EC
  EE
  EG
  EH
  ER
  ES
  ET
  FI
  FJ
  FK
  FM
  FO
  FR
  GA
  GB
  GD
  GE
  GF
  GG
  GH
  GI
  GL
  GM
  GN
  GP
  GQ
  GR
  GS
  GT
  GU
  GW
  GY
  HK
  HM
  HN
  HR
  HT
  HU
  ID
  IE
  IL
  IM
  IN
  IO
  IQ
  IR
  IS
  IT
  JE
  JM
  JO
  JP
  KE
  KG
  KH
  KI
  KM
  KN
  KP
  KR
  KW
  KY
  KZ
  LA
  LB
  LC
  LI
  LK
  LR
  LS
  LT
  LU
  LV
  LY
  MA
  MC
  MD
  ME
  MF
  MG
  MH
  MK
  ML
  MM
  MN
  MO
  MP
  MQ
  MR
  MS
  MT
  MU
  MV
  MW
  MX
  MY
  MZ
  NA
  NC
  NE
  NF
  NG
  NI
  NL
  NO
  NP
  NR
  NU
  NZ
  OM
  PA
  PE
  PF
  PG
  PH
  PK
  PL
  PM
  PN
  PR
  PS
  PT
  PW
  PY
  QA
  RE
  RO
  RS
  RU
  RW
  SA
  SB
  SC
  SD
  SE
  SG
  SH
  SI
  SJ
  SK
  SL
  SM
  SN
  SO
  SR
  SS
  ST
  SV
  SX
  SY
  SZ
  TC
  TD
  TF
  TG
  TH
  TJ
  TK
  TL
  TM
  TN
  TO
  TR
  TT
  TV
  TW
  TZ
  UA
  UG
  UM
  US
  UY
  UZ
  VA
  VC
  VE
  VG
  VI
  VN
  VU
  WF
  WS
  YE
  YT
  ZA
  ZM
  ZW
}

"""
Arguments for filtering the CustomerToDownloadableItemConnection connection
"""
input CustomerToDownloadableItemConnectionWhereArgs {
  """
  Limit results to downloadable items that can be downloaded now.
  """
  active: Boolean

  """
  Limit results to downloadable items that are expired.
  """
  expired: Boolean

  """
  Limit results to downloadable items that have downloads remaining.
  """
  hasDownloadsRemaining: Boolean
}

"""
Connection between the Customer type and the DownloadableItem type
"""
type CustomerToDownloadableItemConnection {
  """
  Edges for the CustomerToDownloadableItemConnection connection
  """
  edges: [CustomerToDownloadableItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [DownloadableItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CustomerToDownloadableItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: DownloadableItem @deprecated(reason: "")
}

"""
A downloadable item
"""
type DownloadableItem {
  """
  The date the downloadable item expires
  """
  accessExpires: String @deprecated(reason: "")

  """
  ProductDownload of the downloadable item
  """
  download: ProductDownload @deprecated(reason: "")

  """
  Downloadable item unique identifier
  """
  downloadId: String! @deprecated(reason: "")

  """
  Number of times the item can be downloaded.
  """
  downloadsRemaining: Int @deprecated(reason: "")

  """
  Name of the downloadable item.
  """
  name: String @deprecated(reason: "")

  """
  Product of downloadable item.
  """
  product: Product @deprecated(reason: "")

  """
  Download URL of the downloadable item.
  """
  url: String @deprecated(reason: "")
}

"""
A product object
"""
type ProductDownload {
  """
  Is file allowed
  """
  allowedFileType: Boolean @deprecated(reason: "")

  """
  Product download ID
  """
  downloadId: String! @deprecated(reason: "")

  """
  Download file
  """
  file: String @deprecated(reason: "")

  """
  Validate file exists
  """
  fileExists: Boolean @deprecated(reason: "")

  """
  File extension
  """
  fileExt: String @deprecated(reason: "")

  """
  Type of file path set
  """
  filePathType: String @deprecated(reason: "")

  """
  File type
  """
  fileType: String @deprecated(reason: "")

  """
  Product download name
  """
  name: String @deprecated(reason: "")
}

"""
A order object
"""
type Order implements Node {
  """
  Order billing properties
  """
  billing: CustomerAddress @deprecated(reason: "")

  """
  Cart hash
  """
  cartHash: String @deprecated(reason: "")

  """
  Cart tax amount
  """
  cartTax(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Order type and the ContentType type
  """
  contentType: OrderToContentTypeConnectionEdge @deprecated(reason: "")

  """
  Connection between the Order type and the CouponLine type
  """
  couponLines(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): OrderToCouponLineConnection @deprecated(reason: "")

  """
  How order was created
  """
  createdVia: String @deprecated(reason: "")

  """
  Order currency
  """
  currency: String @deprecated(reason: "")

  """
  Order customer
  """
  customer: Customer @deprecated(reason: "")

  """
  Customer IP Address
  """
  customerIpAddress: String @deprecated(reason: "")

  """
  Customer note
  """
  customerNote: String @deprecated(reason: "")

  """
  Customer User Agent
  """
  customerUserAgent: String @deprecated(reason: "")

  """
  Date order was created
  """
  date: String @deprecated(reason: "")

  """
  Date order was completed
  """
  dateCompleted: String @deprecated(reason: "")

  """
  Date order was paid
  """
  datePaid: String @deprecated(reason: "")

  """
  Discount tax amount
  """
  discountTax(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Discount total amount
  """
  discountTotal(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Order type and the DownloadableItem type
  """
  downloadableItems(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: OrderToDownloadableItemConnectionWhereArgs
  ): OrderToDownloadableItemConnection @deprecated(reason: "")

  """
  Connection between the Order type and the FeeLine type
  """
  feeLines(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): OrderToFeeLineConnection @deprecated(reason: "")

  """
  Order has a billing address?
  """
  hasBillingAddress: Boolean @deprecated(reason: "")

  """
  If order contains a downloadable product
  """
  hasDownloadableItem: Boolean @deprecated(reason: "")

  """
  Order has a shipping address?
  """
  hasShippingAddress: Boolean @deprecated(reason: "")

  """
  The globally unique identifier for the order
  """
  id: ID! @deprecated(reason: "")

  """
  Is product download is permitted
  """
  isDownloadPermitted: Boolean @deprecated(reason: "")

  """
  Connection between the Order type and the LineItem type
  """
  lineItems(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): OrderToLineItemConnection @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Date order was last updated
  """
  modified: String @deprecated(reason: "")

  """
  If order needs payment
  """
  needsPayment: Boolean @deprecated(reason: "")

  """
  If order needs processing before it can be completed
  """
  needsProcessing: Boolean @deprecated(reason: "")

  """
  If order needs shipping address
  """
  needsShippingAddress: Boolean @deprecated(reason: "")

  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  orderId: Int @deprecated(reason: "")

  """
  Order key
  """
  orderKey: String @deprecated(reason: "")

  """
  Order number
  """
  orderNumber: String @deprecated(reason: "")

  """
  Order version
  """
  orderVersion: String @deprecated(reason: "")

  """
  Parent order
  """
  parent: Order @deprecated(reason: "")

  """
  Payment method
  """
  paymentMethod: String @deprecated(reason: "")

  """
  Payment method title
  """
  paymentMethodTitle: String @deprecated(reason: "")

  """
  Prices include taxes?
  """
  pricesIncludeTax: Boolean @deprecated(reason: "")

  """
  Connection between the Order type and the Refund type
  """
  refunds(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: OrderToRefundConnectionWhereArgs
  ): OrderToRefundConnection @deprecated(reason: "")

  """
  Order shipping properties
  """
  shipping: CustomerAddress @deprecated(reason: "")

  """
  Order customer
  """
  shippingAddressMapUrl: String @deprecated(reason: "")

  """
  Connection between the Order type and the ShippingLine type
  """
  shippingLines(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): OrderToShippingLineConnection @deprecated(reason: "")

  """
  Shipping tax amount
  """
  shippingTax(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Shipping total amount
  """
  shippingTotal(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Order status
  """
  status: OrderStatusEnum @deprecated(reason: "")

  """
  Order subtotal
  """
  subtotal(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Order type and the TaxLine type
  """
  taxLines(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): OrderToTaxLineConnection @deprecated(reason: "")

  """
  Order grand total
  """
  total(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Order taxes
  """
  totalTax(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Transaction ID
  """
  transactionId: String @deprecated(reason: "")
}

"""
Pricing field format enumeration
"""
enum PricingFieldFormatEnum {
  FORMATTED
  RAW
}

"""
Connection between the Order type and the ContentType type
"""
type OrderToContentTypeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentType @deprecated(reason: "")
}

"""
Connection between the Order type and the CouponLine type
"""
type OrderToCouponLineConnection {
  """
  Edges for the OrderToCouponLineConnection connection
  """
  edges: [OrderToCouponLineConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [CouponLine] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type OrderToCouponLineConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: CouponLine @deprecated(reason: "")
}

"""
a coupon line object
"""
type CouponLine {
  """
  Line&#039;s Coupon code
  """
  code: String @deprecated(reason: "")

  """
  Line&#039;s Coupon
  """
  coupon: Coupon @deprecated(reason: "")

  """
  Line&#039;s Discount total
  """
  discount: String @deprecated(reason: "")

  """
  Line&#039;s Discount total tax
  """
  discountTax: String @deprecated(reason: "")

  """
  The Id of the order item.
  """
  itemId: Int @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  The Id of the order the order item belongs to.
  """
  orderId: Int @deprecated(reason: "")
}

"""
Arguments for filtering the OrderToDownloadableItemConnection connection
"""
input OrderToDownloadableItemConnectionWhereArgs {
  """
  Limit results to downloadable items that can be downloaded now.
  """
  active: Boolean

  """
  Limit results to downloadable items that are expired.
  """
  expired: Boolean

  """
  Limit results to downloadable items that have downloads remaining.
  """
  hasDownloadsRemaining: Boolean
}

"""
Connection between the Order type and the DownloadableItem type
"""
type OrderToDownloadableItemConnection {
  """
  Edges for the OrderToDownloadableItemConnection connection
  """
  edges: [OrderToDownloadableItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [DownloadableItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type OrderToDownloadableItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: DownloadableItem @deprecated(reason: "")
}

"""
Connection between the Order type and the FeeLine type
"""
type OrderToFeeLineConnection {
  """
  Edges for the OrderToFeeLineConnection connection
  """
  edges: [OrderToFeeLineConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [FeeLine] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type OrderToFeeLineConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: FeeLine @deprecated(reason: "")
}

"""
a fee line object
"""
type FeeLine {
  """
  Fee amount
  """
  amount: String @deprecated(reason: "")

  """
  The Id of the order item.
  """
  itemId: Int @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Fee name
  """
  name: String @deprecated(reason: "")

  """
  The Id of the order the order item belongs to.
  """
  orderId: Int @deprecated(reason: "")

  """
  Line tax class
  """
  taxClass: TaxClassEnum @deprecated(reason: "")

  """
  Tax status of fee
  """
  taxStatus: TaxStatusEnum @deprecated(reason: "")

  """
  Line taxes
  """
  taxes: [OrderItemTax] @deprecated(reason: "")

  """
  Line total (after discounts)
  """
  total: String @deprecated(reason: "")

  """
  Line total tax (after discounts)
  """
  totalTax: String @deprecated(reason: "")
}

"""
Tax class enumeration
"""
enum TaxClassEnum {
  """
  Inherits Tax class from cart
  """
  INHERIT_CART
  REDUCED_RATE

  """
  Standard Tax rate
  """
  STANDARD
  ZERO_RATE
}

"""
Product tax status enumeration
"""
enum TaxStatusEnum {
  NONE
  SHIPPING
  TAXABLE
}

"""
Order item tax statement
"""
type OrderItemTax {
  """
  Amount taxed
  """
  amount: Float @deprecated(reason: "")

  """
  Subtotal
  """
  subtotal: Float @deprecated(reason: "")

  """
  Tax line connected to this statement
  """
  taxLine: TaxLine @deprecated(reason: "")

  """
  Order item ID for tax line connected to this statement
  """
  taxLineId: Int! @deprecated(reason: "")

  """
  Total
  """
  total: Float @deprecated(reason: "")
}

"""
a tax line object
"""
type TaxLine {
  """
  Is this a compound tax rate?
  """
  isCompound: Boolean @deprecated(reason: "")

  """
  The Id of the order item.
  """
  itemId: Int @deprecated(reason: "")

  """
  Tax rate label
  """
  label: String @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  The Id of the order the order item belongs to.
  """
  orderId: Int @deprecated(reason: "")

  """
  Tax rate code/name
  """
  rateCode: String @deprecated(reason: "")

  """
  Tax line&#039;s shipping tax total
  """
  shippingTaxTotal: String @deprecated(reason: "")

  """
  Tax line&#039;s tax rate
  """
  taxRate: TaxRate @deprecated(reason: "")

  """
  Tax total (not including shipping taxes)
  """
  taxTotal: String @deprecated(reason: "")
}

"""
A Tax rate object
"""
type TaxRate implements Node {
  """
  City name.
  """
  city: [String] @deprecated(reason: "")

  """
  Tax class. Default is standard.
  """
  class: TaxClassEnum @deprecated(reason: "")

  """
  Whether or not this is a compound rate.
  """
  compound: Boolean @deprecated(reason: "")

  """
  Country ISO 3166 code.
  """
  country: String @deprecated(reason: "")

  """
  The globally unique identifier for the tax rate.
  """
  id: ID! @deprecated(reason: "")

  """
  Tax rate name.
  """
  name: String @deprecated(reason: "")

  """
  Indicates the order that will appear in queries.
  """
  order: Int @deprecated(reason: "")

  """
  Postcode/ZIP.
  """
  postcode: [String] @deprecated(reason: "")

  """
  Tax priority.
  """
  priority: Int @deprecated(reason: "")

  """
  Tax rate.
  """
  rate: String @deprecated(reason: "")

  """
  The ID of the tax rate.
  """
  rateId: Int @deprecated(reason: "")

  """
  Whether or not this tax rate also gets applied to shipping.
  """
  shipping: Boolean @deprecated(reason: "")

  """
  State code.
  """
  state: String @deprecated(reason: "")
}

"""
Connection between the Order type and the LineItem type
"""
type OrderToLineItemConnection {
  """
  Edges for the OrderToLineItemConnection connection
  """
  edges: [OrderToLineItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [LineItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type OrderToLineItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: LineItem @deprecated(reason: "")
}

"""
a line item object
"""
type LineItem {
  """
  Line item&#039;s taxes
  """
  itemDownloads: [ProductDownload] @deprecated(reason: "")

  """
  The Id of the order item.
  """
  itemId: Int @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  The Id of the order the order item belongs to.
  """
  orderId: Int @deprecated(reason: "")

  """
  Line item&#039;s product object
  """
  product: Product @deprecated(reason: "")

  """
  Line item&#039;s product ID
  """
  productId: Int @deprecated(reason: "")

  """
  Line item&#039;s product quantity
  """
  quantity: Int @deprecated(reason: "")

  """
  Line item&#039;s subtotal
  """
  subtotal: String @deprecated(reason: "")

  """
  Line item&#039;s subtotal tax
  """
  subtotalTax: String @deprecated(reason: "")

  """
  Line item&#039;s tax class
  """
  taxClass: TaxClassEnum @deprecated(reason: "")

  """
  Line item&#039;s taxes
  """
  taxStatus: TaxStatusEnum @deprecated(reason: "")

  """
  Line item&#039;s taxes
  """
  taxes: [OrderItemTax] @deprecated(reason: "")

  """
  Line item&#039;s total
  """
  total: String @deprecated(reason: "")

  """
  Line item&#039;s total tax
  """
  totalTax: String @deprecated(reason: "")

  """
  Line item&#039;s product variation object
  """
  variation: ProductVariation @deprecated(reason: "")

  """
  Line item&#039;s product variation ID
  """
  variationId: Int @deprecated(reason: "")
}

"""
A product variation object
"""
type ProductVariation implements Node {
  """
  Connection between the ProductVariation type and the VariationAttribute type
  """
  attributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ProductVariationToVariationAttributeConnection @deprecated(reason: "")

  """
  Product variation backorders
  """
  backorders: BackordersEnum @deprecated(reason: "")

  """
  Can product be backordered?
  """
  backordersAllowed: Boolean @deprecated(reason: "")

  """
  Product variation catalog visibility
  """
  catalogVisibility: CatalogVisibilityEnum @deprecated(reason: "")

  """
  Connection between the ProductVariation type and the ContentType type
  """
  contentType: ProductVariationToContentTypeConnectionEdge
    @deprecated(reason: "")

  """
  Date variation created
  """
  date: String @deprecated(reason: "")

  """
  Date on sale from
  """
  dateOnSaleFrom: String @deprecated(reason: "")

  """
  Date on sale to
  """
  dateOnSaleTo: String @deprecated(reason: "")

  """
  Product description
  """
  description: String @deprecated(reason: "")

  """
  Download expiry
  """
  downloadExpiry: Int @deprecated(reason: "")

  """
  Download limit
  """
  downloadLimit: Int @deprecated(reason: "")

  """
  Is downloadable?
  """
  downloadable: Boolean @deprecated(reason: "")

  """
  Product downloads
  """
  downloads: [ProductDownload] @deprecated(reason: "")

  """
  Does product variation have any visible attributes
  """
  hasAttributes: Boolean @deprecated(reason: "")

  """
  Product variation height
  """
  height: String @deprecated(reason: "")

  """
  The globally unique identifier for the product variation
  """
  id: ID! @deprecated(reason: "")

  """
  Product variation main image
  """
  image: MediaItem @deprecated(reason: "")

  """
  Product variation length
  """
  length: String @deprecated(reason: "")

  """
  if/how product variation stock is managed
  """
  manageStock: ManageStockEnum @deprecated(reason: "")

  """
  Menu order
  """
  menuOrder: Int @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Date variation last updated
  """
  modified: String @deprecated(reason: "")

  """
  Product name
  """
  name: String @deprecated(reason: "")

  """
  Is variation on sale?
  """
  onSale: Boolean @deprecated(reason: "")

  """
  Product variation parent product
  """
  parent: VariableProduct @deprecated(reason: "")

  """
  Product variation&#039;s active price
  """
  price(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  If product variation can be bought
  """
  purchasable: Boolean @deprecated(reason: "")

  """
  Product variation purchase_note
  """
  purchaseNote: String @deprecated(reason: "")

  """
  Product variation&#039;s regular price
  """
  regularPrice(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Product variation&#039;s sale price
  """
  salePrice(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Product variation shipping class
  """
  shippingClass: String @deprecated(reason: "")

  """
  Connection between the ProductVariation type and the shippingClass type
  """
  shippingClasses(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductVariationToShippingClassConnectionWhereArgs
  ): ProductVariationToShippingClassConnection @deprecated(reason: "")

  """
  Product variation SKU (Stock-keeping unit)
  """
  sku: String @deprecated(reason: "")

  """
  Variation status
  """
  status: String @deprecated(reason: "")

  """
  Product variation stock quantity
  """
  stockQuantity: Int @deprecated(reason: "")

  """
  Product stock status
  """
  stockStatus: StockStatusEnum @deprecated(reason: "")

  """
  Product variation tax class
  """
  taxClass: TaxClassEnum @deprecated(reason: "")

  """
  Tax status
  """
  taxStatus: TaxStatusEnum @deprecated(reason: "")

  """
  Product type
  """
  type: ProductTypesEnum @deprecated(reason: "")

  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  variationId: Int @deprecated(reason: "")

  """
  Is product virtual?
  """
  virtual: Boolean @deprecated(reason: "")

  """
  Connection between the ProductVariation type and the visibleProduct type
  """
  visibleProducts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductVariationToVisibleProductConnectionWhereArgs
  ): ProductVariationToVisibleProductConnection @deprecated(reason: "")

  """
  Product variation weight
  """
  weight: String @deprecated(reason: "")

  """
  Product variation width
  """
  width: String @deprecated(reason: "")
}

"""
Connection between the ProductVariation type and the VariationAttribute type
"""
type ProductVariationToVariationAttributeConnection {
  """
  Edges for the ProductVariationToVariationAttributeConnection connection
  """
  edges: [ProductVariationToVariationAttributeConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [VariationAttribute] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductVariationToVariationAttributeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: VariationAttribute @deprecated(reason: "")
}

"""
A product variation attribute object
"""
type VariationAttribute {
  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  attributeId: Int @deprecated(reason: "")

  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  id: ID! @deprecated(reason: "")

  """
  Name of attribute
  """
  name: String @deprecated(reason: "")

  """
  Selected value of attribute
  """
  value: String @deprecated(reason: "")
}

"""
Product backorder enumeration
"""
enum BackordersEnum {
  NO
  NOTIFY
  YES
}

"""
Connection between the ProductVariation type and the ContentType type
"""
type ProductVariationToContentTypeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentType @deprecated(reason: "")
}

"""
Product manage stock enumeration
"""
enum ManageStockEnum {
  FALSE
  PARENT
  TRUE
}

"""
A variable product object
"""
type VariableProduct implements Node & Product {
  """
  Connection between the Product type and the ProductAttribute type
  """
  attributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection @deprecated(reason: "")

  """
  Product average count
  """
  averageRating: Float @deprecated(reason: "")

  """
  Product backorders status
  """
  backorders: BackordersEnum @deprecated(reason: "")

  """
  Can product be backordered?
  """
  backordersAllowed: Boolean @deprecated(reason: "")

  """
  Catalog visibility
  """
  catalogVisibility: CatalogVisibilityEnum @deprecated(reason: "")

  """
  Connection between the Product type and the ContentType type
  """
  contentType: ProductToContentTypeConnectionEdge @deprecated(reason: "")

  """
  Connection between the VariableProduct type and the Product type
  """
  crossSell(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: VariableProductToProductConnectionWhereArgs
  ): VariableProductToProductConnection @deprecated(reason: "")

  """
  Date product created
  """
  date: String @deprecated(reason: "")

  """
  Date on sale from
  """
  dateOnSaleFrom: String @deprecated(reason: "")

  """
  Date on sale to
  """
  dateOnSaleTo: String @deprecated(reason: "")

  """
  Connection between the VariableProduct type and the VariationAttribute type
  """
  defaultAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): VariableProductToVariationAttributeConnection @deprecated(reason: "")

  """
  Product description
  """
  description(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  If the product is featured
  """
  featured: Boolean @deprecated(reason: "")

  """
  Connection between the Product type and the MediaItem type
  """
  galleryImages(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection @deprecated(reason: "")

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection @deprecated(reason: "")

  """
  Product&#039;s height
  """
  height: String @deprecated(reason: "")

  """
  The globally unique identifier for the product
  """
  id: ID! @deprecated(reason: "")

  """
  Main image
  """
  image: MediaItem @deprecated(reason: "")

  """
  Product&#039;s length
  """
  length: String @deprecated(reason: "")

  """
  The permalink of the post
  """
  link: String @deprecated(reason: "")

  """
  Connection between the Product type and the LocalProductAttribute type
  """
  localAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection @deprecated(reason: "")

  """
  If product manage stock
  """
  manageStock: Boolean @deprecated(reason: "")

  """
  Menu order
  """
  menuOrder: Int @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Date product last updated
  """
  modified: String @deprecated(reason: "")

  """
  Product name
  """
  name: String @deprecated(reason: "")

  """
  Is product on sale?
  """
  onSale: Boolean @deprecated(reason: "")

  """
  Parent product
  """
  parent: Product @deprecated(reason: "")

  """
  Product&#039;s active price
  """
  price(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Product type and the productCategory type
  """
  productCategories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection @deprecated(reason: "")

  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  productId: Int @deprecated(reason: "")

  """
  Connection between the Product type and the productTag type
  """
  productTags(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection @deprecated(reason: "")

  """
  Connection between the Product type and the productType type
  """
  productTypes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection @deprecated(reason: "")

  """
  Can product be purchased?
  """
  purchasable: Boolean @deprecated(reason: "")

  """
  Purchase note
  """
  purchaseNote: String @deprecated(reason: "")

  """
  Product&#039;s regular price
  """
  regularPrice(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Product type and the Product type
  """
  related(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection @deprecated(reason: "")

  """
  Product review count
  """
  reviewCount: Int @deprecated(reason: "")

  """
  Connection between the Product type and the Comment type
  """
  reviews(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection @deprecated(reason: "")

  """
  If reviews are allowed
  """
  reviewsAllowed: Boolean @deprecated(reason: "")

  """
  Product&#039;s sale price
  """
  salePrice(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  shipping class ID
  """
  shippingClassId: Int @deprecated(reason: "")

  """
  Connection between the Product type and the shippingClass type
  """
  shippingClasses(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection @deprecated(reason: "")

  """
  Does product need to be shipped?
  """
  shippingRequired: Boolean @deprecated(reason: "")

  """
  Is product shipping taxable?
  """
  shippingTaxable: Boolean @deprecated(reason: "")

  """
  Product short description
  """
  shortDescription(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Product SKU
  """
  sku: String @deprecated(reason: "")

  """
  Product slug
  """
  slug: String @deprecated(reason: "")

  """
  If should be sold individually
  """
  soldIndividually: Boolean @deprecated(reason: "")

  """
  Product status
  """
  status: String @deprecated(reason: "")

  """
  Number of items available for sale
  """
  stockQuantity: Int @deprecated(reason: "")

  """
  Tax class
  """
  taxClass: TaxClassEnum @deprecated(reason: "")

  """
  Tax status
  """
  taxStatus: TaxStatusEnum @deprecated(reason: "")

  """
  Number total of sales
  """
  totalSales: Int @deprecated(reason: "")

  """
  Product type
  """
  type: ProductTypesEnum @deprecated(reason: "")

  """
  Connection between the Product type and the Product type
  """
  upsell(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection @deprecated(reason: "")

  """
  Connection between the VariableProduct type and the ProductVariation type
  """
  variations(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: VariableProductToProductVariationConnectionWhereArgs
  ): VariableProductToProductVariationConnection @deprecated(reason: "")

  """
  Connection between the Product type and the visibleProduct type
  """
  visibleProducts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection @deprecated(reason: "")

  """
  Product&#039;s weight
  """
  weight: String @deprecated(reason: "")

  """
  Product&#039;s width
  """
  width: String @deprecated(reason: "")
}

"""
Arguments for filtering the VariableProductToProductConnection connection
"""
input VariableProductToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """
  Limit result set to products assigned a specific category name.
  """
  category: String

  """
  Limit result set to products assigned a specific category name.
  """
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to featured products.
  """
  featured: Boolean

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to products based on a maximum price.
  """
  maxPrice: Float

  """
  Limit result set to products based on a minimum price.
  """
  minPrice: Float

  """
  Limit result set to products on sale.
  """
  onSale: Boolean

  """
  What paramater to use to order the objects by.
  """
  orderby: [ProductsOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to products based on a keyword search.
  """
  search: String

  """
  Limit result set to products assigned a specific shipping class ID.
  """
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """
  Limit result set to products with a specific slug.
  """
  slug: String

  """
  Limit result set to products assigned a specific status.
  """
  status: String

  """
  Limit result set to products in stock or out of stock.
  """
  stockStatus: [StockStatusEnum]

  """
  Limit result types to types supported by WooGraphQL.
  """
  supportedTypesOnly: Boolean

  """
  Limit result set to products assigned a specific tag name.
  """
  tag: String

  """
  Limit result set to products assigned a specific tag ID.
  """
  tagId: Int

  """
  Limit result set to products assigned to a specific group of tag IDs.
  """
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """
  Limit result set with complex set of taxonomy filters.
  """
  taxonomyFilter: [ProductTaxonomyFilterRelationInput]

  """
  Limit result set to products assigned a specific type.
  """
  type: ProductTypesEnum

  """
  Limit result set to products assigned to a group of specific types.
  """
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """
  Limit result set to products with a specific visibility level.
  """
  visibility: CatalogVisibilityEnum
}

"""
Connection between the VariableProduct type and the Product type
"""
type VariableProductToProductConnection {
  """
  Edges for the VariableProductToProductConnection connection
  """
  edges: [VariableProductToProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Product] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type VariableProductToProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Product @deprecated(reason: "")
}

"""
Connection between the VariableProduct type and the VariationAttribute type
"""
type VariableProductToVariationAttributeConnection {
  """
  Edges for the VariableProductToVariationAttributeConnection connection
  """
  edges: [VariableProductToVariationAttributeConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [VariationAttribute] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type VariableProductToVariationAttributeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: VariationAttribute @deprecated(reason: "")
}

"""
Arguments for filtering the VariableProductToProductVariationConnection connection
"""
input VariableProductToProductVariationConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """
  Limit result set to products assigned a specific category name.
  """
  category: String

  """
  Limit result set to products assigned a specific category name.
  """
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to featured products.
  """
  featured: Boolean

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to products based on a maximum price.
  """
  maxPrice: Float

  """
  Limit result set to products based on a minimum price.
  """
  minPrice: Float

  """
  Limit result set to products on sale.
  """
  onSale: Boolean

  """
  What paramater to use to order the objects by.
  """
  orderby: [ProductsOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to products based on a keyword search.
  """
  search: String

  """
  Limit result set to products assigned a specific shipping class ID.
  """
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """
  Limit result set to products with a specific slug.
  """
  slug: String

  """
  Limit result set to products assigned a specific status.
  """
  status: String

  """
  Limit result set to products in stock or out of stock.
  """
  stockStatus: [StockStatusEnum]

  """
  Limit result types to types supported by WooGraphQL.
  """
  supportedTypesOnly: Boolean

  """
  Limit result set to products assigned a specific tag name.
  """
  tag: String

  """
  Limit result set to products assigned a specific tag ID.
  """
  tagId: Int

  """
  Limit result set to products assigned to a specific group of tag IDs.
  """
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """
  Limit result set with complex set of taxonomy filters.
  """
  taxonomyFilter: [ProductTaxonomyFilterRelationInput]

  """
  Limit result set to products assigned a specific type.
  """
  type: ProductTypesEnum

  """
  Limit result set to products assigned to a group of specific types.
  """
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """
  Limit result set to products with a specific visibility level.
  """
  visibility: CatalogVisibilityEnum
}

"""
Connection between the VariableProduct type and the ProductVariation type
"""
type VariableProductToProductVariationConnection {
  """
  Edges for the VariableProductToProductVariationConnection connection
  """
  edges: [VariableProductToProductVariationConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductVariation] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type VariableProductToProductVariationConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductVariation @deprecated(reason: "")
}

"""
Arguments for filtering the ProductVariationToShippingClassConnection connection
"""
input ProductVariationToShippingClassConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the ProductVariation type and the shippingClass type
"""
type ProductVariationToShippingClassConnection {
  """
  Edges for the ProductVariationToShippingClassConnection connection
  """
  edges: [ProductVariationToShippingClassConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ShippingClass] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductVariationToShippingClassConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ShippingClass @deprecated(reason: "")
}

"""
Arguments for filtering the ProductVariationToVisibleProductConnection connection
"""
input ProductVariationToVisibleProductConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the ProductVariation type and the visibleProduct type
"""
type ProductVariationToVisibleProductConnection {
  """
  Edges for the ProductVariationToVisibleProductConnection connection
  """
  edges: [ProductVariationToVisibleProductConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [VisibleProduct] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ProductVariationToVisibleProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: VisibleProduct @deprecated(reason: "")
}

"""
Arguments for filtering the OrderToRefundConnection connection
"""
input OrderToRefundConnectionWhereArgs {
  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to refunds from a specific group of order IDs.
  """
  orderIn: [Int]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostTypeOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit results to those matching a string.
  """
  search: String

  """
  Limit result set to refunds assigned a specific status.
  """
  statuses: [String]
}

"""
Connection between the Order type and the Refund type
"""
type OrderToRefundConnection {
  """
  Edges for the OrderToRefundConnection connection
  """
  edges: [OrderToRefundConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Refund] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type OrderToRefundConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Refund @deprecated(reason: "")
}

"""
A refund object
"""
type Refund implements Node {
  """
  Refunded amount
  """
  amount: Float @deprecated(reason: "")

  """
  Connection between the Refund type and the ContentType type
  """
  contentType: RefundToContentTypeConnectionEdge @deprecated(reason: "")

  """
  The globally unique identifier for the refund
  """
  id: ID! @deprecated(reason: "")

  """
  Connection between the Refund type and the LineItem type
  """
  lineItems(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): RefundToLineItemConnection @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Reason for refund
  """
  reason: String @deprecated(reason: "")

  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  refundId: Int @deprecated(reason: "")

  """
  User who completed the refund
  """
  refundedBy: User @deprecated(reason: "")

  """
  A title for the new post type
  """
  title: String @deprecated(reason: "")
}

"""
Connection between the Refund type and the ContentType type
"""
type RefundToContentTypeConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: ContentType @deprecated(reason: "")
}

"""
Connection between the Refund type and the LineItem type
"""
type RefundToLineItemConnection {
  """
  Edges for the RefundToLineItemConnection connection
  """
  edges: [RefundToLineItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [LineItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RefundToLineItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: LineItem @deprecated(reason: "")
}

"""
Connection between the Order type and the ShippingLine type
"""
type OrderToShippingLineConnection {
  """
  Edges for the OrderToShippingLineConnection connection
  """
  edges: [OrderToShippingLineConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ShippingLine] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type OrderToShippingLineConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ShippingLine @deprecated(reason: "")
}

"""
a shipping line object
"""
type ShippingLine {
  """
  The Id of the order item.
  """
  itemId: Int @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Shipping Line&#039;s shipping method name
  """
  methodTitle: String @deprecated(reason: "")

  """
  The Id of the order the order item belongs to.
  """
  orderId: Int @deprecated(reason: "")

  """
  Shipping Line&#039;s shipping method
  """
  shippingMethod: ShippingMethod @deprecated(reason: "")

  """
  Line tax class
  """
  taxClass: TaxClassEnum @deprecated(reason: "")

  """
  Line taxes
  """
  taxes: [OrderItemTax] @deprecated(reason: "")

  """
  Line total (after discounts)
  """
  total: String @deprecated(reason: "")

  """
  Line total tax (after discounts)
  """
  totalTax: String @deprecated(reason: "")
}

"""
A shipping method object
"""
type ShippingMethod implements Node {
  """
  Shipping method description.
  """
  description: String @deprecated(reason: "")

  """
  The globally unique identifier for the tax rate.
  """
  id: ID! @deprecated(reason: "")

  """
  The ID of the shipping method.
  """
  methodId: ID! @deprecated(reason: "")

  """
  Shipping method title.
  """
  title: String @deprecated(reason: "")
}

"""
Order status enumeration
"""
enum OrderStatusEnum {
  CANCELLED
  COMPLETED
  FAILED
  ON_HOLD
  PENDING
  PROCESSING
  REFUNDED
}

"""
Connection between the Order type and the TaxLine type
"""
type OrderToTaxLineConnection {
  """
  Edges for the OrderToTaxLineConnection connection
  """
  edges: [OrderToTaxLineConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [TaxLine] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type OrderToTaxLineConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: TaxLine @deprecated(reason: "")
}

"""
Arguments for filtering the CustomerToOrderConnection connection
"""
input CustomerToOrderConnectionWhereArgs {
  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  What paramater to use to order the objects by.
  """
  orderby: [OrdersOrderbyInput]

  """
  Limit result set to orders assigned a specific product.
  """
  productId: Int

  """
  Limit results to those matching a string.
  """
  search: String

  """
  Limit result set to orders assigned a specific status.
  """
  statuses: [OrderStatusEnum]
}

"""
Options for ordering the connection
"""
input OrdersOrderbyInput {
  field: OrdersOrderByEnum!
  order: OrderEnum
}

"""
Fields to order the Orders connection by
"""
enum OrdersOrderByEnum {
  """
  Order by publish date
  """
  DATE

  """
  Order by date the order was completed
  """
  DATE_COMPLETED

  """
  Order by date the order was paid
  """
  DATE_PAID

  """
  Order by order discount amount
  """
  DISCOUNT

  """
  Preserve the ID order given in the IN array
  """
  IN

  """
  Order by the menu order value
  """
  MENU_ORDER

  """
  Order by last modified date
  """
  MODIFIED

  """
  Preserve slug order given in the NAME_IN array
  """
  NAME_IN

  """
  Order by order key
  """
  ORDER_KEY

  """
  Order by parent ID
  """
  PARENT

  """
  Order by slug
  """
  SLUG

  """
  Order by order total
  """
  TAX

  """
  Order by order total
  """
  TOTAL
}

"""
Connection between the Customer type and the Order type
"""
type CustomerToOrderConnection {
  """
  Edges for the CustomerToOrderConnection connection
  """
  edges: [CustomerToOrderConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Order] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CustomerToOrderConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Order @deprecated(reason: "")
}

"""
Arguments for filtering the CustomerToRefundConnection connection
"""
input CustomerToRefundConnectionWhereArgs {
  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to refunds from a specific group of order IDs.
  """
  orderIn: [Int]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostTypeOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit results to those matching a string.
  """
  search: String

  """
  Limit result set to refunds assigned a specific status.
  """
  statuses: [String]
}

"""
Connection between the Customer type and the Refund type
"""
type CustomerToRefundConnection {
  """
  Edges for the CustomerToRefundConnection connection
  """
  edges: [CustomerToRefundConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Refund] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CustomerToRefundConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Refund @deprecated(reason: "")
}

"""
Shipping package object
"""
type ShippingPackage {
  """
  Shipping package details
  """
  packageDetails: String @deprecated(reason: "")

  """
  Shipping package rates
  """
  rates: [ShippingRate] @deprecated(reason: "")

  """
  This shipping package supports the shipping calculator.
  """
  supportsShippingCalculator: Boolean @deprecated(reason: "")
}

"""
Shipping rate object
"""
type ShippingRate {
  """
  Shipping rate cost
  """
  cost: String @deprecated(reason: "")

  """
  Shipping rate ID
  """
  id: ID! @deprecated(reason: "")

  """
  Shipping instance ID
  """
  instanceId: Int @deprecated(reason: "")

  """
  Shipping rate label
  """
  label: String @deprecated(reason: "")

  """
  Shipping method ID
  """
  methodId: ID! @deprecated(reason: "")
}

"""
Arguments for filtering the CartToCartItemConnection connection
"""
input CartToCartItemConnectionWhereArgs {
  """
  Limit results to cart items that require shipping
  """
  needsShipping: Boolean
}

"""
Connection between the Cart type and the CartItem type
"""
type CartToCartItemConnection {
  """
  Edges for the CartToCartItemConnection connection
  """
  edges: [CartToCartItemConnectionEdge] @deprecated(reason: "")

  """
  Total number of items in the cart.
  """
  itemCount: Int @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [CartItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")

  """
  Total number of different products in the cart
  """
  productCount: Int @deprecated(reason: "")
}

"""
An edge in a connection
"""
type CartToCartItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: CartItem @deprecated(reason: "")
}

"""
A item in the cart
"""
type CartItem {
  """
  Object meta data
  """
  extraData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]
  ): [MetaData] @deprecated(reason: "")

  """
  CartItem ID
  """
  key: ID! @deprecated(reason: "")

  """
  A product in the cart
  """
  product: Product @deprecated(reason: "")

  """
  Quantity of the product
  """
  quantity: Int @deprecated(reason: "")

  """
  Item&#039;s subtotal
  """
  subtotal: String @deprecated(reason: "")

  """
  Item&#039;s subtotal tax
  """
  subtotalTax: String @deprecated(reason: "")

  """
  Item&#039;s tax
  """
  tax: String @deprecated(reason: "")

  """
  Item&#039;s total
  """
  total: String @deprecated(reason: "")

  """
  Selected variation of the product
  """
  variation: ProductVariation @deprecated(reason: "")
}

"""
An additional fee
"""
type CartFee {
  """
  Fee amount
  """
  amount: Float @deprecated(reason: "")

  """
  Fee ID
  """
  id: ID! @deprecated(reason: "")

  """
  Fee name
  """
  name: String! @deprecated(reason: "")

  """
  Fee tax class
  """
  taxClass: TaxClassEnum @deprecated(reason: "")

  """
  Is fee taxable?
  """
  taxable: Boolean @deprecated(reason: "")

  """
  Fee total
  """
  total: Float @deprecated(reason: "")
}

"""
Arguments for filtering the RootQueryToCategoryConnection connection
"""
input RootQueryToCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the RootQuery type and the category type
"""
type RootQueryToCategoryConnection {
  """
  Edges for the RootQueryToCategoryConnection connection
  """
  edges: [RootQueryToCategoryConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Category] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToCategoryConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Category @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum CategoryIdType {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The hashed Global ID
  """
  ID

  """
  The name of the node
  """
  NAME

  """
  Url friendly name of the node
  """
  SLUG

  """
  The URI for the node
  """
  URI
}

"""
Arguments for filtering the RootQueryToCommentConnection connection
"""
input RootQueryToCommentConnectionWhereArgs {
  """
  Comment author email address.
  """
  authorEmail: String

  """
  Array of author IDs to include comments for.
  """
  authorIn: [ID]

  """
  Array of author IDs to exclude comments for.
  """
  authorNotIn: [ID]

  """
  Comment author URL.
  """
  authorUrl: String

  """
  Array of comment IDs to include.
  """
  commentIn: [ID]

  """
  Array of IDs of users whose unapproved comments will be returned by the query regardless of status.
  """
  commentNotIn: [ID]

  """
  Include comments of a given type.
  """
  commentType: String

  """
  Include comments from a given array of comment types.
  """
  commentTypeIn: [String]

  """
  Exclude comments from a given array of comment types.
  """
  commentTypeNotIn: String

  """
  Content object author ID to limit results by.
  """
  contentAuthor: [ID]

  """
  Array of author IDs to retrieve comments for.
  """
  contentAuthorIn: [ID]

  """
  Array of author IDs *not* to retrieve comments for.
  """
  contentAuthorNotIn: [ID]

  """
  Limit results to those affiliated with a given content object ID.
  """
  contentId: ID

  """
  Array of content object IDs to include affiliated comments for.
  """
  contentIdIn: [ID]

  """
  Array of content object IDs to exclude affiliated comments for.
  """
  contentIdNotIn: [ID]

  """
  Content object name to retrieve affiliated comments for.
  """
  contentName: String

  """
  Content Object parent ID to retrieve affiliated comments for.
  """
  contentParent: Int

  """
  Array of content object statuses to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentStatus: [PostStatusEnum]

  """
  Content object type or array of types to retrieve affiliated comments for. Pass 'any' to match any value.
  """
  contentType: [ContentTypeEnum]

  """
  Array of IDs or email addresses of users whose unapproved comments will be returned by the query regardless of $status. Default empty
  """
  includeUnapproved: [ID]

  """
  Karma score to retrieve matching comments for.
  """
  karma: Int

  """
  The cardinality of the order of the connection
  """
  order: OrderEnum

  """
  Field to order the comments by.
  """
  orderby: CommentsConnectionOrderbyEnum

  """
  Parent ID of comment to retrieve children of.
  """
  parent: Int

  """
  Array of parent IDs of comments to retrieve children for.
  """
  parentIn: [ID]

  """
  Array of parent IDs of comments *not* to retrieve children for.
  """
  parentNotIn: [ID]

  """
  Search term(s) to retrieve matching comments for.
  """
  search: String

  """
  Comment status to limit results by.
  """
  status: String

  """
  Include comments for a specific user ID.
  """
  userId: ID
}

"""
Connection between the RootQuery type and the Comment type
"""
type RootQueryToCommentConnection {
  """
  Edges for the RootQueryToCommentConnection connection
  """
  edges: [RootQueryToCommentConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Comment] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToCommentConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Comment @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum ContentNodeIdTypeEnum {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID

  """
  Identify a resource by the URI.
  """
  URI
}

"""
Arguments for filtering the RootQueryToContentNodeConnection connection
"""
input RootQueryToContentNodeConnectionWhereArgs {
  """
  The Types of content to filter
  """
  contentTypes: [ContentTypeEnum]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: RootQueryToContentNodeConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input RootQueryToContentNodeConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [RootQueryToContentNodeConnectionWhereArgsTaxArray]
}

input RootQueryToContentNodeConnectionWhereArgsTaxArray {
  field: RootQueryToContentNodeConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: RootQueryToContentNodeConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum RootQueryToContentNodeConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum RootQueryToContentNodeConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the RootQuery type and the ContentNode type
"""
type RootQueryToContentNodeConnection {
  """
  Edges for the RootQueryToContentNodeConnection connection
  """
  edges: [RootQueryToContentNodeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ContentNode] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToContentNodeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ContentNode @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single Content Type node. To be used along with the "id" field. Default is "ID".
"""
enum ContentTypeIdTypeEnum {
  """
  The globally unique ID
  """
  ID

  """
  The name of the content type.
  """
  NAME
}

"""
Connection between the RootQuery type and the ContentType type
"""
type RootQueryToContentTypeConnection {
  """
  Edges for the RootQueryToContentTypeConnection connection
  """
  edges: [RootQueryToContentTypeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ContentType] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToContentTypeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ContentType @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single Coupon. Default is ID.
"""
enum CouponIdTypeEnum {
  """
  Coupon code.
  """
  CODE

  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID
}

"""
Arguments for filtering the RootQueryToCouponConnection connection
"""
input RootQueryToCouponConnectionWhereArgs {
  """
  Limit result set to resources with a specific code.
  """
  code: String

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostTypeOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit results to those matching a string.
  """
  search: String
}

"""
Connection between the RootQuery type and the Coupon type
"""
type RootQueryToCouponConnection {
  """
  Edges for the RootQueryToCouponConnection connection
  """
  edges: [RootQueryToCouponConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Coupon] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToCouponConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Coupon @deprecated(reason: "")
}

"""
Arguments for filtering the RootQueryToCustomerConnection connection
"""
input RootQueryToCustomerConnectionWhereArgs {
  """
  Limit result set to resources with a specific email.
  """
  email: String

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Order of results.
  """
  order: OrderEnum

  """
  Order results by a specific field.
  """
  orderby: CustomerConnectionOrderbyEnum

  """
  Limit result set to resources with a specific role.
  """
  role: UserRoleEnum

  """
  Limit result set to resources with a specific group of roles.
  """
  roleIn: [UserRoleEnum]

  """
  Limit result set to resources not within a specific group of roles.
  """
  roleNotIn: [UserRoleEnum]

  """
  Limit results to those matching a string.
  """
  search: String
}

"""
Connection between the RootQuery type and the Customer type
"""
type RootQueryToCustomerConnection {
  """
  Edges for the RootQueryToCustomerConnection connection
  """
  edges: [RootQueryToCustomerConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Customer] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToCustomerConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Customer @deprecated(reason: "")
}

"""
The discussion setting type
"""
type DiscussionSettings {
  """
  Allow people to submit comments on new posts.
  """
  defaultCommentStatus: String @deprecated(reason: "")

  """
  Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.
  """
  defaultPingStatus: String @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single Product. Default is ID.
"""
enum ProductIdTypeEnum {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID

  """
  Unique store identifier for product.
  """
  SKU

  """
  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.
  """
  SLUG
}

"""
A external product object
"""
type ExternalProduct implements Node & Product {
  """
  Connection between the Product type and the ProductAttribute type
  """
  attributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection @deprecated(reason: "")

  """
  Product average count
  """
  averageRating: Float @deprecated(reason: "")

  """
  External product Buy button text
  """
  buttonText: String @deprecated(reason: "")

  """
  Catalog visibility
  """
  catalogVisibility: CatalogVisibilityEnum @deprecated(reason: "")

  """
  Connection between the Product type and the ContentType type
  """
  contentType: ProductToContentTypeConnectionEdge @deprecated(reason: "")

  """
  Date product created
  """
  date: String @deprecated(reason: "")

  """
  Date on sale from
  """
  dateOnSaleFrom: String @deprecated(reason: "")

  """
  Date on sale to
  """
  dateOnSaleTo: String @deprecated(reason: "")

  """
  Connection between the ExternalProduct type and the VariationAttribute type
  """
  defaultAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): ExternalProductToVariationAttributeConnection @deprecated(reason: "")

  """
  Product description
  """
  description(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  External product url
  """
  externalUrl: String @deprecated(reason: "")

  """
  If the product is featured
  """
  featured: Boolean @deprecated(reason: "")

  """
  Connection between the Product type and the MediaItem type
  """
  galleryImages(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection @deprecated(reason: "")

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection @deprecated(reason: "")

  """
  The globally unique identifier for the product
  """
  id: ID! @deprecated(reason: "")

  """
  Main image
  """
  image: MediaItem @deprecated(reason: "")

  """
  The permalink of the post
  """
  link: String @deprecated(reason: "")

  """
  Connection between the Product type and the LocalProductAttribute type
  """
  localAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection @deprecated(reason: "")

  """
  Menu order
  """
  menuOrder: Int @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Date product last updated
  """
  modified: String @deprecated(reason: "")

  """
  Product name
  """
  name: String @deprecated(reason: "")

  """
  Is product on sale?
  """
  onSale: Boolean @deprecated(reason: "")

  """
  Parent product
  """
  parent: Product @deprecated(reason: "")

  """
  Product&#039;s active price
  """
  price(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Product type and the productCategory type
  """
  productCategories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection @deprecated(reason: "")

  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  productId: Int @deprecated(reason: "")

  """
  Connection between the Product type and the productTag type
  """
  productTags(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection @deprecated(reason: "")

  """
  Connection between the Product type and the productType type
  """
  productTypes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection @deprecated(reason: "")

  """
  Can product be purchased?
  """
  purchasable: Boolean @deprecated(reason: "")

  """
  Purchase note
  """
  purchaseNote: String @deprecated(reason: "")

  """
  Product&#039;s regular price
  """
  regularPrice(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Product type and the Product type
  """
  related(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection @deprecated(reason: "")

  """
  Product review count
  """
  reviewCount: Int @deprecated(reason: "")

  """
  Connection between the Product type and the Comment type
  """
  reviews(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection @deprecated(reason: "")

  """
  If reviews are allowed
  """
  reviewsAllowed: Boolean @deprecated(reason: "")

  """
  Product&#039;s sale price
  """
  salePrice(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Product type and the shippingClass type
  """
  shippingClasses(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection @deprecated(reason: "")

  """
  Product short description
  """
  shortDescription(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Product SKU
  """
  sku: String @deprecated(reason: "")

  """
  Product slug
  """
  slug: String @deprecated(reason: "")

  """
  Product status
  """
  status: String @deprecated(reason: "")

  """
  Tax class
  """
  taxClass: TaxClassEnum @deprecated(reason: "")

  """
  Tax status
  """
  taxStatus: TaxStatusEnum @deprecated(reason: "")

  """
  Number total of sales
  """
  totalSales: Int @deprecated(reason: "")

  """
  Product type
  """
  type: ProductTypesEnum @deprecated(reason: "")

  """
  Connection between the Product type and the Product type
  """
  upsell(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection @deprecated(reason: "")

  """
  Connection between the Product type and the visibleProduct type
  """
  visibleProducts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection @deprecated(reason: "")
}

"""
Connection between the ExternalProduct type and the VariationAttribute type
"""
type ExternalProductToVariationAttributeConnection {
  """
  Edges for the ExternalProductToVariationAttributeConnection connection
  """
  edges: [ExternalProductToVariationAttributeConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [VariationAttribute] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type ExternalProductToVariationAttributeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: VariationAttribute @deprecated(reason: "")
}

"""
The general setting type
"""
type GeneralSettings {
  """
  A date format for all date strings.
  """
  dateFormat: String @deprecated(reason: "")

  """
  Site tagline.
  """
  description: String @deprecated(reason: "")

  """
  This address is used for admin purposes, like new user notification.
  """
  email: String @deprecated(reason: "")

  """
  WordPress locale code.
  """
  language: String @deprecated(reason: "")

  """
  A day number of the week that the week should start on.
  """
  startOfWeek: Int @deprecated(reason: "")

  """
  A time format for all time strings.
  """
  timeFormat: String @deprecated(reason: "")

  """
  A city in the same timezone as you.
  """
  timezone: String @deprecated(reason: "")

  """
  Site title.
  """
  title: String @deprecated(reason: "")

  """
  Site URL.
  """
  url: String @deprecated(reason: "")
}

"""
A group product object
"""
type GroupProduct implements Node & Product {
  """
  Product&#039;s add to cart button text description
  """
  addToCartDescription: String @deprecated(reason: "")

  """
  Product&#039;s add to cart button text description
  """
  addToCartText: String @deprecated(reason: "")

  """
  Connection between the Product type and the ProductAttribute type
  """
  attributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection @deprecated(reason: "")

  """
  Product average count
  """
  averageRating: Float @deprecated(reason: "")

  """
  Catalog visibility
  """
  catalogVisibility: CatalogVisibilityEnum @deprecated(reason: "")

  """
  Connection between the Product type and the ContentType type
  """
  contentType: ProductToContentTypeConnectionEdge @deprecated(reason: "")

  """
  Date product created
  """
  date: String @deprecated(reason: "")

  """
  Date on sale from
  """
  dateOnSaleFrom: String @deprecated(reason: "")

  """
  Date on sale to
  """
  dateOnSaleTo: String @deprecated(reason: "")

  """
  Connection between the GroupProduct type and the VariationAttribute type
  """
  defaultAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): GroupProductToVariationAttributeConnection @deprecated(reason: "")

  """
  Product description
  """
  description(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  If the product is featured
  """
  featured: Boolean @deprecated(reason: "")

  """
  Connection between the Product type and the MediaItem type
  """
  galleryImages(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection @deprecated(reason: "")

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection @deprecated(reason: "")

  """
  The globally unique identifier for the product
  """
  id: ID! @deprecated(reason: "")

  """
  Main image
  """
  image: MediaItem @deprecated(reason: "")

  """
  The permalink of the post
  """
  link: String @deprecated(reason: "")

  """
  Connection between the Product type and the LocalProductAttribute type
  """
  localAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection @deprecated(reason: "")

  """
  Menu order
  """
  menuOrder: Int @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Date product last updated
  """
  modified: String @deprecated(reason: "")

  """
  Product name
  """
  name: String @deprecated(reason: "")

  """
  Is product on sale?
  """
  onSale: Boolean @deprecated(reason: "")

  """
  Parent product
  """
  parent: Product @deprecated(reason: "")

  """
  Connection between the Product type and the productCategory type
  """
  productCategories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection @deprecated(reason: "")

  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  productId: Int @deprecated(reason: "")

  """
  Connection between the Product type and the productTag type
  """
  productTags(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection @deprecated(reason: "")

  """
  Connection between the Product type and the productType type
  """
  productTypes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection @deprecated(reason: "")

  """
  Connection between the GroupProduct type and the Product type
  """
  products(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: GroupProductToProductConnectionWhereArgs
  ): GroupProductToProductConnection @deprecated(reason: "")

  """
  Can product be purchased?
  """
  purchasable: Boolean @deprecated(reason: "")

  """
  Purchase note
  """
  purchaseNote: String @deprecated(reason: "")

  """
  Connection between the Product type and the Product type
  """
  related(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection @deprecated(reason: "")

  """
  Product review count
  """
  reviewCount: Int @deprecated(reason: "")

  """
  Connection between the Product type and the Comment type
  """
  reviews(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection @deprecated(reason: "")

  """
  If reviews are allowed
  """
  reviewsAllowed: Boolean @deprecated(reason: "")

  """
  Connection between the Product type and the shippingClass type
  """
  shippingClasses(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection @deprecated(reason: "")

  """
  Product short description
  """
  shortDescription(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Product SKU
  """
  sku: String @deprecated(reason: "")

  """
  Product slug
  """
  slug: String @deprecated(reason: "")

  """
  Product status
  """
  status: String @deprecated(reason: "")

  """
  Number total of sales
  """
  totalSales: Int @deprecated(reason: "")

  """
  Product type
  """
  type: ProductTypesEnum @deprecated(reason: "")

  """
  Connection between the Product type and the Product type
  """
  upsell(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection @deprecated(reason: "")

  """
  Connection between the Product type and the visibleProduct type
  """
  visibleProducts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection @deprecated(reason: "")
}

"""
Connection between the GroupProduct type and the VariationAttribute type
"""
type GroupProductToVariationAttributeConnection {
  """
  Edges for the GroupProductToVariationAttributeConnection connection
  """
  edges: [GroupProductToVariationAttributeConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [VariationAttribute] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type GroupProductToVariationAttributeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: VariationAttribute @deprecated(reason: "")
}

"""
Arguments for filtering the GroupProductToProductConnection connection
"""
input GroupProductToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """
  Limit result set to products assigned a specific category name.
  """
  category: String

  """
  Limit result set to products assigned a specific category name.
  """
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to featured products.
  """
  featured: Boolean

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to products based on a maximum price.
  """
  maxPrice: Float

  """
  Limit result set to products based on a minimum price.
  """
  minPrice: Float

  """
  Limit result set to products on sale.
  """
  onSale: Boolean

  """
  What paramater to use to order the objects by.
  """
  orderby: [ProductsOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to products based on a keyword search.
  """
  search: String

  """
  Limit result set to products assigned a specific shipping class ID.
  """
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """
  Limit result set to products with a specific slug.
  """
  slug: String

  """
  Limit result set to products assigned a specific status.
  """
  status: String

  """
  Limit result set to products in stock or out of stock.
  """
  stockStatus: [StockStatusEnum]

  """
  Limit result types to types supported by WooGraphQL.
  """
  supportedTypesOnly: Boolean

  """
  Limit result set to products assigned a specific tag name.
  """
  tag: String

  """
  Limit result set to products assigned a specific tag ID.
  """
  tagId: Int

  """
  Limit result set to products assigned to a specific group of tag IDs.
  """
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """
  Limit result set with complex set of taxonomy filters.
  """
  taxonomyFilter: [ProductTaxonomyFilterRelationInput]

  """
  Limit result set to products assigned a specific type.
  """
  type: ProductTypesEnum

  """
  Limit result set to products assigned to a group of specific types.
  """
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """
  Limit result set to products with a specific visibility level.
  """
  visibility: CatalogVisibilityEnum
}

"""
Connection between the GroupProduct type and the Product type
"""
type GroupProductToProductConnection {
  """
  Edges for the GroupProductToProductConnection connection
  """
  edges: [GroupProductToProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Product] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type GroupProductToProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Product @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum MediaItemIdType {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID

  """
  Identify a resource by the URI.
  """
  URI

  """
  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.
  """
  SLUG

  """
  Identify a media item by its source url
  """
  SOURCE_URL
}

"""
Arguments for filtering the RootQueryToMediaItemConnection connection
"""
input RootQueryToMediaItemConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: RootQueryToMediaItemConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input RootQueryToMediaItemConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [RootQueryToMediaItemConnectionWhereArgsTaxArray]
}

input RootQueryToMediaItemConnectionWhereArgsTaxArray {
  field: RootQueryToMediaItemConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: RootQueryToMediaItemConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum RootQueryToMediaItemConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum RootQueryToMediaItemConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the RootQuery type and the mediaItem type
"""
type RootQueryToMediaItemConnection {
  """
  Edges for the RootQueryToMediaItemConnection connection
  """
  edges: [RootQueryToMediaItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [MediaItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToMediaItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: MediaItem @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single node. Default is "ID". To be used along with the "id" field.
"""
enum MenuNodeIdTypeEnum {
  """
  Identify a menu node by the Database ID.
  """
  DATABASE_ID

  """
  Identify a menu node by the (hashed) Global ID.
  """
  ID

  """
  Identify a menu node by it's name
  """
  NAME
}

"""
Menus are the containers for navigation items. Menus can be assigned to menu locations, which are typically registered by the active theme.
"""
type Menu implements Node & DatabaseIdentifier {
  """
  The number of items in the menu
  """
  count: Int @deprecated(reason: "")

  """
  The unique identifier stored in the database
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The globally unique identifier of the nav menu object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  """
  locations: [MenuLocationEnum] @deprecated(reason: "")

  """
  WP ID of the nav menu.
  """
  menuId: Int @deprecated(reason: "Deprecated in favor of the databaseId field")

  """
  Connection between the Menu type and the MenuItem type
  """
  menuItems(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: MenuToMenuItemConnectionWhereArgs
  ): MenuToMenuItemConnection @deprecated(reason: "")

  """
  Display name of the menu. Equivalent to WP_Term-&gt;name.
  """
  name: String @deprecated(reason: "")

  """
  The url friendly name of the menu. Equivalent to WP_Term-&gt;slug
  """
  slug: String @deprecated(reason: "")
}

"""
Registered menu locations
"""
enum MenuLocationEnum {
  MENU_1
}

"""
Arguments for filtering the MenuToMenuItemConnection connection
"""
input MenuToMenuItemConnectionWhereArgs {
  """
  The ID of the object
  """
  id: Int

  """
  The menu location for the menu being queried
  """
  location: MenuLocationEnum

  """
  The database ID of the parent menu object
  """
  parentDatabaseId: Int

  """
  The ID of the parent menu object
  """
  parentId: ID
}

"""
Connection between the Menu type and the MenuItem type
"""
type MenuToMenuItemConnection {
  """
  Edges for the MenuToMenuItemConnection connection
  """
  edges: [MenuToMenuItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [MenuItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type MenuToMenuItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: MenuItem @deprecated(reason: "")
}

"""
Navigation menu items are the individual items assigned to a menu. These are rendered as the links in a navigation menu.
"""
type MenuItem implements Node & DatabaseIdentifier {
  """
  Connection between the MenuItem type and the MenuItem type
  """
  childItems(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: MenuItemToMenuItemConnectionWhereArgs
  ): MenuItemToMenuItemConnection @deprecated(reason: "")

  """
  Connection from MenuItem to it&#039;s connected node
  """
  connectedNode: MenuItemToMenuItemLinkableConnectionEdge
    @deprecated(reason: "")

  """
  The object connected to this menu item.
  """
  connectedObject: MenuItemObjectUnion
    @deprecated(reason: "Deprecated in favor of the connectedNode field")

  """
  Class attribute for the menu item link
  """
  cssClasses: [String] @deprecated(reason: "")

  """
  The unique identifier stored in the database
  """
  databaseId: Int! @deprecated(reason: "")

  """
  Description of the menu item.
  """
  description: String @deprecated(reason: "")

  """
  The globally unique identifier of the nav menu item object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  Label or title of the menu item.
  """
  label: String @deprecated(reason: "")

  """
  Link relationship (XFN) of the menu item.
  """
  linkRelationship: String @deprecated(reason: "")

  """
  """
  locations: [MenuLocationEnum] @deprecated(reason: "")

  """
  The Menu a MenuItem is part of
  """
  menu: MenuItemToMenuConnectionEdge @deprecated(reason: "")

  """
  WP ID of the menu item.
  """
  menuItemId: Int
    @deprecated(reason: "Deprecated in favor of the databaseId field")

  """
  Menu item order
  """
  order: Int @deprecated(reason: "")

  """
  The database id of the parent menu item or null if it is the root
  """
  parentDatabaseId: Int @deprecated(reason: "")

  """
  The globally unique identifier of the parent nav menu item object.
  """
  parentId: ID @deprecated(reason: "")

  """
  Path for the resource. Relative path for internal resources. Absolute path for external resources.
  """
  path: String! @deprecated(reason: "")

  """
  Target attribute for the menu item link.
  """
  target: String @deprecated(reason: "")

  """
  Title attribute for the menu item link
  """
  title: String @deprecated(reason: "")

  """
  URL or destination of the menu item.
  """
  url: String @deprecated(reason: "")
}

"""
Arguments for filtering the MenuItemToMenuItemConnection connection
"""
input MenuItemToMenuItemConnectionWhereArgs {
  """
  The ID of the object
  """
  id: Int

  """
  The menu location for the menu being queried
  """
  location: MenuLocationEnum

  """
  The database ID of the parent menu object
  """
  parentDatabaseId: Int

  """
  The ID of the parent menu object
  """
  parentId: ID
}

"""
Connection between the MenuItem type and the MenuItem type
"""
type MenuItemToMenuItemConnection {
  """
  Edges for the MenuItemToMenuItemConnection connection
  """
  edges: [MenuItemToMenuItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [MenuItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type MenuItemToMenuItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: MenuItem @deprecated(reason: "")
}

"""
Connection between the MenuItem type and the MenuItemLinkable type
"""
type MenuItemToMenuItemLinkableConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: MenuItemLinkable @deprecated(reason: "")
}

"""
Deprecated in favor of MenuItemLinkeable Interface
"""
union MenuItemObjectUnion =
    Post
  | Page
  | Category
  | Tag
  | ProductCategory
  | ProductTag

"""
Connection between the MenuItem type and the Menu type
"""
type MenuItemToMenuConnectionEdge {
  """
  The nodes of the connection, without the edges
  """
  node: Menu @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single node. Default is "ID". To be used along with the "id" field.
"""
enum MenuItemNodeIdTypeEnum {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID
}

"""
Arguments for filtering the RootQueryToMenuItemConnection connection
"""
input RootQueryToMenuItemConnectionWhereArgs {
  """
  The ID of the object
  """
  id: Int

  """
  The menu location for the menu being queried
  """
  location: MenuLocationEnum

  """
  The database ID of the parent menu object
  """
  parentDatabaseId: Int

  """
  The ID of the parent menu object
  """
  parentId: ID
}

"""
Connection between the RootQuery type and the MenuItem type
"""
type RootQueryToMenuItemConnection {
  """
  Edges for the RootQueryToMenuItemConnection connection
  """
  edges: [RootQueryToMenuItemConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [MenuItem] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToMenuItemConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: MenuItem @deprecated(reason: "")
}

"""
Arguments for filtering the RootQueryToMenuConnection connection
"""
input RootQueryToMenuConnectionWhereArgs {
  """
  The ID of the object
  """
  id: Int

  """
  The menu location for the menu being queried
  """
  location: MenuLocationEnum

  """
  The slug of the menu to query items for
  """
  slug: String
}

"""
Connection between the RootQuery type and the Menu type
"""
type RootQueryToMenuConnection {
  """
  Edges for the RootQueryToMenuConnection connection
  """
  edges: [RootQueryToMenuConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Menu] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToMenuConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Menu @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single Order. Default is ID.
"""
enum OrderIdTypeEnum {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID

  """
  Order number.
  """
  ORDER_NUMBER
}

"""
Arguments for filtering the RootQueryToOrderConnection connection
"""
input RootQueryToOrderConnectionWhereArgs {
  """
  Limit result set to orders assigned a specific customer.
  """
  customerId: Int

  """
  Limit result set to orders assigned a specific group of customers.
  """
  customersIn: [Int]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  What paramater to use to order the objects by.
  """
  orderby: [OrdersOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to orders assigned a specific product.
  """
  productId: Int

  """
  Limit results to those matching a string.
  """
  search: String

  """
  Limit result set to orders assigned a specific status.
  """
  statuses: [OrderStatusEnum]
}

"""
Connection between the RootQuery type and the Order type
"""
type RootQueryToOrderConnection {
  """
  Edges for the RootQueryToOrderConnection connection
  """
  edges: [RootQueryToOrderConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Order] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToOrderConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Order @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum PageIdType {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID

  """
  Identify a resource by the URI.
  """
  URI
}

"""
Arguments for filtering the RootQueryToPageConnection connection
"""
input RootQueryToPageConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: RootQueryToPageConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input RootQueryToPageConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [RootQueryToPageConnectionWhereArgsTaxArray]
}

input RootQueryToPageConnectionWhereArgsTaxArray {
  field: RootQueryToPageConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: RootQueryToPageConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum RootQueryToPageConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum RootQueryToPageConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the RootQuery type and the page type
"""
type RootQueryToPageConnection {
  """
  Edges for the RootQueryToPageConnection connection
  """
  edges: [RootQueryToPageConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Page] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToPageConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Page @deprecated(reason: "")
}

"""
Arguments for filtering the RootQueryToPaymentGatewayConnection connection
"""
input RootQueryToPaymentGatewayConnectionWhereArgs {
  """
  Include disabled payment gateways?
  """
  all: Boolean
}

"""
Connection between the RootQuery type and the PaymentGateway type
"""
type RootQueryToPaymentGatewayConnection {
  """
  Edges for the RootQueryToPaymentGatewayConnection connection
  """
  edges: [RootQueryToPaymentGatewayConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [PaymentGateway] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToPaymentGatewayConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: PaymentGateway @deprecated(reason: "")
}

"""
A payment gateway object
"""
type PaymentGateway {
  """
  gateway&#039;s description
  """
  description: String @deprecated(reason: "")

  """
  gateway&#039;s icon
  """
  icon: String @deprecated(reason: "")

  """
  gateway&#039;s title
  """
  id: String! @deprecated(reason: "")

  """
  gateway&#039;s title
  """
  title: String @deprecated(reason: "")
}

"""
An plugin object
"""
type Plugin implements Node {
  """
  Name of the plugin author(s), may also be a company name.
  """
  author: String @deprecated(reason: "")

  """
  URI for the related author(s)/company website.
  """
  authorUri: String @deprecated(reason: "")

  """
  Description of the plugin.
  """
  description: String @deprecated(reason: "")

  """
  The globally unique identifier of the plugin object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  Display name of the plugin.
  """
  name: String @deprecated(reason: "")

  """
  Plugin path.
  """
  path: String @deprecated(reason: "")

  """
  URI for the plugin website. This is useful for directing users for support requests etc.
  """
  pluginUri: String @deprecated(reason: "")

  """
  Current version of the plugin.
  """
  version: String @deprecated(reason: "")
}

"""
Connection between the RootQuery type and the Plugin type
"""
type RootQueryToPluginConnection {
  """
  Edges for the RootQueryToPluginConnection connection
  """
  edges: [RootQueryToPluginConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Plugin] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToPluginConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Plugin @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum PostIdType {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID

  """
  Identify a resource by the URI.
  """
  URI

  """
  Identify a resource by the slug. Available to non-hierarchcial Types where the slug is a unique identifier.
  """
  SLUG
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum PostFormatIdType {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The hashed Global ID
  """
  ID

  """
  The name of the node
  """
  NAME

  """
  Url friendly name of the node
  """
  SLUG

  """
  The URI for the node
  """
  URI
}

"""
Arguments for filtering the RootQueryToPostFormatConnection connection
"""
input RootQueryToPostFormatConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the RootQuery type and the postFormat type
"""
type RootQueryToPostFormatConnection {
  """
  Edges for the RootQueryToPostFormatConnection connection
  """
  edges: [RootQueryToPostFormatConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [PostFormat] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToPostFormatConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: PostFormat @deprecated(reason: "")
}

"""
Arguments for filtering the RootQueryToPostConnection connection
"""
input RootQueryToPostConnectionWhereArgs {
  """
  The user that's connected as the author of the object. Use the userId for the author object.
  """
  author: Int

  """
  Find objects connected to author(s) in the array of author's userIds
  """
  authorIn: [ID]

  """
  Find objects connected to the author by the author's nicename
  """
  authorName: String

  """
  Find objects NOT connected to author(s) in the array of author's userIds
  """
  authorNotIn: [ID]

  """
  Category ID
  """
  categoryId: Int

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryIn: [ID]

  """
  Use Category Slug
  """
  categoryName: String

  """
  Array of category IDs, used to display objects from one category OR another
  """
  categoryNotIn: [ID]

  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum

  """
  Tag Slug
  """
  tag: String

  """
  Use Tag ID
  """
  tagId: String

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagIn: [ID]

  """
  Array of tag IDs, used to display objects from one tag OR another
  """
  tagNotIn: [ID]

  """
  Array of tag slugs, used to display objects from one tag OR another
  """
  tagSlugAnd: [String]

  """
  Array of tag slugs, used to exclude objects in specified tags
  """
  tagSlugIn: [String]
  taxQuery: RootQueryToPostConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input RootQueryToPostConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [RootQueryToPostConnectionWhereArgsTaxArray]
}

input RootQueryToPostConnectionWhereArgsTaxArray {
  field: RootQueryToPostConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: RootQueryToPostConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum RootQueryToPostConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum RootQueryToPostConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the RootQuery type and the post type
"""
type RootQueryToPostConnection {
  """
  Edges for the RootQueryToPostConnection connection
  """
  edges: [RootQueryToPostConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Post] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToPostConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Post @deprecated(reason: "")
}

"""
Arguments for filtering the RootQueryToProductCategoryConnection connection
"""
input RootQueryToProductCategoryConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the RootQuery type and the productCategory type
"""
type RootQueryToProductCategoryConnection {
  """
  Edges for the RootQueryToProductCategoryConnection connection
  """
  edges: [RootQueryToProductCategoryConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductCategory] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToProductCategoryConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductCategory @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum ProductCategoryIdType {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The hashed Global ID
  """
  ID

  """
  The name of the node
  """
  NAME

  """
  Url friendly name of the node
  """
  SLUG

  """
  The URI for the node
  """
  URI
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum ProductTagIdType {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The hashed Global ID
  """
  ID

  """
  The name of the node
  """
  NAME

  """
  Url friendly name of the node
  """
  SLUG

  """
  The URI for the node
  """
  URI
}

"""
Arguments for filtering the RootQueryToProductTagConnection connection
"""
input RootQueryToProductTagConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the RootQuery type and the productTag type
"""
type RootQueryToProductTagConnection {
  """
  Edges for the RootQueryToProductTagConnection connection
  """
  edges: [RootQueryToProductTagConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductTag] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToProductTagConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductTag @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum ProductTypeIdType {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The hashed Global ID
  """
  ID

  """
  The name of the node
  """
  NAME

  """
  Url friendly name of the node
  """
  SLUG

  """
  The URI for the node
  """
  URI
}

"""
Arguments for filtering the RootQueryToProductTypeConnection connection
"""
input RootQueryToProductTypeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the RootQuery type and the productType type
"""
type RootQueryToProductTypeConnection {
  """
  Edges for the RootQueryToProductTypeConnection connection
  """
  edges: [RootQueryToProductTypeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ProductType] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToProductTypeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ProductType @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single ProductVariation. Default is ID.
"""
enum ProductVariationIdTypeEnum {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID
}

"""
Arguments for filtering the RootQueryToProductConnection connection
"""
input RootQueryToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """
  Limit result set to products assigned a specific category name.
  """
  category: String

  """
  Limit result set to products assigned a specific category name.
  """
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to featured products.
  """
  featured: Boolean

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to products based on a maximum price.
  """
  maxPrice: Float

  """
  Limit result set to products based on a minimum price.
  """
  minPrice: Float

  """
  Limit result set to products on sale.
  """
  onSale: Boolean

  """
  What paramater to use to order the objects by.
  """
  orderby: [ProductsOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to products based on a keyword search.
  """
  search: String

  """
  Limit result set to products assigned a specific shipping class ID.
  """
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """
  Limit result set to products with a specific slug.
  """
  slug: String

  """
  Limit result set to products assigned a specific status.
  """
  status: String

  """
  Limit result set to products in stock or out of stock.
  """
  stockStatus: [StockStatusEnum]

  """
  Limit result types to types supported by WooGraphQL.
  """
  supportedTypesOnly: Boolean

  """
  Limit result set to products assigned a specific tag name.
  """
  tag: String

  """
  Limit result set to products assigned a specific tag ID.
  """
  tagId: Int

  """
  Limit result set to products assigned to a specific group of tag IDs.
  """
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """
  Limit result set with complex set of taxonomy filters.
  """
  taxonomyFilter: [ProductTaxonomyFilterRelationInput]

  """
  Limit result set to products assigned a specific type.
  """
  type: ProductTypesEnum

  """
  Limit result set to products assigned to a group of specific types.
  """
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """
  Limit result set to products with a specific visibility level.
  """
  visibility: CatalogVisibilityEnum
}

"""
Connection between the RootQuery type and the Product type
"""
type RootQueryToProductConnection {
  """
  Edges for the RootQueryToProductConnection connection
  """
  edges: [RootQueryToProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Product] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Product @deprecated(reason: "")
}

"""
The reading setting type
"""
type ReadingSettings {
  """
  Blog pages show at most.
  """
  postsPerPage: Int @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single Refund. Default is ID.
"""
enum RefundIdTypeEnum {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID
}

"""
Arguments for filtering the RootQueryToRefundConnection connection
"""
input RootQueryToRefundConnectionWhereArgs {
  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to refunds from a specific group of order IDs.
  """
  orderIn: [Int]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostTypeOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit results to those matching a string.
  """
  search: String

  """
  Limit result set to refunds assigned a specific status.
  """
  statuses: [String]
}

"""
Connection between the RootQuery type and the Refund type
"""
type RootQueryToRefundConnection {
  """
  Edges for the RootQueryToRefundConnection connection
  """
  edges: [RootQueryToRefundConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Refund] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToRefundConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Refund @deprecated(reason: "")
}

"""
Connection between the RootQuery type and the EnqueuedScript type
"""
type RootQueryToEnqueuedScriptConnection {
  """
  Edges for the RootQueryToEnqueuedScriptConnection connection
  """
  edges: [RootQueryToEnqueuedScriptConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [EnqueuedScript] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToEnqueuedScriptConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: EnqueuedScript @deprecated(reason: "")
}

"""
Connection between the RootQuery type and the EnqueuedStylesheet type
"""
type RootQueryToEnqueuedStylesheetConnection {
  """
  Edges for the RootQueryToEnqueuedStylesheetConnection connection
  """
  edges: [RootQueryToEnqueuedStylesheetConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [EnqueuedStylesheet] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToEnqueuedStylesheetConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: EnqueuedStylesheet @deprecated(reason: "")
}

"""
Arguments for filtering the RootQueryToContentRevisionUnionConnection connection
"""
input RootQueryToContentRevisionUnionConnectionWhereArgs {
  """
  Filter the connection based on dates
  """
  dateQuery: DateQueryInput

  """
  True for objects with passwords; False for objects without passwords; null for all objects with or without passwords
  """
  hasPassword: Boolean

  """
  Specific ID of the object
  """
  id: Int

  """
  Array of IDs for the objects to retrieve
  """
  in: [ID]

  """
  Get objects with a specific mimeType property
  """
  mimeType: MimeTypeEnum

  """
  Slug / post_name of the object
  """
  name: String

  """
  Specify objects to retrieve. Use slugs
  """
  nameIn: [String]

  """
  Specify IDs NOT to retrieve. If this is used in the same query as "in", it will be ignored
  """
  notIn: [ID]

  """
  What paramater to use to order the objects by.
  """
  orderby: [PostObjectsConnectionOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items
  """
  parent: ID

  """
  Specify objects whose parent is in an array
  """
  parentIn: [ID]

  """
  Specify posts whose parent is not in an array
  """
  parentNotIn: [ID]

  """
  Show posts with a specific password.
  """
  password: String

  """
  Show Posts based on a keyword search
  """
  search: String
  stati: [PostStatusEnum]
  status: PostStatusEnum
  taxQuery: RootQueryToContentRevisionUnionConnectionWhereArgsTaxQuery

  """
  Title of the object
  """
  title: String
}

"""
Query objects based on taxonomy parameters
"""
input RootQueryToContentRevisionUnionConnectionWhereArgsTaxQuery {
  relation: RelationEnum
  taxArray: [RootQueryToContentRevisionUnionConnectionWhereArgsTaxArray]
}

input RootQueryToContentRevisionUnionConnectionWhereArgsTaxArray {
  field: RootQueryToContentRevisionUnionConnectionWhereArgsTaxQueryField

  """
  Whether or not to include children for hierarchical taxonomies. Defaults to false to improve performance (note that this is opposite of the default for WP_Query).
  """
  includeChildren: Boolean
  operator: RootQueryToContentRevisionUnionConnectionWhereArgsTaxQueryOperator
  taxonomy: TaxonomyEnum

  """
  A list of term slugs
  """
  terms: [String]
}

"""
Which field to select taxonomy term by. Default value is "term_id"
"""
enum RootQueryToContentRevisionUnionConnectionWhereArgsTaxQueryField {
  ID
  NAME
  SLUG
  TAXONOMY_ID
}

enum RootQueryToContentRevisionUnionConnectionWhereArgsTaxQueryOperator {
  AND
  EXISTS
  IN
  NOT_EXISTS
  NOT_IN
}

"""
Connection between the RootQuery type and the ContentRevisionUnion type
"""
type RootQueryToContentRevisionUnionConnection {
  """
  Edges for the RootQueryToContentRevisionUnionConnection connection
  """
  edges: [RootQueryToContentRevisionUnionConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ContentRevisionUnion] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToContentRevisionUnionConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ContentRevisionUnion @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum ShippingClassIdType {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The hashed Global ID
  """
  ID

  """
  The name of the node
  """
  NAME

  """
  Url friendly name of the node
  """
  SLUG

  """
  The URI for the node
  """
  URI
}

"""
Arguments for filtering the RootQueryToShippingClassConnection connection
"""
input RootQueryToShippingClassConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the RootQuery type and the shippingClass type
"""
type RootQueryToShippingClassConnection {
  """
  Edges for the RootQueryToShippingClassConnection connection
  """
  edges: [RootQueryToShippingClassConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ShippingClass] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToShippingClassConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ShippingClass @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single Shipping Method. Default is ID.
"""
enum ShippingMethodIdTypeEnum {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID
}

"""
Connection between the RootQuery type and the ShippingMethod type
"""
type RootQueryToShippingMethodConnection {
  """
  Edges for the RootQueryToShippingMethodConnection connection
  """
  edges: [RootQueryToShippingMethodConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [ShippingMethod] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToShippingMethodConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: ShippingMethod @deprecated(reason: "")
}

"""
A product object
"""
type SimpleProduct implements Node & Product {
  """
  Connection between the Product type and the ProductAttribute type
  """
  attributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductAttributeConnectionWhereArgs
  ): ProductToProductAttributeConnection @deprecated(reason: "")

  """
  Product average count
  """
  averageRating: Float @deprecated(reason: "")

  """
  Product backorders status
  """
  backorders: BackordersEnum @deprecated(reason: "")

  """
  Can product be backordered?
  """
  backordersAllowed: Boolean @deprecated(reason: "")

  """
  Catalog visibility
  """
  catalogVisibility: CatalogVisibilityEnum @deprecated(reason: "")

  """
  Connection between the Product type and the ContentType type
  """
  contentType: ProductToContentTypeConnectionEdge @deprecated(reason: "")

  """
  Connection between the SimpleProduct type and the Product type
  """
  crossSell(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: SimpleProductToProductConnectionWhereArgs
  ): SimpleProductToProductConnection @deprecated(reason: "")

  """
  Date product created
  """
  date: String @deprecated(reason: "")

  """
  Date on sale from
  """
  dateOnSaleFrom: String @deprecated(reason: "")

  """
  Date on sale to
  """
  dateOnSaleTo: String @deprecated(reason: "")

  """
  Connection between the SimpleProduct type and the VariationAttribute type
  """
  defaultAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String
  ): SimpleProductToVariationAttributeConnection @deprecated(reason: "")

  """
  Product description
  """
  description(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Download expiry
  """
  downloadExpiry: Int @deprecated(reason: "")

  """
  Download limit
  """
  downloadLimit: Int @deprecated(reason: "")

  """
  Is downloadable?
  """
  downloadable: Boolean @deprecated(reason: "")

  """
  Product downloads
  """
  downloads: [ProductDownload] @deprecated(reason: "")

  """
  If the product is featured
  """
  featured: Boolean @deprecated(reason: "")

  """
  Connection between the Product type and the MediaItem type
  """
  galleryImages(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToMediaItemConnectionWhereArgs
  ): ProductToMediaItemConnection @deprecated(reason: "")

  """
  Connection between the Product type and the GlobalProductAttribute type
  """
  globalAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToGlobalProductAttributeConnectionWhereArgs
  ): ProductToGlobalProductAttributeConnection @deprecated(reason: "")

  """
  Product&#039;s height
  """
  height: String @deprecated(reason: "")

  """
  The globally unique identifier for the product
  """
  id: ID! @deprecated(reason: "")

  """
  Main image
  """
  image: MediaItem @deprecated(reason: "")

  """
  Product&#039;s length
  """
  length: String @deprecated(reason: "")

  """
  The permalink of the post
  """
  link: String @deprecated(reason: "")

  """
  Connection between the Product type and the LocalProductAttribute type
  """
  localAttributes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToLocalProductAttributeConnectionWhereArgs
  ): ProductToLocalProductAttributeConnection @deprecated(reason: "")

  """
  If product manage stock
  """
  manageStock: Boolean @deprecated(reason: "")

  """
  Menu order
  """
  menuOrder: Int @deprecated(reason: "")

  """
  Object meta data
  """
  metaData(
    """
    Retrieve meta by key
    """
    key: String

    """
    Retrieve multiple metas by key
    """
    keysIn: [String]

    """
    Retrieve meta with matching keys
    """
    multiple: Boolean
  ): [MetaData] @deprecated(reason: "")

  """
  Date product last updated
  """
  modified: String @deprecated(reason: "")

  """
  Product name
  """
  name: String @deprecated(reason: "")

  """
  Is product on sale?
  """
  onSale: Boolean @deprecated(reason: "")

  """
  Parent product
  """
  parent: Product @deprecated(reason: "")

  """
  Product&#039;s active price
  """
  price(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Product type and the productCategory type
  """
  productCategories(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductCategoryConnectionWhereArgs
  ): ProductToProductCategoryConnection @deprecated(reason: "")

  """
  The Id of the order. Equivalent to WP_Post-&gt;ID
  """
  productId: Int @deprecated(reason: "")

  """
  Connection between the Product type and the productTag type
  """
  productTags(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTagConnectionWhereArgs
  ): ProductToProductTagConnection @deprecated(reason: "")

  """
  Connection between the Product type and the productType type
  """
  productTypes(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductTypeConnectionWhereArgs
  ): ProductToProductTypeConnection @deprecated(reason: "")

  """
  Can product be purchased?
  """
  purchasable: Boolean @deprecated(reason: "")

  """
  Purchase note
  """
  purchaseNote: String @deprecated(reason: "")

  """
  Product&#039;s regular price
  """
  regularPrice(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Connection between the Product type and the Product type
  """
  related(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection @deprecated(reason: "")

  """
  Product review count
  """
  reviewCount: Int @deprecated(reason: "")

  """
  Connection between the Product type and the Comment type
  """
  reviews(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToCommentConnectionWhereArgs
  ): ProductToCommentConnection @deprecated(reason: "")

  """
  If reviews are allowed
  """
  reviewsAllowed: Boolean @deprecated(reason: "")

  """
  Product&#039;s sale price
  """
  salePrice(
    """
    Format of the price
    """
    format: PricingFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  shipping class ID
  """
  shippingClassId: Int @deprecated(reason: "")

  """
  Connection between the Product type and the shippingClass type
  """
  shippingClasses(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToShippingClassConnectionWhereArgs
  ): ProductToShippingClassConnection @deprecated(reason: "")

  """
  Does product need to be shipped?
  """
  shippingRequired: Boolean @deprecated(reason: "")

  """
  Is product shipping taxable?
  """
  shippingTaxable: Boolean @deprecated(reason: "")

  """
  Product short description
  """
  shortDescription(
    """
    Format of the field output
    """
    format: PostObjectFieldFormatEnum
  ): String @deprecated(reason: "")

  """
  Product SKU
  """
  sku: String @deprecated(reason: "")

  """
  Product slug
  """
  slug: String @deprecated(reason: "")

  """
  If should be sold individually
  """
  soldIndividually: Boolean @deprecated(reason: "")

  """
  Product status
  """
  status: String @deprecated(reason: "")

  """
  Number of items available for sale
  """
  stockQuantity: Int @deprecated(reason: "")

  """
  Product stock status
  """
  stockStatus: StockStatusEnum @deprecated(reason: "")

  """
  Tax class
  """
  taxClass: TaxClassEnum @deprecated(reason: "")

  """
  Tax status
  """
  taxStatus: TaxStatusEnum @deprecated(reason: "")

  """
  Number total of sales
  """
  totalSales: Int @deprecated(reason: "")

  """
  Product type
  """
  type: ProductTypesEnum @deprecated(reason: "")

  """
  Connection between the Product type and the Product type
  """
  upsell(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToProductConnectionWhereArgs
  ): ProductToProductConnection @deprecated(reason: "")

  """
  Is product virtual?
  """
  virtual: Boolean @deprecated(reason: "")

  """
  Connection between the Product type and the visibleProduct type
  """
  visibleProducts(
    """
    The number of items to return after the referenced "after" cursor
    """
    first: Int
    last: Int

    """
    Cursor used along with the "first" argument to reference where in the dataset to get data
    """
    after: String

    """
    Cursor used along with the "last" argument to reference where in the dataset to get data
    """
    before: String

    """
    Arguments for filtering the connection
    """
    where: ProductToVisibleProductConnectionWhereArgs
  ): ProductToVisibleProductConnection @deprecated(reason: "")

  """
  Product&#039;s weight
  """
  weight: String @deprecated(reason: "")

  """
  Product&#039;s width
  """
  width: String @deprecated(reason: "")
}

"""
Arguments for filtering the SimpleProductToProductConnection connection
"""
input SimpleProductToProductConnectionWhereArgs {
  """
  Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.
  """
  attribute: String

  """
  Limit result set to products with a specific attribute term ID (required an assigned attribute).
  """
  attributeTerm: String

  """
  Limit result set to products assigned a specific category name.
  """
  category: String

  """
  Limit result set to products assigned a specific category name.
  """
  categoryId: Int

  """
  Limit result set to products assigned to a specific group of category IDs.
  """
  categoryIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of category IDs.
  """
  categoryIdNotIn: [Int]

  """
  Limit result set to products assigned to a group of specific categories by name.
  """
  categoryIn: [String]

  """
  Limit result set to products not assigned to a group of specific categories by name.
  """
  categoryNotIn: [String]

  """
  Filter the connection based on dates.
  """
  dateQuery: DateQueryInput

  """
  Ensure result set excludes specific IDs.
  """
  exclude: [Int]

  """
  Limit result set to featured products.
  """
  featured: Boolean

  """
  Limit result set to specific ids.
  """
  include: [Int]

  """
  Limit result set to products based on a maximum price.
  """
  maxPrice: Float

  """
  Limit result set to products based on a minimum price.
  """
  minPrice: Float

  """
  Limit result set to products on sale.
  """
  onSale: Boolean

  """
  What paramater to use to order the objects by.
  """
  orderby: [ProductsOrderbyInput]

  """
  Use ID to return only children. Use 0 to return only top-level items.
  """
  parent: Int

  """
  Specify objects whose parent is in an array.
  """
  parentIn: [Int]

  """
  Specify objects whose parent is not in an array.
  """
  parentNotIn: [Int]

  """
  Limit result set to products based on a keyword search.
  """
  search: String

  """
  Limit result set to products assigned a specific shipping class ID.
  """
  shippingClassId: Int

  """
  Limit result set to products with specific SKU(s). Use commas to separate.
  """
  sku: String

  """
  Limit result set to products with a specific slug.
  """
  slug: String

  """
  Limit result set to products assigned a specific status.
  """
  status: String

  """
  Limit result set to products in stock or out of stock.
  """
  stockStatus: [StockStatusEnum]

  """
  Limit result types to types supported by WooGraphQL.
  """
  supportedTypesOnly: Boolean

  """
  Limit result set to products assigned a specific tag name.
  """
  tag: String

  """
  Limit result set to products assigned a specific tag ID.
  """
  tagId: Int

  """
  Limit result set to products assigned to a specific group of tag IDs.
  """
  tagIdIn: [Int]

  """
  Limit result set to products not assigned to a specific group of tag IDs.
  """
  tagIdNotIn: [Int]

  """
  Limit result set to products assigned to a specific group of tags by name.
  """
  tagIn: [String]

  """
  Limit result set to products not assigned to a specific group of tags by name.
  """
  tagNotIn: [String]

  """
  Limit result set with complex set of taxonomy filters.
  """
  taxonomyFilter: [ProductTaxonomyFilterRelationInput]

  """
  Limit result set to products assigned a specific type.
  """
  type: ProductTypesEnum

  """
  Limit result set to products assigned to a group of specific types.
  """
  typeIn: [ProductTypesEnum]

  """
  Limit result set to products not assigned to a group of specific types.
  """
  typeNotIn: [ProductTypesEnum]

  """
  Limit result set to products with a specific visibility level.
  """
  visibility: CatalogVisibilityEnum
}

"""
Connection between the SimpleProduct type and the Product type
"""
type SimpleProductToProductConnection {
  """
  Edges for the SimpleProductToProductConnection connection
  """
  edges: [SimpleProductToProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Product] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type SimpleProductToProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Product @deprecated(reason: "")
}

"""
Connection between the SimpleProduct type and the VariationAttribute type
"""
type SimpleProductToVariationAttributeConnection {
  """
  Edges for the SimpleProductToVariationAttributeConnection connection
  """
  edges: [SimpleProductToVariationAttributeConnectionEdge]
    @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [VariationAttribute] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type SimpleProductToVariationAttributeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: VariationAttribute @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum TagIdType {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The hashed Global ID
  """
  ID

  """
  The name of the node
  """
  NAME

  """
  Url friendly name of the node
  """
  SLUG

  """
  The URI for the node
  """
  URI
}

"""
Arguments for filtering the RootQueryToTagConnection connection
"""
input RootQueryToTagConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the RootQuery type and the tag type
"""
type RootQueryToTagConnection {
  """
  Edges for the RootQueryToTagConnection connection
  """
  edges: [RootQueryToTagConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Tag] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToTagConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Tag @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single Tax rate. Default is ID.
"""
enum TaxRateIdTypeEnum {
  """
  Identify a resource by the Database ID.
  """
  DATABASE_ID

  """
  Identify a resource by the (hashed) Global ID.
  """
  ID
}

"""
Arguments for filtering the RootQueryToTaxRateConnection connection
"""
input RootQueryToTaxRateConnectionWhereArgs {
  """
  Sort by tax class.
  """
  class: TaxClassEnum

  """
  What paramater to use to order the objects by.
  """
  orderby: [TaxRateConnectionOrderbyInput]

  """
  Filter results by a post code.
  """
  postCode: String

  """
  Filter results by a group of post codes.
  """
  postCodeIn: [String]
}

"""
Options for ordering the connection
"""
input TaxRateConnectionOrderbyInput {
  field: TaxRateConnectionOrderbyEnum!
  order: OrderEnum
}

"""
Field to order the connection by
"""
enum TaxRateConnectionOrderbyEnum {
  ID
  ORDER
}

"""
Connection between the RootQuery type and the TaxRate type
"""
type RootQueryToTaxRateConnection {
  """
  Edges for the RootQueryToTaxRateConnection connection
  """
  edges: [RootQueryToTaxRateConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [TaxRate] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToTaxRateConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: TaxRate @deprecated(reason: "")
}

"""
Connection between the RootQuery type and the Taxonomy type
"""
type RootQueryToTaxonomyConnection {
  """
  Edges for the RootQueryToTaxonomyConnection connection
  """
  edges: [RootQueryToTaxonomyConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Taxonomy] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToTaxonomyConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Taxonomy @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single Taxonomy node. To be used along with the "id" field. Default is "ID".
"""
enum TaxonomyIdTypeEnum {
  """
  The globally unique ID
  """
  ID

  """
  The name of the taxonomy
  """
  NAME
}

"""
The Type of Identifier used to fetch a single resource. Default is "ID". To be used along with the "id" field.
"""
enum TermNodeIdTypeEnum {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The hashed Global ID
  """
  ID

  """
  The name of the node
  """
  NAME

  """
  Url friendly name of the node
  """
  SLUG

  """
  The URI for the node
  """
  URI
}

"""
Arguments for filtering the RootQueryToTermNodeConnection connection
"""
input RootQueryToTermNodeConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  The Taxonomy to filter terms by
  """
  taxonomies: [TaxonomyEnum]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the RootQuery type and the TermNode type
"""
type RootQueryToTermNodeConnection {
  """
  Edges for the RootQueryToTermNodeConnection connection
  """
  edges: [RootQueryToTermNodeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [TermNode] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToTermNodeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: TermNode @deprecated(reason: "")
}

"""
A theme object
"""
type Theme implements Node {
  """
  Name of the theme author(s), could also be a company name. This field is equivalent to WP_Theme-&gt;get( &quot;Author&quot; ).
  """
  author: String @deprecated(reason: "")

  """
  URI for the author/company website. This field is equivalent to WP_Theme-&gt;get( &quot;AuthorURI&quot; ).
  """
  authorUri: String @deprecated(reason: "")

  """
  The description of the theme. This field is equivalent to WP_Theme-&gt;get( &quot;Description&quot; ).
  """
  description: String @deprecated(reason: "")

  """
  The globally unique identifier of the theme object.
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  Display name of the theme. This field is equivalent to WP_Theme-&gt;get( &quot;Name&quot; ).
  """
  name: String @deprecated(reason: "")

  """
  The URL of the screenshot for the theme. The screenshot is intended to give an overview of what the theme looks like. This field is equivalent to WP_Theme-&gt;get_screenshot().
  """
  screenshot: String @deprecated(reason: "")

  """
  The theme slug is used to internally match themes. Theme slugs can have subdirectories like: my-theme/sub-theme. This field is equivalent to WP_Theme-&gt;get_stylesheet().
  """
  slug: String @deprecated(reason: "")

  """
  URI for the author/company website. This field is equivalent to WP_Theme-&gt;get( &quot;Tags&quot; ).
  """
  tags: [String] @deprecated(reason: "")

  """
  A URI if the theme has a website associated with it. The Theme URI is handy for directing users to a theme site for support etc. This field is equivalent to WP_Theme-&gt;get( &quot;ThemeURI&quot; ).
  """
  themeUri: String @deprecated(reason: "")

  """
  The current version of the theme. This field is equivalent to WP_Theme-&gt;get( &quot;Version&quot; ).
  """
  version: String @deprecated(reason: "")
}

"""
Connection between the RootQuery type and the Theme type
"""
type RootQueryToThemeConnection {
  """
  Edges for the RootQueryToThemeConnection connection
  """
  edges: [RootQueryToThemeConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [Theme] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToThemeConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: Theme @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single User node. To be used along with the "id" field. Default is "ID".
"""
enum UserNodeIdTypeEnum {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The Email of the User
  """
  EMAIL

  """
  The hashed Global ID
  """
  ID

  """
  The slug of the User
  """
  SLUG

  """
  The URI for the node
  """
  URI

  """
  The username the User uses to login with
  """
  USERNAME
}

"""
Connection between the RootQuery type and the UserRole type
"""
type RootQueryToUserRoleConnection {
  """
  Edges for the RootQueryToUserRoleConnection connection
  """
  edges: [RootQueryToUserRoleConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [UserRole] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToUserRoleConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: UserRole @deprecated(reason: "")
}

"""
Arguments for filtering the RootQueryToUserConnection connection
"""
input RootQueryToUserConnectionWhereArgs {
  """
  Array of userIds to exclude.
  """
  exclude: [Int]

  """
  Pass an array of post types to filter results to users who have published posts in those post types.
  """
  hasPublishedPosts: [ContentTypeEnum]

  """
  Array of userIds to include.
  """
  include: [Int]

  """
  The user login.
  """
  login: String

  """
  An array of logins to include. Users matching one of these logins will be included in results.
  """
  loginIn: [String]

  """
  An array of logins to exclude. Users matching one of these logins will not be included in results.
  """
  loginNotIn: [String]

  """
  The user nicename.
  """
  nicename: String

  """
  An array of nicenames to include. Users matching one of these nicenames will be included in results.
  """
  nicenameIn: [String]

  """
  An array of nicenames to exclude. Users matching one of these nicenames will not be included in results.
  """
  nicenameNotIn: [String]

  """
  What paramater to use to order the objects by.
  """
  orderby: [UsersConnectionOrderbyInput]

  """
  An array of role names that users must match to be included in results. Note that this is an inclusive list: users must match *each* role.
  """
  role: UserRoleEnum

  """
  An array of role names. Matched users must have at least one of these roles.
  """
  roleIn: [UserRoleEnum]

  """
  An array of role names to exclude. Users matching one or more of these roles will not be included in results.
  """
  roleNotIn: [UserRoleEnum]

  """
  Search keyword. Searches for possible string matches on columns. When "searchColumns" is left empty, it tries to determine which column to search in based on search string.
  """
  search: String

  """
  Array of column names to be searched. Accepts 'ID', 'login', 'nicename', 'email', 'url'.
  """
  searchColumns: [String]
}

"""
Options for ordering the connection
"""
input UsersConnectionOrderbyInput {
  field: UsersConnectionOrderbyEnum!
  order: OrderEnum
}

"""
Field to order the connection by
"""
enum UsersConnectionOrderbyEnum {
  """
  Order by display name
  """
  DISPLAY_NAME

  """
  Order by email address
  """
  EMAIL

  """
  Order by login
  """
  LOGIN

  """
  Preserve the login order given in the LOGIN_IN array
  """
  LOGIN_IN

  """
  Order by nice name
  """
  NICE_NAME

  """
  Preserve the nice name order given in the NICE_NAME_IN array
  """
  NICE_NAME_IN

  """
  Order by registration date
  """
  REGISTERED

  """
  Order by URL
  """
  URL
}

"""
Connection between the RootQuery type and the User type
"""
type RootQueryToUserConnection {
  """
  Edges for the RootQueryToUserConnection connection
  """
  edges: [RootQueryToUserConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [User] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToUserConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: User @deprecated(reason: "")
}

"""
The Type of Identifier used to fetch a single resource. Default is ID.
"""
enum VisibleProductIdType {
  """
  The Database ID for the node
  """
  DATABASE_ID

  """
  The hashed Global ID
  """
  ID

  """
  The name of the node
  """
  NAME

  """
  Url friendly name of the node
  """
  SLUG

  """
  The URI for the node
  """
  URI
}

"""
Arguments for filtering the RootQueryToVisibleProductConnection connection
"""
input RootQueryToVisibleProductConnectionWhereArgs {
  """
  Unique cache key to be produced when this query is stored in an object cache. Default is 'core'.
  """
  cacheDomain: String

  """
  Term ID to retrieve child terms of. If multiple taxonomies are passed, $child_of is ignored. Default 0.
  """
  childOf: Int

  """
  True to limit results to terms that have no children. This parameter has no effect on non-hierarchical taxonomies. Default false.
  """
  childless: Boolean

  """
  Retrieve terms where the description is LIKE the input value. Default empty.
  """
  descriptionLike: String

  """
  Array of term ids to exclude. If $include is non-empty, $exclude is ignored. Default empty array.
  """
  exclude: [ID]

  """
  Array of term ids to exclude along with all of their descendant terms. If $include is non-empty, $exclude_tree is ignored. Default empty array.
  """
  excludeTree: [ID]

  """
  Whether to hide terms not assigned to any posts. Accepts true or false. Default false
  """
  hideEmpty: Boolean

  """
  Whether to include terms that have non-empty descendants (even if $hide_empty is set to true). Default true.
  """
  hierarchical: Boolean

  """
  Array of term ids to include. Default empty array.
  """
  include: [ID]

  """
  Array of names to return term(s) for. Default empty.
  """
  name: [String]

  """
  Retrieve terms where the name is LIKE the input value. Default empty.
  """
  nameLike: String

  """
  Array of object IDs. Results will be limited to terms associated with these objects.
  """
  objectIds: [ID]

  """
  Field(s) to order terms by. Defaults to 'name'.
  """
  orderby: TermObjectsConnectionOrderbyEnum

  """
  Whether to pad the quantity of a term's children in the quantity of each term's "count" object variable. Default false.
  """
  padCounts: Boolean

  """
  Parent term ID to retrieve direct-child terms of. Default empty.
  """
  parent: Int

  """
  Search criteria to match terms. Will be SQL-formatted with wildcards before and after. Default empty.
  """
  search: String

  """
  Array of slugs to return term(s) for. Default empty.
  """
  slug: [String]

  """
  Array of term taxonomy IDs, to match when querying terms.
  """
  termTaxonomId: [ID]

  """
  Whether to prime meta caches for matched terms. Default true.
  """
  updateTermMetaCache: Boolean
}

"""
Connection between the RootQuery type and the visibleProduct type
"""
type RootQueryToVisibleProductConnection {
  """
  Edges for the RootQueryToVisibleProductConnection connection
  """
  edges: [RootQueryToVisibleProductConnectionEdge] @deprecated(reason: "")

  """
  The nodes of the connection, without the edges
  """
  nodes: [VisibleProduct] @deprecated(reason: "")

  """
  Information about pagination in a connection.
  """
  pageInfo: WPPageInfo @deprecated(reason: "")
}

"""
An edge in a connection
"""
type RootQueryToVisibleProductConnectionEdge {
  """
  A cursor for use in pagination
  """
  cursor: String @deprecated(reason: "")

  """
  The item at the end of the edge
  """
  node: VisibleProduct @deprecated(reason: "")
}

"""
The writing setting type
"""
type WritingSettings {
  """
  Default post category.
  """
  defaultCategory: Int @deprecated(reason: "")

  """
  Default post format.
  """
  defaultPostFormat: String @deprecated(reason: "")

  """
  Convert emoticons like :-) and :-P to graphics on display.
  """
  useSmilies: Boolean @deprecated(reason: "")
}

"""
The root mutation
"""
type RootMutation {
  """
  The payload for the UpdateCategory mutation
  """
  updateCategory(
    """
    Input for the UpdateCategory mutation
    """
    input: UpdateCategoryInput!
  ): UpdateCategoryPayload @deprecated(reason: "")

  """
  The payload for the UpdatePostFormat mutation
  """
  updatePostFormat(
    """
    Input for the UpdatePostFormat mutation
    """
    input: UpdatePostFormatInput!
  ): UpdatePostFormatPayload @deprecated(reason: "")

  """
  The payload for the UpdateProductCategory mutation
  """
  updateProductCategory(
    """
    Input for the UpdateProductCategory mutation
    """
    input: UpdateProductCategoryInput!
  ): UpdateProductCategoryPayload @deprecated(reason: "")

  """
  The payload for the UpdateProductTag mutation
  """
  updateProductTag(
    """
    Input for the UpdateProductTag mutation
    """
    input: UpdateProductTagInput!
  ): UpdateProductTagPayload @deprecated(reason: "")

  """
  The payload for the UpdateProductType mutation
  """
  updateProductType(
    """
    Input for the UpdateProductType mutation
    """
    input: UpdateProductTypeInput!
  ): UpdateProductTypePayload @deprecated(reason: "")

  """
  The payload for the UpdateShippingClass mutation
  """
  updateShippingClass(
    """
    Input for the UpdateShippingClass mutation
    """
    input: UpdateShippingClassInput!
  ): UpdateShippingClassPayload @deprecated(reason: "")

  """
  The payload for the UpdateTag mutation
  """
  updateTag(
    """
    Input for the UpdateTag mutation
    """
    input: UpdateTagInput!
  ): UpdateTagPayload @deprecated(reason: "")

  """
  The payload for the UpdateVisibleProduct mutation
  """
  updateVisibleProduct(
    """
    Input for the UpdateVisibleProduct mutation
    """
    input: UpdateVisibleProductInput!
  ): UpdateVisibleProductPayload @deprecated(reason: "")

  """
  The payload for the addFee mutation
  """
  addFee(
    """
    Input for the addFee mutation
    """
    input: AddFeeInput!
  ): AddFeePayload @deprecated(reason: "")

  """
  The payload for the addToCart mutation
  """
  addToCart(
    """
    Input for the addToCart mutation
    """
    input: AddToCartInput!
  ): AddToCartPayload @deprecated(reason: "")

  """
  The payload for the applyCoupon mutation
  """
  applyCoupon(
    """
    Input for the applyCoupon mutation
    """
    input: ApplyCouponInput!
  ): ApplyCouponPayload @deprecated(reason: "")

  """
  The payload for the checkout mutation
  """
  checkout(
    """
    Input for the checkout mutation
    """
    input: CheckoutInput!
  ): CheckoutPayload @deprecated(reason: "")

  """
  The payload for the createCategory mutation
  """
  createCategory(
    """
    Input for the createCategory mutation
    """
    input: CreateCategoryInput!
  ): CreateCategoryPayload @deprecated(reason: "")

  """
  The payload for the createComment mutation
  """
  createComment(
    """
    Input for the createComment mutation
    """
    input: CreateCommentInput!
  ): CreateCommentPayload @deprecated(reason: "")

  """
  The payload for the createMediaItem mutation
  """
  createMediaItem(
    """
    Input for the createMediaItem mutation
    """
    input: CreateMediaItemInput!
  ): CreateMediaItemPayload @deprecated(reason: "")

  """
  The payload for the createOrder mutation
  """
  createOrder(
    """
    Input for the createOrder mutation
    """
    input: CreateOrderInput!
  ): CreateOrderPayload @deprecated(reason: "")

  """
  The payload for the createPage mutation
  """
  createPage(
    """
    Input for the createPage mutation
    """
    input: CreatePageInput!
  ): CreatePagePayload @deprecated(reason: "")

  """
  The payload for the createPost mutation
  """
  createPost(
    """
    Input for the createPost mutation
    """
    input: CreatePostInput!
  ): CreatePostPayload @deprecated(reason: "")

  """
  The payload for the createPostFormat mutation
  """
  createPostFormat(
    """
    Input for the createPostFormat mutation
    """
    input: CreatePostFormatInput!
  ): CreatePostFormatPayload @deprecated(reason: "")

  """
  The payload for the createProductCategory mutation
  """
  createProductCategory(
    """
    Input for the createProductCategory mutation
    """
    input: CreateProductCategoryInput!
  ): CreateProductCategoryPayload @deprecated(reason: "")

  """
  The payload for the createProductTag mutation
  """
  createProductTag(
    """
    Input for the createProductTag mutation
    """
    input: CreateProductTagInput!
  ): CreateProductTagPayload @deprecated(reason: "")

  """
  The payload for the createProductType mutation
  """
  createProductType(
    """
    Input for the createProductType mutation
    """
    input: CreateProductTypeInput!
  ): CreateProductTypePayload @deprecated(reason: "")

  """
  The payload for the createShippingClass mutation
  """
  createShippingClass(
    """
    Input for the createShippingClass mutation
    """
    input: CreateShippingClassInput!
  ): CreateShippingClassPayload @deprecated(reason: "")

  """
  The payload for the createTag mutation
  """
  createTag(
    """
    Input for the createTag mutation
    """
    input: CreateTagInput!
  ): CreateTagPayload @deprecated(reason: "")

  """
  The payload for the createUser mutation
  """
  createUser(
    """
    Input for the createUser mutation
    """
    input: CreateUserInput!
  ): CreateUserPayload @deprecated(reason: "")

  """
  The payload for the createVisibleProduct mutation
  """
  createVisibleProduct(
    """
    Input for the createVisibleProduct mutation
    """
    input: CreateVisibleProductInput!
  ): CreateVisibleProductPayload @deprecated(reason: "")

  """
  The payload for the deleteCategory mutation
  """
  deleteCategory(
    """
    Input for the deleteCategory mutation
    """
    input: DeleteCategoryInput!
  ): DeleteCategoryPayload @deprecated(reason: "")

  """
  The payload for the deleteComment mutation
  """
  deleteComment(
    """
    Input for the deleteComment mutation
    """
    input: DeleteCommentInput!
  ): DeleteCommentPayload @deprecated(reason: "")

  """
  The payload for the deleteMediaItem mutation
  """
  deleteMediaItem(
    """
    Input for the deleteMediaItem mutation
    """
    input: DeleteMediaItemInput!
  ): DeleteMediaItemPayload @deprecated(reason: "")

  """
  The payload for the deleteOrder mutation
  """
  deleteOrder(
    """
    Input for the deleteOrder mutation
    """
    input: DeleteOrderInput!
  ): DeleteOrderPayload @deprecated(reason: "")

  """
  The payload for the deleteOrderItems mutation
  """
  deleteOrderItems(
    """
    Input for the deleteOrderItems mutation
    """
    input: DeleteOrderItemsInput!
  ): DeleteOrderItemsPayload @deprecated(reason: "")

  """
  The payload for the deletePage mutation
  """
  deletePage(
    """
    Input for the deletePage mutation
    """
    input: DeletePageInput!
  ): DeletePagePayload @deprecated(reason: "")

  """
  The payload for the deletePost mutation
  """
  deletePost(
    """
    Input for the deletePost mutation
    """
    input: DeletePostInput!
  ): DeletePostPayload @deprecated(reason: "")

  """
  The payload for the deletePostFormat mutation
  """
  deletePostFormat(
    """
    Input for the deletePostFormat mutation
    """
    input: DeletePostFormatInput!
  ): DeletePostFormatPayload @deprecated(reason: "")

  """
  The payload for the deleteProductCategory mutation
  """
  deleteProductCategory(
    """
    Input for the deleteProductCategory mutation
    """
    input: DeleteProductCategoryInput!
  ): DeleteProductCategoryPayload @deprecated(reason: "")

  """
  The payload for the deleteProductTag mutation
  """
  deleteProductTag(
    """
    Input for the deleteProductTag mutation
    """
    input: DeleteProductTagInput!
  ): DeleteProductTagPayload @deprecated(reason: "")

  """
  The payload for the deleteProductType mutation
  """
  deleteProductType(
    """
    Input for the deleteProductType mutation
    """
    input: DeleteProductTypeInput!
  ): DeleteProductTypePayload @deprecated(reason: "")

  """
  The payload for the deleteReview mutation
  """
  deleteReview(
    """
    Input for the deleteReview mutation
    """
    input: DeleteReviewInput!
  ): DeleteReviewPayload @deprecated(reason: "")

  """
  The payload for the deleteShippingClass mutation
  """
  deleteShippingClass(
    """
    Input for the deleteShippingClass mutation
    """
    input: DeleteShippingClassInput!
  ): DeleteShippingClassPayload @deprecated(reason: "")

  """
  The payload for the deleteTag mutation
  """
  deleteTag(
    """
    Input for the deleteTag mutation
    """
    input: DeleteTagInput!
  ): DeleteTagPayload @deprecated(reason: "")

  """
  The payload for the deleteUser mutation
  """
  deleteUser(
    """
    Input for the deleteUser mutation
    """
    input: DeleteUserInput!
  ): DeleteUserPayload @deprecated(reason: "")

  """
  The payload for the deleteVisibleProduct mutation
  """
  deleteVisibleProduct(
    """
    Input for the deleteVisibleProduct mutation
    """
    input: DeleteVisibleProductInput!
  ): DeleteVisibleProductPayload @deprecated(reason: "")

  """
  The payload for the emptyCart mutation
  """
  emptyCart(
    """
    Input for the emptyCart mutation
    """
    input: EmptyCartInput!
  ): EmptyCartPayload @deprecated(reason: "")

  """
  """
  increaseCount(
    """
    The count to increase
    """
    count: Int
  ): Int @deprecated(reason: "")

  """
  The payload for the registerCustomer mutation
  """
  registerCustomer(
    """
    Input for the registerCustomer mutation
    """
    input: RegisterCustomerInput!
  ): RegisterCustomerPayload @deprecated(reason: "")

  """
  The payload for the registerUser mutation
  """
  registerUser(
    """
    Input for the registerUser mutation
    """
    input: RegisterUserInput!
  ): RegisterUserPayload @deprecated(reason: "")

  """
  The payload for the removeCoupons mutation
  """
  removeCoupons(
    """
    Input for the removeCoupons mutation
    """
    input: RemoveCouponsInput!
  ): RemoveCouponsPayload @deprecated(reason: "")

  """
  The payload for the removeItemsFromCart mutation
  """
  removeItemsFromCart(
    """
    Input for the removeItemsFromCart mutation
    """
    input: RemoveItemsFromCartInput!
  ): RemoveItemsFromCartPayload @deprecated(reason: "")

  """
  The payload for the resetUserPassword mutation
  """
  resetUserPassword(
    """
    Input for the resetUserPassword mutation
    """
    input: ResetUserPasswordInput!
  ): ResetUserPasswordPayload @deprecated(reason: "")

  """
  The payload for the restoreCartItems mutation
  """
  restoreCartItems(
    """
    Input for the restoreCartItems mutation
    """
    input: RestoreCartItemsInput!
  ): RestoreCartItemsPayload @deprecated(reason: "")

  """
  The payload for the restoreComment mutation
  """
  restoreComment(
    """
    Input for the restoreComment mutation
    """
    input: RestoreCommentInput!
  ): RestoreCommentPayload @deprecated(reason: "")

  """
  The payload for the restoreReview mutation
  """
  restoreReview(
    """
    Input for the restoreReview mutation
    """
    input: RestoreReviewInput!
  ): RestoreReviewPayload @deprecated(reason: "")

  """
  The payload for the sendPasswordResetEmail mutation
  """
  sendPasswordResetEmail(
    """
    Input for the sendPasswordResetEmail mutation
    """
    input: SendPasswordResetEmailInput!
  ): SendPasswordResetEmailPayload @deprecated(reason: "")

  """
  The payload for the updateComment mutation
  """
  updateComment(
    """
    Input for the updateComment mutation
    """
    input: UpdateCommentInput!
  ): UpdateCommentPayload @deprecated(reason: "")

  """
  The payload for the updateCustomer mutation
  """
  updateCustomer(
    """
    Input for the updateCustomer mutation
    """
    input: UpdateCustomerInput!
  ): UpdateCustomerPayload @deprecated(reason: "")

  """
  The payload for the updateItemQuantities mutation
  """
  updateItemQuantities(
    """
    Input for the updateItemQuantities mutation
    """
    input: UpdateItemQuantitiesInput!
  ): UpdateItemQuantitiesPayload @deprecated(reason: "")

  """
  The payload for the updateMediaItem mutation
  """
  updateMediaItem(
    """
    Input for the updateMediaItem mutation
    """
    input: UpdateMediaItemInput!
  ): UpdateMediaItemPayload @deprecated(reason: "")

  """
  The payload for the updateOrder mutation
  """
  updateOrder(
    """
    Input for the updateOrder mutation
    """
    input: UpdateOrderInput!
  ): UpdateOrderPayload @deprecated(reason: "")

  """
  The payload for the updatePage mutation
  """
  updatePage(
    """
    Input for the updatePage mutation
    """
    input: UpdatePageInput!
  ): UpdatePagePayload @deprecated(reason: "")

  """
  The payload for the updatePost mutation
  """
  updatePost(
    """
    Input for the updatePost mutation
    """
    input: UpdatePostInput!
  ): UpdatePostPayload @deprecated(reason: "")

  """
  The payload for the updateReview mutation
  """
  updateReview(
    """
    Input for the updateReview mutation
    """
    input: UpdateReviewInput!
  ): UpdateReviewPayload @deprecated(reason: "")

  """
  The payload for the updateSettings mutation
  """
  updateSettings(
    """
    Input for the updateSettings mutation
    """
    input: UpdateSettingsInput!
  ): UpdateSettingsPayload @deprecated(reason: "")

  """
  The payload for the updateShippingMethod mutation
  """
  updateShippingMethod(
    """
    Input for the updateShippingMethod mutation
    """
    input: UpdateShippingMethodInput!
  ): UpdateShippingMethodPayload @deprecated(reason: "")

  """
  The payload for the updateUser mutation
  """
  updateUser(
    """
    Input for the updateUser mutation
    """
    input: UpdateUserInput!
  ): UpdateUserPayload @deprecated(reason: "")

  """
  The payload for the writeReview mutation
  """
  writeReview(
    """
    Input for the writeReview mutation
    """
    input: WriteReviewInput!
  ): WriteReviewPayload @deprecated(reason: "")
}

"""
Input for the UpdateCategory mutation
"""
input UpdateCategoryInput {
  """
  The slug that the category will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the category object
  """
  description: String

  """
  The ID of the category object to update
  """
  id: ID!

  """
  The name of the category object to mutate
  """
  name: String

  """
  The ID of the category that should be set as the parent
  """
  parentId: ID

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the UpdateCategory mutation
"""
type UpdateCategoryPayload {
  """
  The created category
  """
  category: Category @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the UpdatePostFormat mutation
"""
input UpdatePostFormatInput {
  """
  The slug that the post_format will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the post_format object
  """
  description: String

  """
  The ID of the postFormat object to update
  """
  id: ID!

  """
  The name of the post_format object to mutate
  """
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the UpdatePostFormat mutation
"""
type UpdatePostFormatPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created post_format
  """
  postFormat: PostFormat @deprecated(reason: "")
}

"""
Input for the UpdateProductCategory mutation
"""
input UpdateProductCategoryInput {
  """
  The slug that the product_cat will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_cat object
  """
  description: String

  """
  The ID of the productCategory object to update
  """
  id: ID!

  """
  The name of the product_cat object to mutate
  """
  name: String

  """
  The ID of the product_cat that should be set as the parent
  """
  parentId: ID

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the UpdateProductCategory mutation
"""
type UpdateProductCategoryPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_cat
  """
  productCategory: ProductCategory @deprecated(reason: "")
}

"""
Input for the UpdateProductTag mutation
"""
input UpdateProductTagInput {
  """
  The slug that the product_tag will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_tag object
  """
  description: String

  """
  The ID of the productTag object to update
  """
  id: ID!

  """
  The name of the product_tag object to mutate
  """
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the UpdateProductTag mutation
"""
type UpdateProductTagPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_tag
  """
  productTag: ProductTag @deprecated(reason: "")
}

"""
Input for the UpdateProductType mutation
"""
input UpdateProductTypeInput {
  """
  The slug that the product_type will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_type object
  """
  description: String

  """
  The ID of the productType object to update
  """
  id: ID!

  """
  The name of the product_type object to mutate
  """
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the UpdateProductType mutation
"""
type UpdateProductTypePayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_type
  """
  productType: ProductType @deprecated(reason: "")
}

"""
Input for the UpdateShippingClass mutation
"""
input UpdateShippingClassInput {
  """
  The slug that the product_shipping_class will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_shipping_class object
  """
  description: String

  """
  The ID of the shippingClass object to update
  """
  id: ID!

  """
  The name of the product_shipping_class object to mutate
  """
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the UpdateShippingClass mutation
"""
type UpdateShippingClassPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_shipping_class
  """
  shippingClass: ShippingClass @deprecated(reason: "")
}

"""
Input for the UpdateTag mutation
"""
input UpdateTagInput {
  """
  The slug that the post_tag will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the post_tag object
  """
  description: String

  """
  The ID of the tag object to update
  """
  id: ID!

  """
  The name of the post_tag object to mutate
  """
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the UpdateTag mutation
"""
type UpdateTagPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created post_tag
  """
  tag: Tag @deprecated(reason: "")
}

"""
Input for the UpdateVisibleProduct mutation
"""
input UpdateVisibleProductInput {
  """
  The slug that the product_visibility will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_visibility object
  """
  description: String

  """
  The ID of the visibleProduct object to update
  """
  id: ID!

  """
  The name of the product_visibility object to mutate
  """
  name: String

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the UpdateVisibleProduct mutation
"""
type UpdateVisibleProductPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_visibility
  """
  visibleProduct: VisibleProduct @deprecated(reason: "")
}

"""
Input for the addFee mutation
"""
input AddFeeInput {
  """
  Fee amount
  """
  amount: Float
  clientMutationId: String!

  """
  Unique name for the fee.
  """
  name: String!

  """
  The tax class for the fee if taxable.
  """
  taxClass: TaxClassEnum

  """
  Is the fee taxable?
  """
  taxable: Boolean
}

"""
The payload for the addFee mutation
"""
type AddFeePayload {
  """
  """
  cart: Cart @deprecated(reason: "")

  """
  """
  cartFee: CartFee @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the addToCart mutation
"""
input AddToCartInput {
  clientMutationId: String!

  """
  JSON string representation of extra cart item data
  """
  extraData: String

  """
  Cart item product database ID or global ID
  """
  productId: Int!

  """
  Cart item quantity
  """
  quantity: Int

  """
  Cart item product variation attributes
  """
  variation: [ProductAttributeInput]

  """
  Cart item product variation database ID or global ID
  """
  variationId: Int
}

"""
Options for ordering the connection
"""
input ProductAttributeInput {
  attribute: String!
  attributeTerm: String!
}

"""
The payload for the addToCart mutation
"""
type AddToCartPayload {
  """
  """
  cart: Cart @deprecated(reason: "")

  """
  """
  cartItem: CartItem @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the applyCoupon mutation
"""
input ApplyCouponInput {
  clientMutationId: String!

  """
  Code of coupon being applied
  """
  code: String!
}

"""
The payload for the applyCoupon mutation
"""
type ApplyCouponPayload {
  """
  """
  cart: Cart @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the checkout mutation
"""
input CheckoutInput {
  """
  Create new customer account
  """
  account: CreateAccountInput

  """
  Order billing address
  """
  billing: CustomerAddressInput
  clientMutationId: String!

  """
  Order customer note
  """
  customerNote: String

  """
  Define if the order is paid. It will set the status to processing and reduce stock items.
  """
  isPaid: Boolean

  """
  Order meta data
  """
  metaData: [MetaDataInput]

  """
  Payment method ID.
  """
  paymentMethod: String

  """
  Ship to a separate address
  """
  shipToDifferentAddress: Boolean

  """
  Order shipping address
  """
  shipping: CustomerAddressInput

  """
  Order shipping method
  """
  shippingMethod: [String]

  """
  Order transaction ID
  """
  transactionId: String
}

"""
Customer account credentials
"""
input CreateAccountInput {
  """
  Customer password
  """
  password: String!

  """
  Customer username
  """
  username: String!
}

"""
Customer address information
"""
input CustomerAddressInput {
  """
  Address 1
  """
  address1: String

  """
  Address 2
  """
  address2: String

  """
  City
  """
  city: String

  """
  Company
  """
  company: String

  """
  Country
  """
  country: CountriesEnum

  """
  E-mail
  """
  email: String

  """
  First name
  """
  firstName: String

  """
  Last name
  """
  lastName: String

  """
  Clear old address data
  """
  overwrite: Boolean

  """
  Phone
  """
  phone: String

  """
  Zip Postal Code
  """
  postcode: String

  """
  State
  """
  state: String
}

"""
Meta data.
"""
input MetaDataInput {
  """
  Meta key.
  """
  key: String!

  """
  Meta value.
  """
  value: String!
}

"""
The payload for the checkout mutation
"""
type CheckoutPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  customer: Customer @deprecated(reason: "")

  """
  """
  order: Order @deprecated(reason: "")

  """
  """
  redirect: String @deprecated(reason: "")

  """
  """
  result: String @deprecated(reason: "")
}

"""
Input for the createCategory mutation
"""
input CreateCategoryInput {
  """
  The slug that the category will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the category object
  """
  description: String

  """
  The name of the category object to mutate
  """
  name: String!

  """
  The ID of the category that should be set as the parent
  """
  parentId: ID

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the createCategory mutation
"""
type CreateCategoryPayload {
  """
  The created category
  """
  category: Category @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the createComment mutation
"""
input CreateCommentInput {
  """
  User agent used to post the comment.
  """
  agent: String

  """
  The approval status of the comment.
  """
  approved: String

  """
  The name of the comment's author.
  """
  author: String

  """
  The email of the comment's author.
  """
  authorEmail: String

  """
  IP address for the comment's author.
  """
  authorIp: String

  """
  The url of the comment's author.
  """
  authorUrl: String
  clientMutationId: String!

  """
  The ID of the post object the comment belongs to.
  """
  commentOn: Int

  """
  Content of the comment.
  """
  content: String

  """
  The date of the object. Preferable to enter as year/month/day ( e.g. 01/31/2017 ) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17
  """
  date: String

  """
  Parent comment of current comment.
  """
  parent: ID

  """
  Type of comment.
  """
  type: String

  """
  The userID of the comment's author.
  """
  userId: Int
}

"""
The payload for the createComment mutation
"""
type CreateCommentPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The comment that was created
  """
  comment: Comment @deprecated(reason: "")

  """
  Whether the mutation succeeded. If the comment is not approved, the server will not return the comment to a non authenticated user, but a success message can be returned if the create succeeded, and the client can optimistically add the comment to the client cache
  """
  success: Boolean @deprecated(reason: "")
}

"""
Input for the createMediaItem mutation
"""
input CreateMediaItemInput {
  """
  Alternative text to display when mediaItem is not displayed
  """
  altText: String

  """
  The userId to assign as the author of the mediaItem
  """
  authorId: ID

  """
  The caption for the mediaItem
  """
  caption: String
  clientMutationId: String!

  """
  The comment status for the mediaItem
  """
  commentStatus: String

  """
  The date of the mediaItem
  """
  date: String

  """
  The date (in GMT zone) of the mediaItem
  """
  dateGmt: String

  """
  Description of the mediaItem
  """
  description: String

  """
  The file name of the mediaItem
  """
  filePath: String

  """
  The file type of the mediaItem
  """
  fileType: MimeTypeEnum

  """
  The WordPress post ID or the graphQL postId of the parent object
  """
  parentId: ID

  """
  The ping status for the mediaItem
  """
  pingStatus: String

  """
  The slug of the mediaItem
  """
  slug: String

  """
  The status of the mediaItem
  """
  status: MediaItemStatusEnum

  """
  The title of the mediaItem
  """
  title: String
}

"""
The status of the media item object.
"""
enum MediaItemStatusEnum {
  """
  Objects with the auto-draft status
  """
  AUTO_DRAFT

  """
  Objects with the inherit status
  """
  INHERIT

  """
  Objects with the private status
  """
  PRIVATE

  """
  Objects with the trash status
  """
  TRASH
}

"""
The payload for the createMediaItem mutation
"""
type CreateMediaItemPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  mediaItem: MediaItem @deprecated(reason: "")
}

"""
Input for the createOrder mutation
"""
input CreateOrderInput {
  """
  Order billing address
  """
  billing: CustomerAddressInput
  clientMutationId: String!

  """
  Coupons codes to be applied to order
  """
  coupons: [String]

  """
  Currency the order was created with, in ISO format.
  """
  currency: String

  """
  Order customer ID
  """
  customerId: Int

  """
  Note left by customer during checkout.
  """
  customerNote: String

  """
  Order shipping lines
  """
  feeLines: [FeeLineInput]

  """
  Define if the order is paid. It will set the status to processing and reduce stock items.
  """
  isPaid: Boolean

  """
  Order line items
  """
  lineItems: [LineItemInput]

  """
  Order meta data
  """
  metaData: [MetaDataInput]

  """
  Parent order ID.
  """
  parentId: Int

  """
  Payment method ID.
  """
  paymentMethod: String

  """
  Payment method title.
  """
  paymentMethodTitle: String

  """
  Order shipping address
  """
  shipping: CustomerAddressInput

  """
  Order shipping lines
  """
  shippingLines: [ShippingLineInput]

  """
  Order status
  """
  status: OrderStatusEnum

  """
  Order transaction ID
  """
  transactionId: String
}

"""
Fee line data.
"""
input FeeLineInput {
  """
  Fee amount.
  """
  amount: String

  """
  Fee Line ID
  """
  id: ID

  """
  Fee name.
  """
  name: String

  """
  Tax class of fee.
  """
  taxClass: TaxClassEnum

  """
  Tax status of fee.
  """
  taxStatus: TaxStatusEnum

  """
  Line total (after discounts).
  """
  total: String
}

"""
Meta data.
"""
input LineItemInput {
  """
  Line Item ID
  """
  id: ID

  """
  Meta data.
  """
  metaData: [MetaDataInput]

  """
  Line name
  """
  name: String

  """
  Product ID.
  """
  productId: Int

  """
  Quantity ordered.
  """
  quantity: Int

  """
  Product SKU.
  """
  sku: String

  """
  Line subtotal (before discounts).
  """
  subtotal: String

  """
  Tax class of product.
  """
  taxClass: TaxClassEnum

  """
  Line total (after discounts).
  """
  total: String

  """
  Variation ID, if applicable.
  """
  variationId: Int
}

"""
Shipping lines data.
"""
input ShippingLineInput {
  """
  Shipping Line ID
  """
  id: ID

  """
  Shipping instance ID.
  """
  instanceId: String

  """
  Meta data.
  """
  metaData: [MetaDataInput]

  """
  Shipping method ID.
  """
  methodId: String!

  """
  Shipping method name.
  """
  methodTitle: String!

  """
  Line total (after discounts).
  """
  total: String!
}

"""
The payload for the createOrder mutation
"""
type CreateOrderPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  order: Order @deprecated(reason: "")
}

"""
Input for the createPage mutation
"""
input CreatePageInput {
  """
  The userId to assign as the author of the object
  """
  authorId: ID
  clientMutationId: String!

  """
  The comment status for the object
  """
  commentStatus: String

  """
  The content of the object
  """
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17
  """
  date: String

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """
  The ID of the parent object
  """
  parentId: ID

  """
  The password used to protect the content of the object
  """
  password: String

  """
  The slug of the object
  """
  slug: String

  """
  The status of the object
  """
  status: PostStatusEnum

  """
  The title of the object
  """
  title: String
}

"""
The payload for the createPage mutation
"""
type CreatePagePayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  page: Page @deprecated(reason: "")
}

"""
Input for the createPost mutation
"""
input CreatePostInput {
  """
  The userId to assign as the author of the object
  """
  authorId: ID

  """
  Set connections between the post and categories
  """
  categories: PostCategoriesInput
  clientMutationId: String!

  """
  The comment status for the object
  """
  commentStatus: String

  """
  The content of the object
  """
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17
  """
  date: String

  """
  The excerpt of the object
  """
  excerpt: String

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """
  The password used to protect the content of the object
  """
  password: String

  """
  The ping status for the object
  """
  pingStatus: String

  """
  URLs that have been pinged.
  """
  pinged: [String]

  """
  Set connections between the post and postFormats
  """
  postFormats: PostPostFormatsInput

  """
  The slug of the object
  """
  slug: String

  """
  The status of the object
  """
  status: PostStatusEnum

  """
  Set connections between the post and tags
  """
  tags: PostTagsInput

  """
  The title of the object
  """
  title: String

  """
  URLs queued to be pinged.
  """
  toPing: [String]
}

"""
Set relationships between the post to categories
"""
input PostCategoriesInput {
  """
  If true, this will append the category to existing related categories. If false, this will replace existing relationships. Default true.
  """
  append: Boolean
  nodes: [PostCategoriesNodeInput]
}

"""
List of categories to connect the post to. If an ID is set, it will be used to create the connection. If not, it will look for a slug. If neither are valid existing terms, and the site is configured to allow terms to be created during post mutations, a term will be created using the Name if it exists in the input, then fallback to the slug if it exists.
"""
input PostCategoriesNodeInput {
  """
  The description of the category. This field is used to set a description of the category if a new one is created during the mutation.
  """
  description: String

  """
  The ID of the category. If present, this will be used to connect to the post. If no existing category exists with this ID, no connection will be made.
  """
  id: ID

  """
  The name of the category. This field is used to create a new term, if term creation is enabled in nested mutations, and if one does not already exist with the provided slug or ID or if a slug or ID is not provided. If no name is included and a term is created, the creation will fallback to the slug field.
  """
  name: String

  """
  The slug of the category. If no ID is present, this field will be used to make a connection. If no existing term exists with this slug, this field will be used as a fallback to the Name field when creating a new term to connect to, if term creation is enabled as a nested mutation.
  """
  slug: String
}

"""
Set relationships between the post to postFormats
"""
input PostPostFormatsInput {
  """
  If true, this will append the postFormat to existing related postFormats. If false, this will replace existing relationships. Default true.
  """
  append: Boolean
  nodes: [PostPostFormatsNodeInput]
}

"""
List of postFormats to connect the post to. If an ID is set, it will be used to create the connection. If not, it will look for a slug. If neither are valid existing terms, and the site is configured to allow terms to be created during post mutations, a term will be created using the Name if it exists in the input, then fallback to the slug if it exists.
"""
input PostPostFormatsNodeInput {
  """
  The description of the postFormat. This field is used to set a description of the postFormat if a new one is created during the mutation.
  """
  description: String

  """
  The ID of the postFormat. If present, this will be used to connect to the post. If no existing postFormat exists with this ID, no connection will be made.
  """
  id: ID

  """
  The name of the postFormat. This field is used to create a new term, if term creation is enabled in nested mutations, and if one does not already exist with the provided slug or ID or if a slug or ID is not provided. If no name is included and a term is created, the creation will fallback to the slug field.
  """
  name: String

  """
  The slug of the postFormat. If no ID is present, this field will be used to make a connection. If no existing term exists with this slug, this field will be used as a fallback to the Name field when creating a new term to connect to, if term creation is enabled as a nested mutation.
  """
  slug: String
}

"""
Set relationships between the post to tags
"""
input PostTagsInput {
  """
  If true, this will append the tag to existing related tags. If false, this will replace existing relationships. Default true.
  """
  append: Boolean
  nodes: [PostTagsNodeInput]
}

"""
List of tags to connect the post to. If an ID is set, it will be used to create the connection. If not, it will look for a slug. If neither are valid existing terms, and the site is configured to allow terms to be created during post mutations, a term will be created using the Name if it exists in the input, then fallback to the slug if it exists.
"""
input PostTagsNodeInput {
  """
  The description of the tag. This field is used to set a description of the tag if a new one is created during the mutation.
  """
  description: String

  """
  The ID of the tag. If present, this will be used to connect to the post. If no existing tag exists with this ID, no connection will be made.
  """
  id: ID

  """
  The name of the tag. This field is used to create a new term, if term creation is enabled in nested mutations, and if one does not already exist with the provided slug or ID or if a slug or ID is not provided. If no name is included and a term is created, the creation will fallback to the slug field.
  """
  name: String

  """
  The slug of the tag. If no ID is present, this field will be used to make a connection. If no existing term exists with this slug, this field will be used as a fallback to the Name field when creating a new term to connect to, if term creation is enabled as a nested mutation.
  """
  slug: String
}

"""
The payload for the createPost mutation
"""
type CreatePostPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  post: Post @deprecated(reason: "")
}

"""
Input for the createPostFormat mutation
"""
input CreatePostFormatInput {
  """
  The slug that the post_format will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the post_format object
  """
  description: String

  """
  The name of the post_format object to mutate
  """
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the createPostFormat mutation
"""
type CreatePostFormatPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created post_format
  """
  postFormat: PostFormat @deprecated(reason: "")
}

"""
Input for the createProductCategory mutation
"""
input CreateProductCategoryInput {
  """
  The slug that the product_cat will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_cat object
  """
  description: String

  """
  The name of the product_cat object to mutate
  """
  name: String!

  """
  The ID of the product_cat that should be set as the parent
  """
  parentId: ID

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the createProductCategory mutation
"""
type CreateProductCategoryPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_cat
  """
  productCategory: ProductCategory @deprecated(reason: "")
}

"""
Input for the createProductTag mutation
"""
input CreateProductTagInput {
  """
  The slug that the product_tag will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_tag object
  """
  description: String

  """
  The name of the product_tag object to mutate
  """
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the createProductTag mutation
"""
type CreateProductTagPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_tag
  """
  productTag: ProductTag @deprecated(reason: "")
}

"""
Input for the createProductType mutation
"""
input CreateProductTypeInput {
  """
  The slug that the product_type will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_type object
  """
  description: String

  """
  The name of the product_type object to mutate
  """
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the createProductType mutation
"""
type CreateProductTypePayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_type
  """
  productType: ProductType @deprecated(reason: "")
}

"""
Input for the createShippingClass mutation
"""
input CreateShippingClassInput {
  """
  The slug that the product_shipping_class will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_shipping_class object
  """
  description: String

  """
  The name of the product_shipping_class object to mutate
  """
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the createShippingClass mutation
"""
type CreateShippingClassPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_shipping_class
  """
  shippingClass: ShippingClass @deprecated(reason: "")
}

"""
Input for the createTag mutation
"""
input CreateTagInput {
  """
  The slug that the post_tag will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the post_tag object
  """
  description: String

  """
  The name of the post_tag object to mutate
  """
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the createTag mutation
"""
type CreateTagPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created post_tag
  """
  tag: Tag @deprecated(reason: "")
}

"""
Input for the createUser mutation
"""
input CreateUserInput {
  """
  User's AOL IM account.
  """
  aim: String
  clientMutationId: String!

  """
  A string containing content about the user.
  """
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """
  A string containing the user's email address.
  """
  email: String

  """
  The user's first name.
  """
  firstName: String

  """
  User's Jabber account.
  """
  jabber: String

  """
  The user's last name.
  """
  lastName: String

  """
  User's locale.
  """
  locale: String

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """
  The user's nickname, defaults to the user's username.
  """
  nickname: String

  """
  A string that contains the plain text password for the user.
  """
  password: String

  """
  The date the user registered. Format is Y-m-d H:i:s.
  """
  registered: String

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """
  An array of roles to be assigned to the user.
  """
  roles: [String]

  """
  A string that contains the user's username for logging in.
  """
  username: String!

  """
  A string containing the user's URL for the user's web site.
  """
  websiteUrl: String

  """
  User's Yahoo IM account.
  """
  yim: String
}

"""
The payload for the createUser mutation
"""
type CreateUserPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  user: User @deprecated(reason: "")
}

"""
Input for the createVisibleProduct mutation
"""
input CreateVisibleProductInput {
  """
  The slug that the product_visibility will be an alias of
  """
  aliasOf: String
  clientMutationId: String!

  """
  The description of the product_visibility object
  """
  description: String

  """
  The name of the product_visibility object to mutate
  """
  name: String!

  """
  If this argument exists then the slug will be checked to see if it is not an existing valid term. If that check succeeds (it is not a valid term), then it is added and the term id is given. If it fails, then a check is made to whether the taxonomy is hierarchical and the parent argument is not empty. If the second check succeeds, the term will be inserted and the term id will be given. If the slug argument is empty, then it will be calculated from the term name.
  """
  slug: String
}

"""
The payload for the createVisibleProduct mutation
"""
type CreateVisibleProductPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The created product_visibility
  """
  visibleProduct: VisibleProduct @deprecated(reason: "")
}

"""
Input for the deleteCategory mutation
"""
input DeleteCategoryInput {
  clientMutationId: String!

  """
  The ID of the category to delete
  """
  id: ID!
}

"""
The payload for the deleteCategory mutation
"""
type DeleteCategoryPayload {
  """
  The deteted term object
  """
  category: Category @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")
}

"""
Input for the deleteComment mutation
"""
input DeleteCommentInput {
  clientMutationId: String!

  """
  Whether the comment should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """
  The deleted comment ID
  """
  id: ID!
}

"""
The payload for the deleteComment mutation
"""
type DeleteCommentPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The deleted comment object
  """
  comment: Comment @deprecated(reason: "")

  """
  The deleted comment ID
  """
  deletedId: ID @deprecated(reason: "")
}

"""
Input for the deleteMediaItem mutation
"""
input DeleteMediaItemInput {
  clientMutationId: String!

  """
  Whether the mediaItem should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """
  The ID of the mediaItem to delete
  """
  id: ID!
}

"""
The payload for the deleteMediaItem mutation
"""
type DeleteMediaItemPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted mediaItem
  """
  deletedId: ID @deprecated(reason: "")

  """
  The mediaItem before it was deleted
  """
  mediaItem: MediaItem @deprecated(reason: "")
}

"""
Input for the deleteOrder mutation
"""
input DeleteOrderInput {
  clientMutationId: String!

  """
  Delete or simply place in trash.
  """
  forceDelete: Boolean

  """
  Order global ID
  """
  id: ID

  """
  Order WP ID
  """
  orderId: Int
}

"""
The payload for the deleteOrder mutation
"""
type DeleteOrderPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  order: Order @deprecated(reason: "")
}

"""
Input for the deleteOrderItems mutation
"""
input DeleteOrderItemsInput {
  clientMutationId: String!

  """
  Order global ID
  """
  id: ID

  """
  ID Order items being deleted
  """
  itemIds: [Int]

  """
  Order WP ID
  """
  orderId: Int
}

"""
The payload for the deleteOrderItems mutation
"""
type DeleteOrderItemsPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  order: Order @deprecated(reason: "")
}

"""
Input for the deletePage mutation
"""
input DeletePageInput {
  clientMutationId: String!

  """
  Whether the object should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """
  The ID of the page to delete
  """
  id: ID!
}

"""
The payload for the deletePage mutation
"""
type DeletePagePayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")

  """
  The object before it was deleted
  """
  page: Page @deprecated(reason: "")
}

"""
Input for the deletePost mutation
"""
input DeletePostInput {
  clientMutationId: String!

  """
  Whether the object should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """
  The ID of the post to delete
  """
  id: ID!
}

"""
The payload for the deletePost mutation
"""
type DeletePostPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")

  """
  The object before it was deleted
  """
  post: Post @deprecated(reason: "")
}

"""
Input for the deletePostFormat mutation
"""
input DeletePostFormatInput {
  clientMutationId: String!

  """
  The ID of the postFormat to delete
  """
  id: ID!
}

"""
The payload for the deletePostFormat mutation
"""
type DeletePostFormatPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")

  """
  The deteted term object
  """
  postFormat: PostFormat @deprecated(reason: "")
}

"""
Input for the deleteProductCategory mutation
"""
input DeleteProductCategoryInput {
  clientMutationId: String!

  """
  The ID of the productCategory to delete
  """
  id: ID!
}

"""
The payload for the deleteProductCategory mutation
"""
type DeleteProductCategoryPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")

  """
  The deteted term object
  """
  productCategory: ProductCategory @deprecated(reason: "")
}

"""
Input for the deleteProductTag mutation
"""
input DeleteProductTagInput {
  clientMutationId: String!

  """
  The ID of the productTag to delete
  """
  id: ID!
}

"""
The payload for the deleteProductTag mutation
"""
type DeleteProductTagPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")

  """
  The deteted term object
  """
  productTag: ProductTag @deprecated(reason: "")
}

"""
Input for the deleteProductType mutation
"""
input DeleteProductTypeInput {
  clientMutationId: String!

  """
  The ID of the productType to delete
  """
  id: ID!
}

"""
The payload for the deleteProductType mutation
"""
type DeleteProductTypePayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")

  """
  The deteted term object
  """
  productType: ProductType @deprecated(reason: "")
}

"""
Input for the deleteReview mutation
"""
input DeleteReviewInput {
  clientMutationId: String!

  """
  Whether the product review should be force deleted instead of being moved to the trash
  """
  forceDelete: Boolean

  """
  The ID of the target product review
  """
  id: ID!
}

"""
The payload for the deleteReview mutation
"""
type DeleteReviewPayload {
  """
  The affected product review ID
  """
  affectedId: ID @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The product rating of the affected product review
  """
  rating: Float @deprecated(reason: "")

  """
  The affected product review
  """
  review: Comment @deprecated(reason: "")
}

"""
Input for the deleteShippingClass mutation
"""
input DeleteShippingClassInput {
  clientMutationId: String!

  """
  The ID of the shippingClass to delete
  """
  id: ID!
}

"""
The payload for the deleteShippingClass mutation
"""
type DeleteShippingClassPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")

  """
  The deteted term object
  """
  shippingClass: ShippingClass @deprecated(reason: "")
}

"""
Input for the deleteTag mutation
"""
input DeleteTagInput {
  clientMutationId: String!

  """
  The ID of the tag to delete
  """
  id: ID!
}

"""
The payload for the deleteTag mutation
"""
type DeleteTagPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")

  """
  The deteted term object
  """
  tag: Tag @deprecated(reason: "")
}

"""
Input for the deleteUser mutation
"""
input DeleteUserInput {
  clientMutationId: String!

  """
  The ID of the user you want to delete
  """
  id: ID!

  """
  Reassign posts and links to new User ID.
  """
  reassignId: ID
}

"""
The payload for the deleteUser mutation
"""
type DeleteUserPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the user that you just deleted
  """
  deletedId: ID @deprecated(reason: "")

  """
  The deleted user object
  """
  user: User @deprecated(reason: "")
}

"""
Input for the deleteVisibleProduct mutation
"""
input DeleteVisibleProductInput {
  clientMutationId: String!

  """
  The ID of the visibleProduct to delete
  """
  id: ID!
}

"""
The payload for the deleteVisibleProduct mutation
"""
type DeleteVisibleProductPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The ID of the deleted object
  """
  deletedId: ID @deprecated(reason: "")

  """
  The deteted term object
  """
  visibleProduct: VisibleProduct @deprecated(reason: "")
}

"""
Input for the emptyCart mutation
"""
input EmptyCartInput {
  clientMutationId: String!
}

"""
The payload for the emptyCart mutation
"""
type EmptyCartPayload {
  """
  """
  cart: Cart @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the registerCustomer mutation
"""
input RegisterCustomerInput {
  """
  User's AOL IM account.
  """
  aim: String

  """
  Customer billing information
  """
  billing: CustomerAddressInput
  clientMutationId: String!

  """
  A string containing content about the user.
  """
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """
  A string containing the user's email address.
  """
  email: String

  """
  The user's first name.
  """
  firstName: String

  """
  User's Jabber account.
  """
  jabber: String

  """
  The user's last name.
  """
  lastName: String

  """
  User's locale.
  """
  locale: String

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """
  The user's nickname, defaults to the user's username.
  """
  nickname: String

  """
  A string that contains the plain text password for the user.
  """
  password: String

  """
  The date the user registered. Format is Y-m-d H:i:s.
  """
  registered: String

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """
  Customer shipping address
  """
  shipping: CustomerAddressInput

  """
  Customer shipping is identical to billing address
  """
  shippingSameAsBilling: Boolean

  """
  A string that contains the user's username.
  """
  username: String!

  """
  A string containing the user's URL for the user's web site.
  """
  websiteUrl: String

  """
  User's Yahoo IM account.
  """
  yim: String
}

"""
The payload for the registerCustomer mutation
"""
type RegisterCustomerPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  customer: Customer @deprecated(reason: "")

  """
  """
  viewer: User @deprecated(reason: "")
}

"""
Input for the registerUser mutation
"""
input RegisterUserInput {
  """
  User's AOL IM account.
  """
  aim: String
  clientMutationId: String!

  """
  A string containing content about the user.
  """
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """
  A string containing the user's email address.
  """
  email: String

  """
  The user's first name.
  """
  firstName: String

  """
  User's Jabber account.
  """
  jabber: String

  """
  The user's last name.
  """
  lastName: String

  """
  User's locale.
  """
  locale: String

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """
  The user's nickname, defaults to the user's username.
  """
  nickname: String

  """
  A string that contains the plain text password for the user.
  """
  password: String

  """
  The date the user registered. Format is Y-m-d H:i:s.
  """
  registered: String

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """
  A string that contains the user's username.
  """
  username: String!

  """
  A string containing the user's URL for the user's web site.
  """
  websiteUrl: String

  """
  User's Yahoo IM account.
  """
  yim: String
}

"""
The payload for the registerUser mutation
"""
type RegisterUserPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  user: User @deprecated(reason: "")
}

"""
Input for the removeCoupons mutation
"""
input RemoveCouponsInput {
  clientMutationId: String!

  """
  Code of coupon being applied
  """
  codes: [String]
}

"""
The payload for the removeCoupons mutation
"""
type RemoveCouponsPayload {
  """
  """
  cart: Cart @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the removeItemsFromCart mutation
"""
input RemoveItemsFromCartInput {
  """
  Remove all cart items
  """
  all: Boolean
  clientMutationId: String!

  """
  Item keys of the items being removed
  """
  keys: [ID]
}

"""
The payload for the removeItemsFromCart mutation
"""
type RemoveItemsFromCartPayload {
  """
  """
  cart: Cart @deprecated(reason: "")

  """
  """
  cartItems: [CartItem] @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the resetUserPassword mutation
"""
input ResetUserPasswordInput {
  clientMutationId: String!

  """
  Password reset key
  """
  key: String

  """
  The user's login (username).
  """
  login: String

  """
  The new password.
  """
  password: String
}

"""
The payload for the resetUserPassword mutation
"""
type ResetUserPasswordPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  user: User @deprecated(reason: "")
}

"""
Input for the restoreCartItems mutation
"""
input RestoreCartItemsInput {
  clientMutationId: String!

  """
  Cart item key of the item being removed
  """
  keys: [ID]
}

"""
The payload for the restoreCartItems mutation
"""
type RestoreCartItemsPayload {
  """
  """
  cart: Cart @deprecated(reason: "")

  """
  """
  cartItems: [CartItem] @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the restoreComment mutation
"""
input RestoreCommentInput {
  clientMutationId: String!

  """
  The ID of the comment to be restored
  """
  id: ID!
}

"""
The payload for the restoreComment mutation
"""
type RestoreCommentPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The restored comment object
  """
  comment: Comment @deprecated(reason: "")

  """
  The ID of the restored comment
  """
  restoredId: ID @deprecated(reason: "")
}

"""
Input for the restoreReview mutation
"""
input RestoreReviewInput {
  clientMutationId: String!

  """
  The ID of the target product review
  """
  id: ID!
}

"""
The payload for the restoreReview mutation
"""
type RestoreReviewPayload {
  """
  The affected product review ID
  """
  affectedId: ID @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The product rating of the affected product review
  """
  rating: Float @deprecated(reason: "")

  """
  The affected product review
  """
  review: Comment @deprecated(reason: "")
}

"""
Input for the sendPasswordResetEmail mutation
"""
input SendPasswordResetEmailInput {
  clientMutationId: String!

  """
  A string that contains the user's username or email address.
  """
  username: String!
}

"""
The payload for the sendPasswordResetEmail mutation
"""
type SendPasswordResetEmailPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The user that the password reset email was sent to
  """
  user: User @deprecated(reason: "")
}

"""
Input for the updateComment mutation
"""
input UpdateCommentInput {
  """
  User agent used to post the comment.
  """
  agent: String

  """
  The approval status of the comment.
  """
  approved: String

  """
  The name of the comment's author.
  """
  author: String

  """
  The email of the comment's author.
  """
  authorEmail: String

  """
  IP address for the comment's author.
  """
  authorIp: String

  """
  The url of the comment's author.
  """
  authorUrl: String
  clientMutationId: String!

  """
  The ID of the post object the comment belongs to.
  """
  commentOn: Int

  """
  Content of the comment.
  """
  content: String

  """
  The date of the object. Preferable to enter as year/month/day ( e.g. 01/31/2017 ) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17
  """
  date: String

  """
  The ID of the comment being updated.
  """
  id: ID!

  """
  Parent comment of current comment.
  """
  parent: ID

  """
  Type of comment.
  """
  type: String

  """
  The userID of the comment's author.
  """
  userId: Int
}

"""
The payload for the updateComment mutation
"""
type UpdateCommentPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The comment that was created
  """
  comment: Comment @deprecated(reason: "")

  """
  Whether the mutation succeeded. If the comment is not approved, the server will not return the comment to a non authenticated user, but a success message can be returned if the create succeeded, and the client can optimistically add the comment to the client cache
  """
  success: Boolean @deprecated(reason: "")
}

"""
Input for the updateCustomer mutation
"""
input UpdateCustomerInput {
  """
  User's AOL IM account.
  """
  aim: String

  """
  Customer billing information
  """
  billing: CustomerAddressInput
  clientMutationId: String!

  """
  A string containing content about the user.
  """
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """
  A string containing the user's email address.
  """
  email: String

  """
  The user's first name.
  """
  firstName: String

  """
  The ID of the user
  """
  id: ID

  """
  User's Jabber account.
  """
  jabber: String

  """
  The user's last name.
  """
  lastName: String

  """
  User's locale.
  """
  locale: String

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """
  The user's nickname, defaults to the user's username.
  """
  nickname: String

  """
  A string that contains the plain text password for the user.
  """
  password: String

  """
  The date the user registered. Format is Y-m-d H:i:s.
  """
  registered: String

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """
  An array of roles to be assigned to the user.
  """
  roles: [String]

  """
  Customer shipping address
  """
  shipping: CustomerAddressInput

  """
  Customer shipping is identical to billing address
  """
  shippingSameAsBilling: Boolean

  """
  A string containing the user's URL for the user's web site.
  """
  websiteUrl: String

  """
  User's Yahoo IM account.
  """
  yim: String
}

"""
The payload for the updateCustomer mutation
"""
type UpdateCustomerPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  customer: Customer @deprecated(reason: "")
}

"""
Input for the updateItemQuantities mutation
"""
input UpdateItemQuantitiesInput {
  clientMutationId: String!

  """
  Cart item being updated
  """
  items: [CartItemQuantityInput]
}

"""
Cart item quantity
"""
input CartItemQuantityInput {
  """
  Cart item being updated
  """
  key: ID!

  """
  Cart item's new quantity
  """
  quantity: Int!
}

"""
The payload for the updateItemQuantities mutation
"""
type UpdateItemQuantitiesPayload {
  """
  """
  cart: Cart @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  items: [CartItem] @deprecated(reason: "")

  """
  """
  removed: [CartItem] @deprecated(reason: "")

  """
  """
  updated: [CartItem] @deprecated(reason: "")
}

"""
Input for the updateMediaItem mutation
"""
input UpdateMediaItemInput {
  """
  Alternative text to display when mediaItem is not displayed
  """
  altText: String

  """
  The userId to assign as the author of the mediaItem
  """
  authorId: ID

  """
  The caption for the mediaItem
  """
  caption: String
  clientMutationId: String!

  """
  The comment status for the mediaItem
  """
  commentStatus: String

  """
  The date of the mediaItem
  """
  date: String

  """
  The date (in GMT zone) of the mediaItem
  """
  dateGmt: String

  """
  Description of the mediaItem
  """
  description: String

  """
  The file name of the mediaItem
  """
  filePath: String

  """
  The file type of the mediaItem
  """
  fileType: MimeTypeEnum

  """
  The ID of the mediaItem object
  """
  id: ID!

  """
  The WordPress post ID or the graphQL postId of the parent object
  """
  parentId: ID

  """
  The ping status for the mediaItem
  """
  pingStatus: String

  """
  The slug of the mediaItem
  """
  slug: String

  """
  The status of the mediaItem
  """
  status: MediaItemStatusEnum

  """
  The title of the mediaItem
  """
  title: String
}

"""
The payload for the updateMediaItem mutation
"""
type UpdateMediaItemPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  mediaItem: MediaItem @deprecated(reason: "")
}

"""
Input for the updateOrder mutation
"""
input UpdateOrderInput {
  """
  Order billing address
  """
  billing: CustomerAddressInput
  clientMutationId: String!

  """
  Coupons codes to be applied to order
  """
  coupons: [String]

  """
  Currency the order was created with, in ISO format.
  """
  currency: String

  """
  Order customer ID
  """
  customerId: Int

  """
  Note left by customer during checkout.
  """
  customerNote: String

  """
  Order shipping lines
  """
  feeLines: [FeeLineInput]

  """
  Order global ID
  """
  id: ID

  """
  Define if the order is paid. It will set the status to processing and reduce stock items.
  """
  isPaid: Boolean

  """
  Order line items
  """
  lineItems: [LineItemInput]

  """
  Order meta data
  """
  metaData: [MetaDataInput]

  """
  Order WP ID
  """
  orderId: Int

  """
  Parent order ID.
  """
  parentId: Int

  """
  Payment method ID.
  """
  paymentMethod: String

  """
  Payment method title.
  """
  paymentMethodTitle: String

  """
  Order shipping address
  """
  shipping: CustomerAddressInput

  """
  Order shipping lines
  """
  shippingLines: [ShippingLineInput]

  """
  Order status
  """
  status: OrderStatusEnum

  """
  Order transaction ID
  """
  transactionId: String
}

"""
The payload for the updateOrder mutation
"""
type UpdateOrderPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  order: Order @deprecated(reason: "")
}

"""
Input for the updatePage mutation
"""
input UpdatePageInput {
  """
  The userId to assign as the author of the object
  """
  authorId: ID
  clientMutationId: String!

  """
  The comment status for the object
  """
  commentStatus: String

  """
  The content of the object
  """
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17
  """
  date: String

  """
  The ID of the page object
  """
  id: ID!

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """
  The ID of the parent object
  """
  parentId: ID

  """
  The password used to protect the content of the object
  """
  password: String

  """
  The slug of the object
  """
  slug: String

  """
  The status of the object
  """
  status: PostStatusEnum

  """
  The title of the object
  """
  title: String
}

"""
The payload for the updatePage mutation
"""
type UpdatePagePayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  page: Page @deprecated(reason: "")
}

"""
Input for the updatePost mutation
"""
input UpdatePostInput {
  """
  The userId to assign as the author of the object
  """
  authorId: ID

  """
  Set connections between the post and categories
  """
  categories: PostCategoriesInput
  clientMutationId: String!

  """
  The comment status for the object
  """
  commentStatus: String

  """
  The content of the object
  """
  content: String

  """
  The date of the object. Preferable to enter as year/month/day (e.g. 01/31/2017) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17
  """
  date: String

  """
  The excerpt of the object
  """
  excerpt: String

  """
  The ID of the post object
  """
  id: ID!

  """
  A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """
  The password used to protect the content of the object
  """
  password: String

  """
  The ping status for the object
  """
  pingStatus: String

  """
  URLs that have been pinged.
  """
  pinged: [String]

  """
  Set connections between the post and postFormats
  """
  postFormats: PostPostFormatsInput

  """
  The slug of the object
  """
  slug: String

  """
  The status of the object
  """
  status: PostStatusEnum

  """
  Set connections between the post and tags
  """
  tags: PostTagsInput

  """
  The title of the object
  """
  title: String

  """
  URLs queued to be pinged.
  """
  toPing: [String]
}

"""
The payload for the updatePost mutation
"""
type UpdatePostPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  post: Post @deprecated(reason: "")
}

"""
Input for the updateReview mutation
"""
input UpdateReviewInput {
  """
  User agent used to post the comment.
  """
  agent: String

  """
  The approval status of the comment.
  """
  approved: String

  """
  The name of the comment's author.
  """
  author: String

  """
  The email of the comment's author.
  """
  authorEmail: String

  """
  IP address for the comment's author.
  """
  authorIp: String

  """
  The url of the comment's author.
  """
  authorUrl: String
  clientMutationId: String!

  """
  The ID of the post object the comment belongs to.
  """
  commentOn: Int

  """
  Content of the comment.
  """
  content: String

  """
  The date of the object. Preferable to enter as year/month/day ( e.g. 01/31/2017 ) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17
  """
  date: String

  """
  The ID of the review being updated.
  """
  id: ID!

  """
  Parent comment of current comment.
  """
  parent: ID

  """
  Product rating
  """
  rating: Int!

  """
  The userID of the comment's author.
  """
  userId: Int
}

"""
The payload for the updateReview mutation
"""
type UpdateReviewPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The product rating of the review that was created
  """
  rating: Float @deprecated(reason: "")

  """
  The product review that was created
  """
  review: Comment @deprecated(reason: "")
}

"""
Input for the updateSettings mutation
"""
input UpdateSettingsInput {
  clientMutationId: String!

  """
  Allow people to submit comments on new posts.
  """
  discussionSettingsDefaultCommentStatus: String

  """
  Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.
  """
  discussionSettingsDefaultPingStatus: String

  """
  A date format for all date strings.
  """
  generalSettingsDateFormat: String

  """
  Site tagline.
  """
  generalSettingsDescription: String

  """
  This address is used for admin purposes, like new user notification.
  """
  generalSettingsEmail: String

  """
  WordPress locale code.
  """
  generalSettingsLanguage: String

  """
  A day number of the week that the week should start on.
  """
  generalSettingsStartOfWeek: Int

  """
  A time format for all time strings.
  """
  generalSettingsTimeFormat: String

  """
  A city in the same timezone as you.
  """
  generalSettingsTimezone: String

  """
  Site title.
  """
  generalSettingsTitle: String

  """
  Site URL.
  """
  generalSettingsUrl: String

  """
  Blog pages show at most.
  """
  readingSettingsPostsPerPage: Int

  """
  Default post category.
  """
  writingSettingsDefaultCategory: Int

  """
  Default post format.
  """
  writingSettingsDefaultPostFormat: String

  """
  Convert emoticons like :-) and :-P to graphics on display.
  """
  writingSettingsUseSmilies: Boolean
}

"""
The payload for the updateSettings mutation
"""
type UpdateSettingsPayload {
  """
  """
  allSettings: Settings @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  discussionSettings: DiscussionSettings @deprecated(reason: "")

  """
  """
  generalSettings: GeneralSettings @deprecated(reason: "")

  """
  """
  readingSettings: ReadingSettings @deprecated(reason: "")

  """
  """
  writingSettings: WritingSettings @deprecated(reason: "")
}

"""
Input for the updateShippingMethod mutation
"""
input UpdateShippingMethodInput {
  clientMutationId: String!
  shippingMethods: [String]
}

"""
The payload for the updateShippingMethod mutation
"""
type UpdateShippingMethodPayload {
  """
  """
  cart: Cart @deprecated(reason: "")

  """
  """
  clientMutationId: String! @deprecated(reason: "")
}

"""
Input for the updateUser mutation
"""
input UpdateUserInput {
  """
  User's AOL IM account.
  """
  aim: String
  clientMutationId: String!

  """
  A string containing content about the user.
  """
  description: String

  """
  A string that will be shown on the site. Defaults to user's username. It is likely that you will want to change this, for both appearance and security through obscurity (that is if you dont use and delete the default admin user).
  """
  displayName: String

  """
  A string containing the user's email address.
  """
  email: String

  """
  The user's first name.
  """
  firstName: String

  """
  The ID of the user
  """
  id: ID!

  """
  User's Jabber account.
  """
  jabber: String

  """
  The user's last name.
  """
  lastName: String

  """
  User's locale.
  """
  locale: String

  """
  A string that contains a URL-friendly name for the user. The default is the user's username.
  """
  nicename: String

  """
  The user's nickname, defaults to the user's username.
  """
  nickname: String

  """
  A string that contains the plain text password for the user.
  """
  password: String

  """
  The date the user registered. Format is Y-m-d H:i:s.
  """
  registered: String

  """
  A string for whether to enable the rich editor or not. False if not empty.
  """
  richEditing: String

  """
  An array of roles to be assigned to the user.
  """
  roles: [String]

  """
  A string containing the user's URL for the user's web site.
  """
  websiteUrl: String

  """
  User's Yahoo IM account.
  """
  yim: String
}

"""
The payload for the updateUser mutation
"""
type UpdateUserPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  """
  user: User @deprecated(reason: "")
}

"""
Input for the writeReview mutation
"""
input WriteReviewInput {
  """
  User agent used to post the comment.
  """
  agent: String

  """
  The approval status of the comment.
  """
  approved: String

  """
  The name of the comment's author.
  """
  author: String

  """
  The email of the comment's author.
  """
  authorEmail: String

  """
  IP address for the comment's author.
  """
  authorIp: String

  """
  The url of the comment's author.
  """
  authorUrl: String
  clientMutationId: String!

  """
  The ID of the post object the comment belongs to.
  """
  commentOn: Int

  """
  Content of the comment.
  """
  content: String

  """
  The date of the object. Preferable to enter as year/month/day ( e.g. 01/31/2017 ) as it will rearrange date as fit if it is not specified. Incomplete dates may have unintended results for example, "2017" as the input will use current date with timestamp 20:17
  """
  date: String

  """
  Parent comment of current comment.
  """
  parent: ID

  """
  Product rating
  """
  rating: Int!

  """
  The userID of the comment's author.
  """
  userId: Int
}

"""
The payload for the writeReview mutation
"""
type WriteReviewPayload {
  """
  """
  clientMutationId: String! @deprecated(reason: "")

  """
  The product rating of the review that was created
  """
  rating: Float @deprecated(reason: "")

  """
  The product review that was created
  """
  review: Comment @deprecated(reason: "")
}

"""
A Comment Author object
"""
type CommentAuthor implements Node & Commenter {
  """
  Identifies the primary key from the database.
  """
  databaseId: Int! @deprecated(reason: "")

  """
  The email for the comment author
  """
  email: String @deprecated(reason: "")

  """
  The globally unique identifier for the comment author object
  """
  id: ID! @deprecated(reason: "")

  """
  Whether the object is restricted from the current viewer
  """
  isRestricted: Boolean @deprecated(reason: "")

  """
  The name for the comment author.
  """
  name: String @deprecated(reason: "")

  """
  The url the comment author.
  """
  url: String @deprecated(reason: "")
}

"""
Available timezones
"""
enum TimezoneEnum {
  """
  Abidjan
  """
  AFRICA_ABIDJAN

  """
  Accra
  """
  AFRICA_ACCRA

  """
  Addis Ababa
  """
  AFRICA_ADDIS_ABABA

  """
  Algiers
  """
  AFRICA_ALGIERS

  """
  Asmara
  """
  AFRICA_ASMARA

  """
  Bamako
  """
  AFRICA_BAMAKO

  """
  Bangui
  """
  AFRICA_BANGUI

  """
  Banjul
  """
  AFRICA_BANJUL

  """
  Bissau
  """
  AFRICA_BISSAU

  """
  Blantyre
  """
  AFRICA_BLANTYRE

  """
  Brazzaville
  """
  AFRICA_BRAZZAVILLE

  """
  Bujumbura
  """
  AFRICA_BUJUMBURA

  """
  Cairo
  """
  AFRICA_CAIRO

  """
  Casablanca
  """
  AFRICA_CASABLANCA

  """
  Ceuta
  """
  AFRICA_CEUTA

  """
  Conakry
  """
  AFRICA_CONAKRY

  """
  Dakar
  """
  AFRICA_DAKAR

  """
  Dar es Salaam
  """
  AFRICA_DAR_ES_SALAAM

  """
  Djibouti
  """
  AFRICA_DJIBOUTI

  """
  Douala
  """
  AFRICA_DOUALA

  """
  El Aaiun
  """
  AFRICA_EL_AAIUN

  """
  Freetown
  """
  AFRICA_FREETOWN

  """
  Gaborone
  """
  AFRICA_GABORONE

  """
  Harare
  """
  AFRICA_HARARE

  """
  Johannesburg
  """
  AFRICA_JOHANNESBURG

  """
  Juba
  """
  AFRICA_JUBA

  """
  Kampala
  """
  AFRICA_KAMPALA

  """
  Khartoum
  """
  AFRICA_KHARTOUM

  """
  Kigali
  """
  AFRICA_KIGALI

  """
  Kinshasa
  """
  AFRICA_KINSHASA

  """
  Lagos
  """
  AFRICA_LAGOS

  """
  Libreville
  """
  AFRICA_LIBREVILLE

  """
  Lome
  """
  AFRICA_LOME

  """
  Luanda
  """
  AFRICA_LUANDA

  """
  Lubumbashi
  """
  AFRICA_LUBUMBASHI

  """
  Lusaka
  """
  AFRICA_LUSAKA

  """
  Malabo
  """
  AFRICA_MALABO

  """
  Maputo
  """
  AFRICA_MAPUTO

  """
  Maseru
  """
  AFRICA_MASERU

  """
  Mbabane
  """
  AFRICA_MBABANE

  """
  Mogadishu
  """
  AFRICA_MOGADISHU

  """
  Monrovia
  """
  AFRICA_MONROVIA

  """
  Nairobi
  """
  AFRICA_NAIROBI

  """
  Ndjamena
  """
  AFRICA_NDJAMENA

  """
  Niamey
  """
  AFRICA_NIAMEY

  """
  Nouakchott
  """
  AFRICA_NOUAKCHOTT

  """
  Ouagadougou
  """
  AFRICA_OUAGADOUGOU

  """
  Porto-Novo
  """
  AFRICA_PORTO_NOVO

  """
  Sao Tome
  """
  AFRICA_SAO_TOME

  """
  Tripoli
  """
  AFRICA_TRIPOLI

  """
  Tunis
  """
  AFRICA_TUNIS

  """
  Windhoek
  """
  AFRICA_WINDHOEK

  """
  Adak
  """
  AMERICA_ADAK

  """
  Anchorage
  """
  AMERICA_ANCHORAGE

  """
  Anguilla
  """
  AMERICA_ANGUILLA

  """
  Antigua
  """
  AMERICA_ANTIGUA

  """
  Araguaina
  """
  AMERICA_ARAGUAINA

  """
  Argentina - Buenos Aires
  """
  AMERICA_ARGENTINA_BUENOS_AIRES

  """
  Argentina - Catamarca
  """
  AMERICA_ARGENTINA_CATAMARCA

  """
  Argentina - Cordoba
  """
  AMERICA_ARGENTINA_CORDOBA

  """
  Argentina - Jujuy
  """
  AMERICA_ARGENTINA_JUJUY

  """
  Argentina - La Rioja
  """
  AMERICA_ARGENTINA_LA_RIOJA

  """
  Argentina - Mendoza
  """
  AMERICA_ARGENTINA_MENDOZA

  """
  Argentina - Rio Gallegos
  """
  AMERICA_ARGENTINA_RIO_GALLEGOS

  """
  Argentina - Salta
  """
  AMERICA_ARGENTINA_SALTA

  """
  Argentina - San Juan
  """
  AMERICA_ARGENTINA_SAN_JUAN

  """
  Argentina - San Luis
  """
  AMERICA_ARGENTINA_SAN_LUIS

  """
  Argentina - Tucuman
  """
  AMERICA_ARGENTINA_TUCUMAN

  """
  Argentina - Ushuaia
  """
  AMERICA_ARGENTINA_USHUAIA

  """
  Aruba
  """
  AMERICA_ARUBA

  """
  Asuncion
  """
  AMERICA_ASUNCION

  """
  Atikokan
  """
  AMERICA_ATIKOKAN

  """
  Bahia
  """
  AMERICA_BAHIA

  """
  Bahia Banderas
  """
  AMERICA_BAHIA_BANDERAS

  """
  Barbados
  """
  AMERICA_BARBADOS

  """
  Belem
  """
  AMERICA_BELEM

  """
  Belize
  """
  AMERICA_BELIZE

  """
  Blanc-Sablon
  """
  AMERICA_BLANC_SABLON

  """
  Boa Vista
  """
  AMERICA_BOA_VISTA

  """
  Bogota
  """
  AMERICA_BOGOTA

  """
  Boise
  """
  AMERICA_BOISE

  """
  Cambridge Bay
  """
  AMERICA_CAMBRIDGE_BAY

  """
  Campo Grande
  """
  AMERICA_CAMPO_GRANDE

  """
  Cancun
  """
  AMERICA_CANCUN

  """
  Caracas
  """
  AMERICA_CARACAS

  """
  Cayenne
  """
  AMERICA_CAYENNE

  """
  Cayman
  """
  AMERICA_CAYMAN

  """
  Chicago
  """
  AMERICA_CHICAGO

  """
  Chihuahua
  """
  AMERICA_CHIHUAHUA

  """
  Costa Rica
  """
  AMERICA_COSTA_RICA

  """
  Creston
  """
  AMERICA_CRESTON

  """
  Cuiaba
  """
  AMERICA_CUIABA

  """
  Curacao
  """
  AMERICA_CURACAO

  """
  Danmarkshavn
  """
  AMERICA_DANMARKSHAVN

  """
  Dawson
  """
  AMERICA_DAWSON

  """
  Dawson Creek
  """
  AMERICA_DAWSON_CREEK

  """
  Denver
  """
  AMERICA_DENVER

  """
  Detroit
  """
  AMERICA_DETROIT

  """
  Dominica
  """
  AMERICA_DOMINICA

  """
  Edmonton
  """
  AMERICA_EDMONTON

  """
  Eirunepe
  """
  AMERICA_EIRUNEPE

  """
  El Salvador
  """
  AMERICA_EL_SALVADOR

  """
  Fortaleza
  """
  AMERICA_FORTALEZA

  """
  Fort Nelson
  """
  AMERICA_FORT_NELSON

  """
  Glace Bay
  """
  AMERICA_GLACE_BAY

  """
  Goose Bay
  """
  AMERICA_GOOSE_BAY

  """
  Grand Turk
  """
  AMERICA_GRAND_TURK

  """
  Grenada
  """
  AMERICA_GRENADA

  """
  Guadeloupe
  """
  AMERICA_GUADELOUPE

  """
  Guatemala
  """
  AMERICA_GUATEMALA

  """
  Guayaquil
  """
  AMERICA_GUAYAQUIL

  """
  Guyana
  """
  AMERICA_GUYANA

  """
  Halifax
  """
  AMERICA_HALIFAX

  """
  Havana
  """
  AMERICA_HAVANA

  """
  Hermosillo
  """
  AMERICA_HERMOSILLO

  """
  Indiana - Indianapolis
  """
  AMERICA_INDIANA_INDIANAPOLIS

  """
  Indiana - Knox
  """
  AMERICA_INDIANA_KNOX

  """
  Indiana - Marengo
  """
  AMERICA_INDIANA_MARENGO

  """
  Indiana - Petersburg
  """
  AMERICA_INDIANA_PETERSBURG

  """
  Indiana - Tell City
  """
  AMERICA_INDIANA_TELL_CITY

  """
  Indiana - Vevay
  """
  AMERICA_INDIANA_VEVAY

  """
  Indiana - Vincennes
  """
  AMERICA_INDIANA_VINCENNES

  """
  Indiana - Winamac
  """
  AMERICA_INDIANA_WINAMAC

  """
  Inuvik
  """
  AMERICA_INUVIK

  """
  Iqaluit
  """
  AMERICA_IQALUIT

  """
  Jamaica
  """
  AMERICA_JAMAICA

  """
  Juneau
  """
  AMERICA_JUNEAU

  """
  Kentucky - Louisville
  """
  AMERICA_KENTUCKY_LOUISVILLE

  """
  Kentucky - Monticello
  """
  AMERICA_KENTUCKY_MONTICELLO

  """
  Kralendijk
  """
  AMERICA_KRALENDIJK

  """
  La Paz
  """
  AMERICA_LA_PAZ

  """
  Lima
  """
  AMERICA_LIMA

  """
  Los Angeles
  """
  AMERICA_LOS_ANGELES

  """
  Lower Princes
  """
  AMERICA_LOWER_PRINCES

  """
  Maceio
  """
  AMERICA_MACEIO

  """
  Managua
  """
  AMERICA_MANAGUA

  """
  Manaus
  """
  AMERICA_MANAUS

  """
  Marigot
  """
  AMERICA_MARIGOT

  """
  Martinique
  """
  AMERICA_MARTINIQUE

  """
  Matamoros
  """
  AMERICA_MATAMOROS

  """
  Mazatlan
  """
  AMERICA_MAZATLAN

  """
  Menominee
  """
  AMERICA_MENOMINEE

  """
  Merida
  """
  AMERICA_MERIDA

  """
  Metlakatla
  """
  AMERICA_METLAKATLA

  """
  Mexico City
  """
  AMERICA_MEXICO_CITY

  """
  Miquelon
  """
  AMERICA_MIQUELON

  """
  Moncton
  """
  AMERICA_MONCTON

  """
  Monterrey
  """
  AMERICA_MONTERREY

  """
  Montevideo
  """
  AMERICA_MONTEVIDEO

  """
  Montserrat
  """
  AMERICA_MONTSERRAT

  """
  Nassau
  """
  AMERICA_NASSAU

  """
  New York
  """
  AMERICA_NEW_YORK

  """
  Nipigon
  """
  AMERICA_NIPIGON

  """
  Nome
  """
  AMERICA_NOME

  """
  Noronha
  """
  AMERICA_NORONHA

  """
  North Dakota - Beulah
  """
  AMERICA_NORTH_DAKOTA_BEULAH

  """
  North Dakota - Center
  """
  AMERICA_NORTH_DAKOTA_CENTER

  """
  North Dakota - New Salem
  """
  AMERICA_NORTH_DAKOTA_NEW_SALEM

  """
  Nuuk
  """
  AMERICA_NUUK

  """
  Ojinaga
  """
  AMERICA_OJINAGA

  """
  Panama
  """
  AMERICA_PANAMA

  """
  Pangnirtung
  """
  AMERICA_PANGNIRTUNG

  """
  Paramaribo
  """
  AMERICA_PARAMARIBO

  """
  Phoenix
  """
  AMERICA_PHOENIX

  """
  Porto Velho
  """
  AMERICA_PORTO_VELHO

  """
  Port-au-Prince
  """
  AMERICA_PORT_AU_PRINCE

  """
  Port of Spain
  """
  AMERICA_PORT_OF_SPAIN

  """
  Puerto Rico
  """
  AMERICA_PUERTO_RICO

  """
  Punta Arenas
  """
  AMERICA_PUNTA_ARENAS

  """
  Rainy River
  """
  AMERICA_RAINY_RIVER

  """
  Rankin Inlet
  """
  AMERICA_RANKIN_INLET

  """
  Recife
  """
  AMERICA_RECIFE

  """
  Regina
  """
  AMERICA_REGINA

  """
  Resolute
  """
  AMERICA_RESOLUTE

  """
  Rio Branco
  """
  AMERICA_RIO_BRANCO

  """
  Santarem
  """
  AMERICA_SANTAREM

  """
  Santiago
  """
  AMERICA_SANTIAGO

  """
  Santo Domingo
  """
  AMERICA_SANTO_DOMINGO

  """
  Sao Paulo
  """
  AMERICA_SAO_PAULO

  """
  Scoresbysund
  """
  AMERICA_SCORESBYSUND

  """
  Sitka
  """
  AMERICA_SITKA

  """
  St Barthelemy
  """
  AMERICA_ST_BARTHELEMY

  """
  St Johns
  """
  AMERICA_ST_JOHNS

  """
  St Kitts
  """
  AMERICA_ST_KITTS

  """
  St Lucia
  """
  AMERICA_ST_LUCIA

  """
  St Thomas
  """
  AMERICA_ST_THOMAS

  """
  St Vincent
  """
  AMERICA_ST_VINCENT

  """
  Swift Current
  """
  AMERICA_SWIFT_CURRENT

  """
  Tegucigalpa
  """
  AMERICA_TEGUCIGALPA

  """
  Thule
  """
  AMERICA_THULE

  """
  Thunder Bay
  """
  AMERICA_THUNDER_BAY

  """
  Tijuana
  """
  AMERICA_TIJUANA

  """
  Toronto
  """
  AMERICA_TORONTO

  """
  Tortola
  """
  AMERICA_TORTOLA

  """
  Vancouver
  """
  AMERICA_VANCOUVER

  """
  Whitehorse
  """
  AMERICA_WHITEHORSE

  """
  Winnipeg
  """
  AMERICA_WINNIPEG

  """
  Yakutat
  """
  AMERICA_YAKUTAT

  """
  Yellowknife
  """
  AMERICA_YELLOWKNIFE

  """
  Casey
  """
  ANTARCTICA_CASEY

  """
  Davis
  """
  ANTARCTICA_DAVIS

  """
  DumontDUrville
  """
  ANTARCTICA_DUMONTDURVILLE

  """
  Macquarie
  """
  ANTARCTICA_MACQUARIE

  """
  Mawson
  """
  ANTARCTICA_MAWSON

  """
  McMurdo
  """
  ANTARCTICA_MCMURDO

  """
  Palmer
  """
  ANTARCTICA_PALMER

  """
  Rothera
  """
  ANTARCTICA_ROTHERA

  """
  Syowa
  """
  ANTARCTICA_SYOWA

  """
  Troll
  """
  ANTARCTICA_TROLL

  """
  Vostok
  """
  ANTARCTICA_VOSTOK

  """
  Longyearbyen
  """
  ARCTIC_LONGYEARBYEN

  """
  Aden
  """
  ASIA_ADEN

  """
  Almaty
  """
  ASIA_ALMATY

  """
  Amman
  """
  ASIA_AMMAN

  """
  Anadyr
  """
  ASIA_ANADYR

  """
  Aqtau
  """
  ASIA_AQTAU

  """
  Aqtobe
  """
  ASIA_AQTOBE

  """
  Ashgabat
  """
  ASIA_ASHGABAT

  """
  Atyrau
  """
  ASIA_ATYRAU

  """
  Baghdad
  """
  ASIA_BAGHDAD

  """
  Bahrain
  """
  ASIA_BAHRAIN

  """
  Baku
  """
  ASIA_BAKU

  """
  Bangkok
  """
  ASIA_BANGKOK

  """
  Barnaul
  """
  ASIA_BARNAUL

  """
  Beirut
  """
  ASIA_BEIRUT

  """
  Bishkek
  """
  ASIA_BISHKEK

  """
  Brunei
  """
  ASIA_BRUNEI

  """
  Chita
  """
  ASIA_CHITA

  """
  Choibalsan
  """
  ASIA_CHOIBALSAN

  """
  Colombo
  """
  ASIA_COLOMBO

  """
  Damascus
  """
  ASIA_DAMASCUS

  """
  Dhaka
  """
  ASIA_DHAKA

  """
  Dili
  """
  ASIA_DILI

  """
  Dubai
  """
  ASIA_DUBAI

  """
  Dushanbe
  """
  ASIA_DUSHANBE

  """
  Famagusta
  """
  ASIA_FAMAGUSTA

  """
  Gaza
  """
  ASIA_GAZA

  """
  Hebron
  """
  ASIA_HEBRON

  """
  Hong Kong
  """
  ASIA_HONG_KONG

  """
  Hovd
  """
  ASIA_HOVD

  """
  Ho Chi Minh
  """
  ASIA_HO_CHI_MINH

  """
  Irkutsk
  """
  ASIA_IRKUTSK

  """
  Jakarta
  """
  ASIA_JAKARTA

  """
  Jayapura
  """
  ASIA_JAYAPURA

  """
  Jerusalem
  """
  ASIA_JERUSALEM

  """
  Kabul
  """
  ASIA_KABUL

  """
  Kamchatka
  """
  ASIA_KAMCHATKA

  """
  Karachi
  """
  ASIA_KARACHI

  """
  Kathmandu
  """
  ASIA_KATHMANDU

  """
  Khandyga
  """
  ASIA_KHANDYGA

  """
  Kolkata
  """
  ASIA_KOLKATA

  """
  Krasnoyarsk
  """
  ASIA_KRASNOYARSK

  """
  Kuala Lumpur
  """
  ASIA_KUALA_LUMPUR

  """
  Kuching
  """
  ASIA_KUCHING

  """
  Kuwait
  """
  ASIA_KUWAIT

  """
  Macau
  """
  ASIA_MACAU

  """
  Magadan
  """
  ASIA_MAGADAN

  """
  Makassar
  """
  ASIA_MAKASSAR

  """
  Manila
  """
  ASIA_MANILA

  """
  Muscat
  """
  ASIA_MUSCAT

  """
  Nicosia
  """
  ASIA_NICOSIA

  """
  Novokuznetsk
  """
  ASIA_NOVOKUZNETSK

  """
  Novosibirsk
  """
  ASIA_NOVOSIBIRSK

  """
  Omsk
  """
  ASIA_OMSK

  """
  Oral
  """
  ASIA_ORAL

  """
  Phnom Penh
  """
  ASIA_PHNOM_PENH

  """
  Pontianak
  """
  ASIA_PONTIANAK

  """
  Pyongyang
  """
  ASIA_PYONGYANG

  """
  Qatar
  """
  ASIA_QATAR

  """
  Qostanay
  """
  ASIA_QOSTANAY

  """
  Qyzylorda
  """
  ASIA_QYZYLORDA

  """
  Riyadh
  """
  ASIA_RIYADH

  """
  Sakhalin
  """
  ASIA_SAKHALIN

  """
  Samarkand
  """
  ASIA_SAMARKAND

  """
  Seoul
  """
  ASIA_SEOUL

  """
  Shanghai
  """
  ASIA_SHANGHAI

  """
  Singapore
  """
  ASIA_SINGAPORE

  """
  Srednekolymsk
  """
  ASIA_SREDNEKOLYMSK

  """
  Taipei
  """
  ASIA_TAIPEI

  """
  Tashkent
  """
  ASIA_TASHKENT

  """
  Tbilisi
  """
  ASIA_TBILISI

  """
  Tehran
  """
  ASIA_TEHRAN

  """
  Thimphu
  """
  ASIA_THIMPHU

  """
  Tokyo
  """
  ASIA_TOKYO

  """
  Tomsk
  """
  ASIA_TOMSK

  """
  Ulaanbaatar
  """
  ASIA_ULAANBAATAR

  """
  Urumqi
  """
  ASIA_URUMQI

  """
  Ust-Nera
  """
  ASIA_UST_NERA

  """
  Vientiane
  """
  ASIA_VIENTIANE

  """
  Vladivostok
  """
  ASIA_VLADIVOSTOK

  """
  Yakutsk
  """
  ASIA_YAKUTSK

  """
  Yangon
  """
  ASIA_YANGON

  """
  Yekaterinburg
  """
  ASIA_YEKATERINBURG

  """
  Yerevan
  """
  ASIA_YEREVAN

  """
  Azores
  """
  ATLANTIC_AZORES

  """
  Bermuda
  """
  ATLANTIC_BERMUDA

  """
  Canary
  """
  ATLANTIC_CANARY

  """
  Cape Verde
  """
  ATLANTIC_CAPE_VERDE

  """
  Faroe
  """
  ATLANTIC_FAROE

  """
  Madeira
  """
  ATLANTIC_MADEIRA

  """
  Reykjavik
  """
  ATLANTIC_REYKJAVIK

  """
  South Georgia
  """
  ATLANTIC_SOUTH_GEORGIA

  """
  Stanley
  """
  ATLANTIC_STANLEY

  """
  St Helena
  """
  ATLANTIC_ST_HELENA

  """
  Adelaide
  """
  AUSTRALIA_ADELAIDE

  """
  Brisbane
  """
  AUSTRALIA_BRISBANE

  """
  Broken Hill
  """
  AUSTRALIA_BROKEN_HILL

  """
  Darwin
  """
  AUSTRALIA_DARWIN

  """
  Eucla
  """
  AUSTRALIA_EUCLA

  """
  Hobart
  """
  AUSTRALIA_HOBART

  """
  Lindeman
  """
  AUSTRALIA_LINDEMAN

  """
  Lord Howe
  """
  AUSTRALIA_LORD_HOWE

  """
  Melbourne
  """
  AUSTRALIA_MELBOURNE

  """
  Perth
  """
  AUSTRALIA_PERTH

  """
  Sydney
  """
  AUSTRALIA_SYDNEY

  """
  Amsterdam
  """
  EUROPE_AMSTERDAM

  """
  Andorra
  """
  EUROPE_ANDORRA

  """
  Astrakhan
  """
  EUROPE_ASTRAKHAN

  """
  Athens
  """
  EUROPE_ATHENS

  """
  Belgrade
  """
  EUROPE_BELGRADE

  """
  Berlin
  """
  EUROPE_BERLIN

  """
  Bratislava
  """
  EUROPE_BRATISLAVA

  """
  Brussels
  """
  EUROPE_BRUSSELS

  """
  Bucharest
  """
  EUROPE_BUCHAREST

  """
  Budapest
  """
  EUROPE_BUDAPEST

  """
  Busingen
  """
  EUROPE_BUSINGEN

  """
  Chisinau
  """
  EUROPE_CHISINAU

  """
  Copenhagen
  """
  EUROPE_COPENHAGEN

  """
  Dublin
  """
  EUROPE_DUBLIN

  """
  Gibraltar
  """
  EUROPE_GIBRALTAR

  """
  Guernsey
  """
  EUROPE_GUERNSEY

  """
  Helsinki
  """
  EUROPE_HELSINKI

  """
  Isle of Man
  """
  EUROPE_ISLE_OF_MAN

  """
  Istanbul
  """
  EUROPE_ISTANBUL

  """
  Jersey
  """
  EUROPE_JERSEY

  """
  Kaliningrad
  """
  EUROPE_KALININGRAD

  """
  Kiev
  """
  EUROPE_KIEV

  """
  Kirov
  """
  EUROPE_KIROV

  """
  Lisbon
  """
  EUROPE_LISBON

  """
  Ljubljana
  """
  EUROPE_LJUBLJANA

  """
  London
  """
  EUROPE_LONDON

  """
  Luxembourg
  """
  EUROPE_LUXEMBOURG

  """
  Madrid
  """
  EUROPE_MADRID

  """
  Malta
  """
  EUROPE_MALTA

  """
  Mariehamn
  """
  EUROPE_MARIEHAMN

  """
  Minsk
  """
  EUROPE_MINSK

  """
  Monaco
  """
  EUROPE_MONACO

  """
  Moscow
  """
  EUROPE_MOSCOW

  """
  Oslo
  """
  EUROPE_OSLO

  """
  Paris
  """
  EUROPE_PARIS

  """
  Podgorica
  """
  EUROPE_PODGORICA

  """
  Prague
  """
  EUROPE_PRAGUE

  """
  Riga
  """
  EUROPE_RIGA

  """
  Rome
  """
  EUROPE_ROME

  """
  Samara
  """
  EUROPE_SAMARA

  """
  San Marino
  """
  EUROPE_SAN_MARINO

  """
  Sarajevo
  """
  EUROPE_SARAJEVO

  """
  Saratov
  """
  EUROPE_SARATOV

  """
  Simferopol
  """
  EUROPE_SIMFEROPOL

  """
  Skopje
  """
  EUROPE_SKOPJE

  """
  Sofia
  """
  EUROPE_SOFIA

  """
  Stockholm
  """
  EUROPE_STOCKHOLM

  """
  Tallinn
  """
  EUROPE_TALLINN

  """
  Tirane
  """
  EUROPE_TIRANE

  """
  Ulyanovsk
  """
  EUROPE_ULYANOVSK

  """
  Uzhgorod
  """
  EUROPE_UZHGOROD

  """
  Vaduz
  """
  EUROPE_VADUZ

  """
  Vatican
  """
  EUROPE_VATICAN

  """
  Vienna
  """
  EUROPE_VIENNA

  """
  Vilnius
  """
  EUROPE_VILNIUS

  """
  Volgograd
  """
  EUROPE_VOLGOGRAD

  """
  Warsaw
  """
  EUROPE_WARSAW

  """
  Zagreb
  """
  EUROPE_ZAGREB

  """
  Zaporozhye
  """
  EUROPE_ZAPOROZHYE

  """
  Zurich
  """
  EUROPE_ZURICH

  """
  Antananarivo
  """
  INDIAN_ANTANANARIVO

  """
  Chagos
  """
  INDIAN_CHAGOS

  """
  Christmas
  """
  INDIAN_CHRISTMAS

  """
  Cocos
  """
  INDIAN_COCOS

  """
  Comoro
  """
  INDIAN_COMORO

  """
  Kerguelen
  """
  INDIAN_KERGUELEN

  """
  Mahe
  """
  INDIAN_MAHE

  """
  Maldives
  """
  INDIAN_MALDIVES

  """
  Mauritius
  """
  INDIAN_MAURITIUS

  """
  Mayotte
  """
  INDIAN_MAYOTTE

  """
  Reunion
  """
  INDIAN_REUNION

  """
  Apia
  """
  PACIFIC_APIA

  """
  Auckland
  """
  PACIFIC_AUCKLAND

  """
  Bougainville
  """
  PACIFIC_BOUGAINVILLE

  """
  Chatham
  """
  PACIFIC_CHATHAM

  """
  Chuuk
  """
  PACIFIC_CHUUK

  """
  Easter
  """
  PACIFIC_EASTER

  """
  Efate
  """
  PACIFIC_EFATE

  """
  Fakaofo
  """
  PACIFIC_FAKAOFO

  """
  Fiji
  """
  PACIFIC_FIJI

  """
  Funafuti
  """
  PACIFIC_FUNAFUTI

  """
  Galapagos
  """
  PACIFIC_GALAPAGOS

  """
  Gambier
  """
  PACIFIC_GAMBIER

  """
  Guadalcanal
  """
  PACIFIC_GUADALCANAL

  """
  Guam
  """
  PACIFIC_GUAM

  """
  Honolulu
  """
  PACIFIC_HONOLULU

  """
  Kanton
  """
  PACIFIC_KANTON

  """
  Kiritimati
  """
  PACIFIC_KIRITIMATI

  """
  Kosrae
  """
  PACIFIC_KOSRAE

  """
  Kwajalein
  """
  PACIFIC_KWAJALEIN

  """
  Majuro
  """
  PACIFIC_MAJURO

  """
  Marquesas
  """
  PACIFIC_MARQUESAS

  """
  Midway
  """
  PACIFIC_MIDWAY

  """
  Nauru
  """
  PACIFIC_NAURU

  """
  Niue
  """
  PACIFIC_NIUE

  """
  Norfolk
  """
  PACIFIC_NORFOLK

  """
  Noumea
  """
  PACIFIC_NOUMEA

  """
  Pago Pago
  """
  PACIFIC_PAGO_PAGO

  """
  Palau
  """
  PACIFIC_PALAU

  """
  Pitcairn
  """
  PACIFIC_PITCAIRN

  """
  Pohnpei
  """
  PACIFIC_POHNPEI

  """
  Port Moresby
  """
  PACIFIC_PORT_MORESBY

  """
  Rarotonga
  """
  PACIFIC_RAROTONGA

  """
  Saipan
  """
  PACIFIC_SAIPAN

  """
  Tahiti
  """
  PACIFIC_TAHITI

  """
  Tarawa
  """
  PACIFIC_TARAWA

  """
  Tongatapu
  """
  PACIFIC_TONGATAPU

  """
  Wake
  """
  PACIFIC_WAKE

  """
  Wallis
  """
  PACIFIC_WALLIS

  """
  UTC offset: UTC+0
  """
  UTC_0

  """
  UTC offset: UTC+0:30
  """
  UTC_0_30

  """
  UTC offset: UTC+1
  """
  UTC_1

  """
  UTC offset: UTC+10
  """
  UTC_10

  """
  UTC offset: UTC+10:30
  """
  UTC_10_30

  """
  UTC offset: UTC+11
  """
  UTC_11

  """
  UTC offset: UTC+11:30
  """
  UTC_11_30

  """
  UTC offset: UTC+12
  """
  UTC_12

  """
  UTC offset: UTC+12:45
  """
  UTC_12_45

  """
  UTC offset: UTC+13
  """
  UTC_13

  """
  UTC offset: UTC+13:45
  """
  UTC_13_45

  """
  UTC offset: UTC+14
  """
  UTC_14

  """
  UTC offset: UTC+1:30
  """
  UTC_1_30

  """
  UTC offset: UTC+2
  """
  UTC_2

  """
  UTC offset: UTC+2:30
  """
  UTC_2_30

  """
  UTC offset: UTC+3
  """
  UTC_3

  """
  UTC offset: UTC+3:30
  """
  UTC_3_30

  """
  UTC offset: UTC+4
  """
  UTC_4

  """
  UTC offset: UTC+4:30
  """
  UTC_4_30

  """
  UTC offset: UTC+5
  """
  UTC_5

  """
  UTC offset: UTC+5:30
  """
  UTC_5_30

  """
  UTC offset: UTC+5:45
  """
  UTC_5_45

  """
  UTC offset: UTC+6
  """
  UTC_6

  """
  UTC offset: UTC+6:30
  """
  UTC_6_30

  """
  UTC offset: UTC+7
  """
  UTC_7

  """
  UTC offset: UTC+7:30
  """
  UTC_7_30

  """
  UTC offset: UTC+8
  """
  UTC_8

  """
  UTC offset: UTC+8:30
  """
  UTC_8_30

  """
  UTC offset: UTC+8:45
  """
  UTC_8_45

  """
  UTC offset: UTC+9
  """
  UTC_9

  """
  UTC offset: UTC+9:30
  """
  UTC_9_30
}

"""
Options for filtering the connection
"""
input MenuItemsWhereArgs {
  """
  The ID of the object
  """
  id: Int

  """
  The menu location for the menu being queried
  """
  location: MenuLocationEnum
}

union PostObjectUnion = Post | Page | MediaItem

union TermObjectUnion =
    Category
  | Tag
  | PostFormat
  | ProductType
  | VisibleProduct
  | ProductCategory
  | ProductTag
  | ShippingClass

"""
The template assigned to the node
"""
type DefaultTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type CameroonGceExamTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type CameroonCoursesListOneTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type CameroonCoursesListTwoTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type UgandaCoursesListOneTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type ZambiaCoursesListOneTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type DashboardTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type LoginTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type RegisterTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type UgandaExamTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}

"""
The template assigned to the node
"""
type EczExamsTemplate implements ContentTemplate {
  """
  The file the template uses
  """
  templateFile: String @deprecated(reason: "")

  """
  The name of the template
  """
  templateName: String @deprecated(reason: "")
}
